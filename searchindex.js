Search.setIndex({"alltitles": {"1. Encryption Service (lib/services/encryption.py)": [[7, "encryption-service-lib-services-encryption-py"]], "1. Event Publishing": [[6, "event-publishing"]], "1. Get All Patients": [[5, "get-all-patients"]], "1. New Message (new_message)": [[6, "new-message-new-message"]], "1. OpenAI Security Service (lib/services/openai_security.py)": [[4, "openai-security-service-lib-services-openai-security-py"]], "1. Patient Autonomy": [[3, "patient-autonomy"]], "1. PatientList Component": [[5, "patientlist-component"]], "1. Redis Configuration": [[6, "redis-configuration"]], "1. Test Redis Connection": [[6, "test-redis-connection"]], "1. User Makes Request": [[4, "user-makes-request"]], "2. Appointment Reminder (appointment_reminder)": [[6, "appointment-reminder-appointment-reminder"]], "2. Enhanced LLM Agent Route (lib/routes/llm_agent.py)": [[4, "enhanced-llm-agent-route-lib-routes-llm-agent-py"]], "2. Event Delivery": [[6, "event-delivery"]], "2. Get Patient by ID": [[5, "get-patient-by-id"]], "2. Install Dependencies": [[6, "install-dependencies"]], "2. Patient Component": [[5, "patient-component"]], "2. Radical Transparency": [[3, "radical-transparency"]], "2. Security Validation": [[4, "security-validation"]], "2. Test SSE in Browser": [[6, "test-sse-in-browser"]], "2. User Settings Model (lib/models/user_settings.py)": [[7, "user-settings-model-lib-models-user-settings-py"]], "3. Create New Patient": [[5, "create-new-patient"]], "3. Frontend Handling": [[6, "frontend-handling"]], "3. PatientForm Component": [[5, "patientform-component"]], "3. Privacy by Architecture": [[3, "privacy-by-architecture"]], "3. Response Processing": [[4, "response-processing"]], "3. Start Redis": [[6, "start-redis"]], "3. System Notification (system_notification)": [[6, "system-notification-system-notification"]], "3. Test Endpoints": [[6, "test-endpoints"]], "3. Usage Monitoring (/api/usage)": [[4, "usage-monitoring-api-usage"]], "3. User Service Extensions (lib/services/user_service.py)": [[7, "user-service-extensions-lib-services-user-service-py"]], "4. Commons over Enclosure": [[3, "commons-over-enclosure"]], "4. Enhanced Settings UI": [[4, "enhanced-settings-ui"]], "4. Settings Routes (lib/routes/settings.py)": [[7, "settings-routes-lib-routes-settings-py"]], "4. Update Patient": [[5, "update-patient"]], "5. Delete Patient": [[5, "delete-patient"]], "5. Sustainability, Not Hyper-Growth": [[3, "sustainability-not-hyper-growth"]], "6. Search Patients": [[5, "search-patients"]], "API Endpoints": [[7, "api-endpoints"]], "API Key Security": [[4, "api-key-security"]], "API Service (src/services/api.js)": [[5, "api-service-src-services-api-js"]], "Admin Monitoring": [[4, "admin-monitoring"]], "Architecture": [[6, "architecture"]], "ArsMedicaTech Ethical Guidelines": [[2, null]], "ArsMedicaTech Manifesto": [[3, null]], "ArsMedicaTech documentation": [[21, null]], "Backend API Endpoints": [[5, "backend-api-endpoints"]], "Backend Components": [[6, "backend-components"], [7, "backend-components"]], "Backend Usage": [[7, "backend-usage"]], "Common Errors": [[4, "common-errors"]], "Common Issues": [[6, "common-issues"], [7, "common-issues"]], "Components": [[6, "components"]], "Contents:": [[21, null]], "Contributing to ArsMedicaTech": [[0, null]], "Data Protection": [[4, "data-protection"], [7, "data-protection"]], "Database Schema": [[5, "database-schema"], [7, "database-schema"]], "Debug Commands": [[6, "debug-commands"]], "Debug Mode": [[7, "debug-mode"]], "Encryption": [[7, "encryption"]], "Environment Setup": [[7, "environment-setup"]], "Environment Variables": [[4, "environment-variables"]], "Error Handling": [[5, "error-handling"]], "Error Recovery": [[4, "error-recovery"]], "Event Types": [[6, "event-types"]], "Features": [[7, "features"]], "For Developers": [[4, "for-developers"]], "For Users": [[4, "for-users"]], "Frontend Components": [[5, "frontend-components"], [6, "frontend-components"], [7, "frontend-components"]], "Frontend Integration": [[6, "frontend-integration"]], "Frontend Usage": [[7, "frontend-usage"]], "Future Enhancements": [[5, "future-enhancements"], [6, "future-enhancements"], [7, "future-enhancements"]], "Get User Settings": [[7, "get-user-settings"]], "How It Works": [[6, "how-it-works"]], "In-Kind & Volunteer Support": [[1, "in-kind-volunteer-support"]], "Integration Points": [[6, "integration-points"]], "Integration Tests": [[4, "integration-tests"]], "Message Sending": [[6, "message-sending"]], "Module contents": [[8, "module-db"], [10, "module-llm"], [11, "module-llm.mcp"], [13, "module-migrations"], [14, "module-models"], [16, "module-opt"], [17, "module-routes"], [18, "module-services"]], "Monitoring": [[4, "monitoring"]], "OpenAI Security System": [[4, null]], "Overview": [[6, "overview"], [7, "overview"]], "Patient CRUD Operations": [[5, null]], "Patient Data Structure": [[5, "patient-data-structure"]], "Planned Features": [[4, "planned-features"]], "Rate Limiting": [[4, "rate-limiting"], [4, "id1"]], "Rate Limiting Configuration": [[4, "rate-limiting-configuration"]], "Redis/SSE Notifications System": [[6, null]], "Required Environment Variables": [[7, "required-environment-variables"]], "Routes": [[5, "routes"]], "Security Best Practices": [[7, "security-best-practices"]], "Security Features": [[7, "security-features"]], "Security Improvements": [[4, "security-improvements"]], "Security Tests": [[4, "security-tests"]], "Settings Component (src/components/Settings.tsx)": [[7, "settings-component-src-components-settings-tsx"]], "Setup Instructions": [[6, "setup-instructions"]], "Small Tasks to Get Started": [[0, "small-tasks-to-get-started"]], "Submodules": [[8, "submodules"], [10, "submodules"], [11, "submodules"], [13, "submodules"], [14, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"]], "Subpackages": [[10, "subpackages"]], "Support ArsMedicaTech": [[1, null]], "Testing": [[5, "testing"], [6, "testing"], [7, "testing"]], "Troubleshooting": [[6, "troubleshooting"], [7, "troubleshooting"]], "Update User Settings": [[7, "update-user-settings"]], "Usage Dashboard": [[4, "usage-dashboard"]], "Usage Examples": [[7, "usage-examples"]], "Usage Monitoring": [[4, "usage-monitoring"]], "User Settings System": [[7, null]], "app module": [[20, null]], "db package": [[8, null]], "db.surreal module": [[8, "module-db.surreal"]], "db.surreal_graph module": [[8, "module-db.surreal_graph"]], "db.vec module": [[8, "module-db.vec"]], "dummy_data module": [[9, null]], "lib": [[15, null]], "llm package": [[10, null]], "llm.agent module": [[10, "module-llm.agent"]], "llm.mcp package": [[11, null]], "llm.mcp.mcp_init module": [[11, "module-llm.mcp.mcp_init"]], "llm.mcp.mcp_server module": [[11, "llm-mcp-mcp-server-module"]], "llm.mcp.register_tools module": [[11, "module-llm.mcp.register_tools"]], "llm.mcp.trees module": [[11, "llm-mcp-trees-module"]], "llm.mcp_tools module": [[10, "module-llm.mcp_tools"]], "logger module": [[12, null]], "migrations package": [[13, null]], "migrations.demo module": [[13, "module-migrations.demo"]], "migrations.demo_utils module": [[13, "module-migrations.demo_utils"]], "migrations.setup_user_settings module": [[13, "module-migrations.setup_user_settings"]], "migrations.vec module": [[13, "module-migrations.vec"]], "models package": [[14, null]], "models.appointment module": [[14, "module-models.appointment"]], "models.clinic module": [[14, "module-models.clinic"]], "models.conversation module": [[14, "module-models.conversation"]], "models.graph module": [[14, "models-graph-module"]], "models.icd module": [[14, "module-models.icd"]], "models.llm_chat module": [[14, "module-models.llm_chat"]], "models.patient module": [[14, "module-models.patient"]], "models.user module": [[14, "module-models.user"]], "models.user_settings module": [[14, "module-models.user_settings"]], "opt package": [[16, null]], "opt.hypertension module": [[16, "module-opt.hypertension"]], "routes package": [[17, null]], "routes.appointments module": [[17, "module-routes.appointments"]], "routes.chat module": [[17, "module-routes.chat"]], "routes.llm_agent module": [[17, "module-routes.llm_agent"]], "routes.patients module": [[17, "module-routes.patients"]], "routes.testing module": [[17, "module-routes.testing"]], "routes.users module": [[17, "module-routes.users"]], "services package": [[18, null]], "services.apis module": [[18, "module-services.apis"]], "services.auth_decorators module": [[18, "module-services.auth_decorators"]], "services.conversation_service module": [[18, "module-services.conversation_service"]], "services.encryption module": [[18, "module-services.encryption"]], "services.llm_chat_service module": [[18, "module-services.llm_chat_service"]], "services.notifications module": [[18, "module-services.notifications"]], "services.openai_security module": [[18, "module-services.openai_security"]], "services.optimal module": [[18, "module-services.optimal"]], "services.redis_client module": [[18, "module-services.redis_client"]], "services.scheduling module": [[18, "module-services.scheduling"]], "services.user_service module": [[18, "module-services.user_service"]], "types module": [[19, null]], "}": [[17, "id1"], [17, "id2"], [17, "id3"], [17, "id4"], [17, "id5"], [17, "id6"]], "\ud83c\udfd7\ufe0f Architecture": [[4, "architecture"]], "\ud83d\udcb3 How to Contribute": [[1, "how-to-contribute"]], "\ud83d\udcc8 Monitoring & Analytics": [[4, "monitoring-analytics"]], "\ud83d\udcca Usage Statistics": [[4, "usage-statistics"]], "\ud83d\udcdc Code of Conduct": [[0, "code-of-conduct"]], "\ud83d\udcdd Developer Certificate of Origin": [[0, "developer-certificate-of-origin"]], "\ud83d\udcde Support": [[4, "support"]], "\ud83d\udd04 API Flow": [[4, "api-flow"]], "\ud83d\udd04 Reciprocity Reminder": [[0, "reciprocity-reminder"]], "\ud83d\udd0d Error Handling": [[4, "error-handling"]], "\ud83d\udd10 Security Overview": [[4, "security-overview"]], "\ud83d\udd12 Best Practices": [[4, "best-practices"]], "\ud83d\udd27 Components": [[4, "components"]], "\ud83d\udd2e Future Enhancements": [[4, "future-enhancements"]], "\ud83d\ude80 Configuration": [[4, "configuration"]], "\ud83d\udea8 Security Considerations": [[4, "security-considerations"]], "\ud83d\udee0\ufe0f How to Contribute": [[0, "how-to-contribute"]], "\ud83d\udee1\ufe0f Security Features": [[4, "security-features"]], "\ud83e\uddea Testing": [[4, "testing"]]}, "docnames": ["CONTRIBUTING", "DONATE", "ETHICS", "MANIFESTO", "OPENAI_SECURITY_README", "PATIENT_CRUD_README", "SSE_NOTIFICATIONS_README", "USER_SETTINGS_README", "api/db", "api/dummy_data", "api/llm", "api/llm.mcp", "api/logger", "api/migrations", "api/models", "api/modules", "api/opt", "api/routes", "api/services", "api/types", "app", "index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["CONTRIBUTING.md", "DONATE.md", "ETHICS.md", "MANIFESTO.md", "OPENAI_SECURITY_README.md", "PATIENT_CRUD_README.md", "SSE_NOTIFICATIONS_README.md", "USER_SETTINGS_README.md", "api/db.rst", "api/dummy_data.rst", "api/llm.rst", "api/llm.mcp.rst", "api/logger.rst", "api/migrations.rst", "api/models.rst", "api/modules.rst", "api/opt.rst", "api/routes.rst", "api/services.rst", "api/types.rst", "app.rst", "index.rst"], "indexentries": {"activate_user() (services.user_service.userservice method)": [[18, "services.user_service.UserService.activate_user", false]], "activate_user_route() (in module routes.users)": [[17, "routes.users.activate_user_route", false]], "add_message() (models.llm_chat.llmchat method)": [[14, "models.llm_chat.LLMChat.add_message", false]], "add_message() (services.conversation_service.conversationservice method)": [[18, "services.conversation_service.ConversationService.add_message", false]], "add_message() (services.llm_chat_service.llmchatservice method)": [[18, "services.llm_chat_service.LLMChatService.add_message", false]], "add_participant() (models.conversation.conversation method)": [[14, "models.conversation.Conversation.add_participant", false]], "add_some_placeholder_encounters() (in module models.patient)": [[14, "models.patient.add_some_placeholder_encounters", false]], "add_some_placeholder_patients() (in module models.patient)": [[14, "models.patient.add_some_placeholder_patients", false]], "add_tool() (llm.agent.llmagent method)": [[10, "llm.agent.LLMAgent.add_tool", false]], "appointment (class in models.appointment)": [[14, "models.appointment.Appointment", false]], "appointmentstatus (class in models.appointment)": [[14, "models.appointment.AppointmentStatus", false]], "appointmenttype (class in models.appointment)": [[14, "models.appointment.AppointmentType", false]], "asyncdbcontroller (class in db.surreal)": [[8, "db.surreal.AsyncDbController", false]], "asyncgeneratortype (in module types)": [[19, "types.AsyncGeneratorType", false]], "asyncgraphcontroller (class in db.surreal_graph)": [[8, "db.surreal_graph.AsyncGraphController", false]], "asyncsurrealwrapper (class in db.surreal)": [[8, "db.surreal.AsyncSurrealWrapper", false]], "auth_flow() (llm.mcp_tools.customheaderauth method)": [[10, "llm.mcp_tools.CustomHeaderAuth.auth_flow", false]], "authenticate_user() (services.user_service.userservice method)": [[18, "services.user_service.UserService.authenticate_user", false]], "batchitem (class in db.vec)": [[8, "db.vec.BatchItem", false]], "batchlist (class in db.vec)": [[8, "db.vec.BatchList", false]], "black (logger.customformatter attribute)": [[12, "logger.CustomFormatter.black", false]], "bold_red (logger.customformatter attribute)": [[12, "logger.CustomFormatter.bold_red", false]], "build_hypertension_payload() (in module opt.hypertension)": [[16, "opt.hypertension.build_hypertension_payload", false]], "builtinfunctiontype (in module types)": [[19, "types.BuiltinFunctionType", false]], "builtinmethodtype (in module types)": [[19, "types.BuiltinMethodType", false]], "can_be_cancelled() (models.appointment.appointment method)": [[14, "models.appointment.Appointment.can_be_cancelled", false]], "cancel_appointment() (services.scheduling.schedulingservice method)": [[18, "services.scheduling.SchedulingService.cancel_appointment", false]], "cancel_appointment_route() (in module routes.appointments)": [[17, "routes.appointments.cancel_appointment_route", false]], "cancelled (models.appointment.appointmentstatus attribute)": [[14, "models.appointment.AppointmentStatus.CANCELLED", false]], "celltype (in module types)": [[19, "types.CellType", false]], "change_password() (services.user_service.userservice method)": [[18, "services.user_service.UserService.change_password", false]], "change_password_route() (in module routes.users)": [[17, "routes.users.change_password_route", false]], "check_existing_schema() (in module migrations.setup_user_settings)": [[13, "migrations.setup_user_settings.check_existing_schema", false]], "check_rate_limit() (services.openai_security.openaisecurityservice method)": [[18, "services.openai_security.OpenAISecurityService.check_rate_limit", false]], "check_users_exist_route() (in module routes.users)": [[17, "routes.users.check_users_exist_route", false]], "classmethoddescriptortype (in module types)": [[19, "types.ClassMethodDescriptorType", false]], "clinic (class in models.clinic)": [[14, "models.clinic.Clinic", false]], "clinicaltrials (class in services.apis)": [[18, "services.apis.ClinicalTrials", false]], "close() (db.surreal.asyncdbcontroller method)": [[8, "db.surreal.AsyncDbController.close", false]], "close() (db.surreal.asyncsurrealwrapper method)": [[8, "db.surreal.AsyncSurrealWrapper.close", false]], "close() (db.surreal.dbcontroller method)": [[8, "db.surreal.DbController.close", false]], "close() (db.surreal.surrealwrapper method)": [[8, "db.surreal.SurrealWrapper.close", false]], "close() (services.conversation_service.conversationservice method)": [[18, "services.conversation_service.ConversationService.close", false]], "close() (services.llm_chat_service.llmchatservice method)": [[18, "services.llm_chat_service.LLMChatService.close", false]], "close() (services.scheduling.schedulingservice method)": [[18, "services.scheduling.SchedulingService.close", false]], "close() (services.user_service.userservice method)": [[18, "services.user_service.UserService.close", false]], "codetype (in module types)": [[19, "types.CodeType", false]], "complete() (llm.agent.llmagent method)": [[10, "llm.agent.LLMAgent.complete", false]], "complete_appointment() (services.scheduling.schedulingservice method)": [[18, "services.scheduling.SchedulingService.complete_appointment", false]], "completed (models.appointment.appointmentstatus attribute)": [[14, "models.appointment.AppointmentStatus.COMPLETED", false]], "configure() (logger.logger method)": [[12, "logger.Logger.configure", false]], "confirm_appointment() (services.scheduling.schedulingservice method)": [[18, "services.scheduling.SchedulingService.confirm_appointment", false]], "confirm_appointment_route() (in module routes.appointments)": [[17, "routes.appointments.confirm_appointment_route", false]], "confirmed (models.appointment.appointmentstatus attribute)": [[14, "models.appointment.AppointmentStatus.CONFIRMED", false]], "connect() (db.surreal.asyncdbcontroller method)": [[8, "db.surreal.AsyncDbController.connect", false]], "connect() (db.surreal.dbcontroller method)": [[8, "db.surreal.DbController.connect", false]], "connect() (services.conversation_service.conversationservice method)": [[18, "services.conversation_service.ConversationService.connect", false]], "connect() (services.llm_chat_service.llmchatservice method)": [[18, "services.llm_chat_service.LLMChatService.connect", false]], "connect() (services.scheduling.schedulingservice method)": [[18, "services.scheduling.SchedulingService.connect", false]], "connect() (services.user_service.userservice method)": [[18, "services.user_service.UserService.connect", false]], "consultation (models.appointment.appointmenttype attribute)": [[14, "models.appointment.AppointmentType.CONSULTATION", false]], "conversation (class in models.conversation)": [[14, "models.conversation.Conversation", false]], "conversationservice (class in services.conversation_service)": [[18, "services.conversation_service.ConversationService", false]], "coroutine() (in module types)": [[19, "types.coroutine", false]], "coroutinetype (in module types)": [[19, "types.CoroutineType", false]], "count_connections() (db.surreal_graph.asyncgraphcontroller method)": [[8, "db.surreal_graph.AsyncGraphController.count_connections", false]], "count_connections() (db.surreal_graph.graphcontroller method)": [[8, "db.surreal_graph.GraphController.count_connections", false]], "create() (db.surreal.asyncdbcontroller method)": [[8, "db.surreal.AsyncDbController.create", false]], "create() (db.surreal.asyncsurrealwrapper method)": [[8, "db.surreal.AsyncSurrealWrapper.create", false]], "create() (db.surreal.dbcontroller method)": [[8, "db.surreal.DbController.create", false]], "create() (db.surreal.surrealwrapper method)": [[8, "db.surreal.SurrealWrapper.create", false]], "create_appointment() (services.scheduling.schedulingservice method)": [[18, "services.scheduling.SchedulingService.create_appointment", false]], "create_appointment_route() (in module routes.appointments)": [[17, "routes.appointments.create_appointment_route", false]], "create_clinic() (in module models.clinic)": [[14, "models.clinic.create_clinic", false]], "create_conversation() (services.conversation_service.conversationservice method)": [[18, "services.conversation_service.ConversationService.create_conversation", false]], "create_conversation_route() (in module routes.chat)": [[17, "routes.chat.create_conversation_route", false]], "create_default_admin() (services.user_service.userservice method)": [[18, "services.user_service.UserService.create_default_admin", false]], "create_encounter() (in module models.patient)": [[14, "models.patient.create_encounter", false]], "create_encounter_route() (in module routes.patients)": [[17, "routes.patients.create_encounter_route", false]], "create_food_data_pd() (in module opt.hypertension)": [[16, "opt.hypertension.create_food_data_pd", false]], "create_forms() (in module migrations.demo)": [[13, "migrations.demo.create_forms", false]], "create_llm_chat() (services.llm_chat_service.llmchatservice method)": [[18, "services.llm_chat_service.LLMChatService.create_llm_chat", false]], "create_n_patients() (in module migrations.demo)": [[13, "migrations.demo.create_n_patients", false]], "create_patient() (in module models.patient)": [[14, "models.patient.create_patient", false]], "create_schema() (in module models.patient)": [[14, "models.patient.create_schema", false]], "create_user() (services.user_service.userservice method)": [[18, "services.user_service.UserService.create_user", false]], "customformatter (class in logger)": [[12, "logger.CustomFormatter", false]], "customheaderauth (class in llm.mcp_tools)": [[10, "llm.mcp_tools.CustomHeaderAuth", false]], "date_created (migrations.demo_utils.encounterfactory attribute)": [[13, "migrations.demo_utils.EncounterFactory.date_created", false]], "date_of_birth (migrations.demo_utils.patientfactory attribute)": [[13, "migrations.demo_utils.PatientFactory.date_of_birth", false]], "db": [[8, "module-db", false]], "db (db.surreal.asyncdbcontroller attribute)": [[8, "db.surreal.AsyncDbController.db", false]], "db (db.surreal.dbcontroller attribute)": [[8, "db.surreal.DbController.db", false]], "db.surreal": [[8, "module-db.surreal", false]], "db.surreal_graph": [[8, "module-db.surreal_graph", false]], "db.vec": [[8, "module-db.vec", false]], "dbcontroller (class in db.surreal)": [[8, "db.surreal.DbController", false]], "deactivate_user() (services.user_service.userservice method)": [[18, "services.user_service.UserService.deactivate_user", false]], "deactivate_user_route() (in module routes.users)": [[17, "routes.users.deactivate_user_route", false]], "debug() (logger.logger method)": [[12, "logger.Logger.debug", false]], "debug_session_route() (in module routes.testing)": [[17, "routes.testing.debug_session_route", false]], "decrypt() (services.encryption.encryptionservice method)": [[18, "services.encryption.EncryptionService.decrypt", false]], "decrypt_api_key() (services.encryption.encryptionservice method)": [[18, "services.encryption.EncryptionService.decrypt_api_key", false]], "define_index() (in module models.icd)": [[14, "models.icd.define_index", false]], "delete() (db.surreal.asyncdbcontroller method)": [[8, "db.surreal.AsyncDbController.delete", false]], "delete() (db.surreal.asyncsurrealwrapper method)": [[8, "db.surreal.AsyncSurrealWrapper.delete", false]], "delete() (db.surreal.dbcontroller method)": [[8, "db.surreal.DbController.delete", false]], "delete() (db.surreal.surrealwrapper method)": [[8, "db.surreal.SurrealWrapper.delete", false]], "delete_clinic() (in module models.clinic)": [[14, "models.clinic.delete_clinic", false]], "delete_conversation() (services.conversation_service.conversationservice method)": [[18, "services.conversation_service.ConversationService.delete_conversation", false]], "delete_encounter() (in module models.patient)": [[14, "models.patient.delete_encounter", false]], "delete_encounter_route() (in module routes.patients)": [[17, "routes.patients.delete_encounter_route", false]], "delete_patient() (in module models.patient)": [[14, "models.patient.delete_patient", false]], "deleter() (types.dynamicclassattribute method)": [[19, "types.DynamicClassAttribute.deleter", false]], "demographic_no (migrations.demo_utils.patientfactory attribute)": [[13, "migrations.demo_utils.PatientFactory.demographic_no", false]], "dummy_data": [[9, "module-dummy_data", false]], "dynamicclassattribute (class in types)": [[19, "types.DynamicClassAttribute", false]], "efetch_abstract() (services.apis.ncbi method)": [[18, "services.apis.NCBI.efetch_abstract", false]], "ellipsistype (in module types)": [[19, "types.EllipsisType", false]], "email (migrations.demo_utils.patientfactory attribute)": [[13, "migrations.demo_utils.PatientFactory.email", false]], "emergency (models.appointment.appointmenttype attribute)": [[14, "models.appointment.AppointmentType.EMERGENCY", false]], "encounter (class in migrations.demo_utils)": [[13, "migrations.demo_utils.Encounter", false]], "encounter (class in models.patient)": [[14, "models.patient.Encounter", false]], "encounterfactory (class in migrations.demo_utils)": [[13, "migrations.demo_utils.EncounterFactory", false]], "encounterfactory.meta (class in migrations.demo_utils)": [[13, "migrations.demo_utils.EncounterFactory.Meta", false]], "encrypt() (services.encryption.encryptionservice method)": [[18, "services.encryption.EncryptionService.encrypt", false]], "encrypt_api_key() (services.encryption.encryptionservice method)": [[18, "services.encryption.EncryptionService.encrypt_api_key", false]], "encryptionservice (class in services.encryption)": [[18, "services.encryption.EncryptionService", false]], "error() (logger.logger method)": [[12, "logger.Logger.error", false]], "esearch() (services.apis.ncbi method)": [[18, "services.apis.NCBI.esearch", false]], "esummary() (services.apis.ncbi method)": [[18, "services.apis.NCBI.esummary", false]], "f() (in module migrations.demo_utils)": [[13, "migrations.demo_utils.f", false]], "factorywrapper (class in migrations.demo_utils)": [[13, "migrations.demo_utils.FactoryWrapper", false]], "fetch_clinical_trials() (services.apis.clinicaltrials method)": [[18, "services.apis.ClinicalTrials.fetch_clinical_trials", false]], "fetch_history() (llm.agent.llmagent method)": [[10, "llm.agent.LLMAgent.fetch_history", false]], "fetch_mcp_tool_defs() (in module llm.mcp_tools)": [[10, "llm.mcp_tools.fetch_mcp_tool_defs", false]], "fetch_medline() (services.apis.medline method)": [[18, "services.apis.Medline.fetch_medline", false]], "fetch_ncbi_studies() (services.apis.ncbi method)": [[18, "services.apis.NCBI.fetch_ncbi_studies", false]], "find_path() (db.surreal_graph.asyncgraphcontroller method)": [[8, "db.surreal_graph.AsyncGraphController.find_path", false]], "find_path() (db.surreal_graph.graphcontroller method)": [[8, "db.surreal_graph.GraphController.find_path", false]], "first_name (migrations.demo_utils.patientfactory attribute)": [[13, "migrations.demo_utils.PatientFactory.first_name", false]], "follow_up (models.appointment.appointmenttype attribute)": [[14, "models.appointment.AppointmentType.FOLLOW_UP", false]], "format() (logger.customformatter method)": [[12, "logger.CustomFormatter.format", false]], "formats (logger.customformatter attribute)": [[12, "logger.CustomFormatter.FORMATS", false]], "frametype (in module types)": [[19, "types.FrameType", false]], "from_dict() (llm.agent.llmagent class method)": [[10, "llm.agent.LLMAgent.from_dict", false]], "from_dict() (models.appointment.appointment class method)": [[14, "models.appointment.Appointment.from_dict", false]], "from_dict() (models.conversation.conversation class method)": [[14, "models.conversation.Conversation.from_dict", false]], "from_dict() (models.conversation.message class method)": [[14, "models.conversation.Message.from_dict", false]], "from_dict() (models.llm_chat.llmchat class method)": [[14, "models.llm_chat.LLMChat.from_dict", false]], "from_dict() (models.patient.soapnotes class method)": [[14, "models.patient.SOAPNotes.from_dict", false]], "from_dict() (models.user.user class method)": [[14, "models.user.User.from_dict", false]], "from_dict() (models.user.usersession class method)": [[14, "models.user.UserSession.from_dict", false]], "from_dict() (models.user_settings.usersettings class method)": [[14, "models.user_settings.UserSettings.from_dict", false]], "from_mcp() (llm.agent.llmagent class method)": [[10, "llm.agent.LLMAgent.from_mcp", false]], "functiontype (in module types)": [[19, "types.FunctionType", false]], "generate_surrealql_create_query() (in module models.clinic)": [[14, "models.clinic.generate_surrealql_create_query", false]], "generator (llm.mcp_tools.customheaderauth attribute)": [[10, "llm.mcp_tools.CustomHeaderAuth.Generator", false]], "generatortype (in module types)": [[19, "types.GeneratorType", false]], "genericalias (class in types)": [[19, "types.GenericAlias", false]], "get_all_appointments() (services.scheduling.schedulingservice method)": [[18, "services.scheduling.SchedulingService.get_all_appointments", false]], "get_all_clinics() (in module models.clinic)": [[14, "models.clinic.get_all_clinics", false]], "get_all_encounters() (in module models.patient)": [[14, "models.patient.get_all_encounters", false]], "get_all_encounters_route() (in module routes.patients)": [[17, "routes.patients.get_all_encounters_route", false]], "get_all_patients() (in module models.patient)": [[14, "models.patient.get_all_patients", false]], "get_all_users() (services.user_service.userservice method)": [[18, "services.user_service.UserService.get_all_users", false]], "get_all_users_route() (in module routes.users)": [[17, "routes.users.get_all_users_route", false]], "get_api_usage_route() (in module routes.users)": [[17, "routes.users.get_api_usage_route", false]], "get_appointment() (services.scheduling.schedulingservice method)": [[18, "services.scheduling.SchedulingService.get_appointment", false]], "get_appointment_route() (in module routes.appointments)": [[17, "routes.appointments.get_appointment_route", false]], "get_appointment_statuses_route() (in module routes.appointments)": [[17, "routes.appointments.get_appointment_statuses_route", false]], "get_appointment_types_route() (in module routes.appointments)": [[17, "routes.appointments.get_appointment_types_route", false]], "get_appointments_by_date() (services.scheduling.schedulingservice method)": [[18, "services.scheduling.SchedulingService.get_appointments_by_date", false]], "get_appointments_by_patient() (services.scheduling.schedulingservice method)": [[18, "services.scheduling.SchedulingService.get_appointments_by_patient", false]], "get_appointments_by_provider() (services.scheduling.schedulingservice method)": [[18, "services.scheduling.SchedulingService.get_appointments_by_provider", false]], "get_appointments_route() (in module routes.appointments)": [[17, "routes.appointments.get_appointments_route", false]], "get_available_slots() (services.scheduling.schedulingservice method)": [[18, "services.scheduling.SchedulingService.get_available_slots", false]], "get_available_slots_route() (in module routes.appointments)": [[17, "routes.appointments.get_available_slots_route", false]], "get_clinic_by_id() (in module models.clinic)": [[14, "models.clinic.get_clinic_by_id", false]], "get_context() (db.vec.vec method)": [[8, "db.vec.Vec.get_context", false]], "get_conversation_by_id() (services.conversation_service.conversationservice method)": [[18, "services.conversation_service.ConversationService.get_conversation_by_id", false]], "get_conversation_by_participants() (services.conversation_service.conversationservice method)": [[18, "services.conversation_service.ConversationService.get_conversation_by_participants", false]], "get_conversation_messages() (services.conversation_service.conversationservice method)": [[18, "services.conversation_service.ConversationService.get_conversation_messages", false]], "get_conversation_messages_route() (in module routes.chat)": [[17, "routes.chat.get_conversation_messages_route", false]], "get_current_user() (in module services.auth_decorators)": [[18, "services.auth_decorators.get_current_user", false]], "get_current_user_id() (in module services.auth_decorators)": [[18, "services.auth_decorators.get_current_user_id", false]], "get_current_user_info_route() (in module routes.users)": [[17, "routes.users.get_current_user_info_route", false]], "get_current_user_role() (in module services.auth_decorators)": [[18, "services.auth_decorators.get_current_user_role", false]], "get_datetime() (models.appointment.appointment method)": [[14, "models.appointment.Appointment.get_datetime", false]], "get_duration_minutes() (models.appointment.appointment method)": [[14, "models.appointment.Appointment.get_duration_minutes", false]], "get_encounter_by_id() (in module models.patient)": [[14, "models.patient.get_encounter_by_id", false]], "get_encounter_by_id_route() (in module routes.patients)": [[17, "routes.patients.get_encounter_by_id_route", false]], "get_encounters_by_patient() (in module models.patient)": [[14, "models.patient.get_encounters_by_patient", false]], "get_encounters_by_patient_route() (in module routes.patients)": [[17, "routes.patients.get_encounters_by_patient_route", false]], "get_encryption_service() (in module services.encryption)": [[18, "services.encryption.get_encryption_service", false]], "get_full_name() (models.user.user method)": [[14, "models.user.User.get_full_name", false]], "get_llm_chat() (services.llm_chat_service.llmchatservice method)": [[18, "services.llm_chat_service.LLMChatService.get_llm_chat", false]], "get_llm_chats_for_user() (services.llm_chat_service.llmchatservice method)": [[18, "services.llm_chat_service.LLMChatService.get_llm_chats_for_user", false]], "get_openai_api_key() (models.user_settings.usersettings method)": [[14, "models.user_settings.UserSettings.get_openai_api_key", false]], "get_openai_api_key() (services.user_service.userservice method)": [[18, "services.user_service.UserService.get_openai_api_key", false]], "get_openai_security_service() (in module services.openai_security)": [[18, "services.openai_security.get_openai_security_service", false]], "get_patient_by_id() (in module models.patient)": [[14, "models.patient.get_patient_by_id", false]], "get_redis_connection() (in module services.redis_client)": [[18, "services.redis_client.get_redis_connection", false]], "get_relations() (db.surreal_graph.asyncgraphcontroller method)": [[8, "db.surreal_graph.AsyncGraphController.get_relations", false]], "get_relations() (db.surreal_graph.graphcontroller method)": [[8, "db.surreal_graph.GraphController.get_relations", false]], "get_usage_stats() (services.openai_security.openaisecurityservice method)": [[18, "services.openai_security.OpenAISecurityService.get_usage_stats", false]], "get_user_api_key_with_validation() (services.openai_security.openaisecurityservice method)": [[18, "services.openai_security.OpenAISecurityService.get_user_api_key_with_validation", false]], "get_user_by_email() (services.user_service.userservice method)": [[18, "services.user_service.UserService.get_user_by_email", false]], "get_user_by_id() (services.user_service.userservice method)": [[18, "services.user_service.UserService.get_user_by_id", false]], "get_user_by_username() (services.user_service.userservice method)": [[18, "services.user_service.UserService.get_user_by_username", false]], "get_user_conversations() (services.conversation_service.conversationservice method)": [[18, "services.conversation_service.ConversationService.get_user_conversations", false]], "get_user_conversations_route() (in module routes.chat)": [[17, "routes.chat.get_user_conversations_route", false]], "get_user_profile_route() (in module routes.users)": [[17, "routes.users.get_user_profile_route", false]], "get_user_settings() (in module routes.users)": [[17, "routes.users.get_user_settings", false]], "get_user_settings() (services.user_service.userservice method)": [[18, "services.user_service.UserService.get_user_settings", false]], "getsetdescriptortype (in module types)": [[19, "types.GetSetDescriptorType", false]], "getter() (types.dynamicclassattribute method)": [[19, "types.DynamicClassAttribute.getter", false]], "gpt_4_1 (llm.agent.llmmodel attribute)": [[10, "llm.agent.LLMModel.GPT_4_1", false]], "gpt_4_1_mini (llm.agent.llmmodel attribute)": [[10, "llm.agent.LLMModel.GPT_4_1_MINI", false]], "gpt_4_1_nano (llm.agent.llmmodel attribute)": [[10, "llm.agent.LLMModel.GPT_4_1_NANO", false]], "graphcontroller (class in db.surreal_graph)": [[8, "db.surreal_graph.GraphController", false]], "green (logger.customformatter attribute)": [[12, "logger.CustomFormatter.green", false]], "grey (logger.customformatter attribute)": [[12, "logger.CustomFormatter.grey", false]], "has_openai_api_key() (models.user_settings.usersettings method)": [[14, "models.user_settings.UserSettings.has_openai_api_key", false]], "has_openai_api_key() (services.user_service.userservice method)": [[18, "services.user_service.UserService.has_openai_api_key", false]], "has_role() (models.user.user method)": [[14, "models.user.User.has_role", false]], "hash_password() (models.user.user static method)": [[14, "models.user.User.hash_password", false]], "headers (services.optimal.optimalservice property)": [[18, "services.optimal.OptimalService.headers", false]], "health_check() (in module llm.mcp.mcp_init)": [[11, "llm.mcp.mcp_init.health_check", false]], "icd10code (class in services.apis)": [[18, "services.apis.ICD10Code", false]], "import_icd_codes() (in module models.icd)": [[14, "models.icd.import_icd_codes", false]], "info() (logger.logger method)": [[12, "logger.Logger.info", false]], "init() (db.vec.vec method)": [[8, "db.vec.Vec.init", false]], "init_vec() (in module migrations.vec)": [[13, "migrations.vec.init_vec", false]], "insert() (db.vec.vec method)": [[8, "db.vec.Vec.insert", false]], "is_admin() (models.user.user method)": [[14, "models.user.User.is_admin", false]], "is_cancelled() (models.appointment.appointment method)": [[14, "models.appointment.Appointment.is_cancelled", false]], "is_completed() (models.appointment.appointment method)": [[14, "models.appointment.Appointment.is_completed", false]], "is_confirmed() (models.appointment.appointment method)": [[14, "models.appointment.Appointment.is_confirmed", false]], "is_expired() (models.user.usersession method)": [[14, "models.user.UserSession.is_expired", false]], "is_in_past() (models.appointment.appointment method)": [[14, "models.appointment.Appointment.is_in_past", false]], "is_participant() (models.conversation.conversation method)": [[14, "models.conversation.Conversation.is_participant", false]], "is_patient() (models.user.user method)": [[14, "models.user.User.is_patient", false]], "is_provider() (models.user.user method)": [[14, "models.user.User.is_provider", false]], "is_this_week() (models.appointment.appointment method)": [[14, "models.appointment.Appointment.is_this_week", false]], "is_today() (models.appointment.appointment method)": [[14, "models.appointment.Appointment.is_today", false]], "km_m() (in module models.clinic)": [[14, "models.clinic.km_m", false]], "lambdatype (in module types)": [[19, "types.LambdaType", false]], "last_name (migrations.demo_utils.patientfactory attribute)": [[13, "migrations.demo_utils.PatientFactory.last_name", false]], "llm": [[10, "module-llm", false]], "llm.agent": [[10, "module-llm.agent", false]], "llm.mcp": [[11, "module-llm.mcp", false]], "llm.mcp.mcp_init": [[11, "module-llm.mcp.mcp_init", false]], "llm.mcp.register_tools": [[11, "module-llm.mcp.register_tools", false]], "llm.mcp_tools": [[10, "module-llm.mcp_tools", false]], "llm_agent_endpoint_route() (in module routes.llm_agent)": [[17, "routes.llm_agent.llm_agent_endpoint_route", false]], "llmagent (class in llm.agent)": [[10, "llm.agent.LLMAgent", false]], "llmchat (class in models.llm_chat)": [[14, "models.llm_chat.LLMChat", false]], "llmchatservice (class in services.llm_chat_service)": [[18, "services.llm_chat_service.LLMChatService", false]], "llmmodel (class in llm.agent)": [[10, "llm.agent.LLMModel", false]], "load_csv() (in module migrations.demo_utils)": [[13, "migrations.demo_utils.load_csv", false]], "location (migrations.demo_utils.patientfactory attribute)": [[13, "migrations.demo_utils.PatientFactory.location", false]], "log_api_usage() (services.openai_security.openaisecurityservice method)": [[18, "services.openai_security.OpenAISecurityService.log_api_usage", false]], "log_format (logger.customformatter attribute)": [[12, "logger.CustomFormatter.log_format", false]], "logger": [[12, "module-logger", false]], "logger (class in logger)": [[12, "logger.Logger", false]], "login_route() (in module routes.users)": [[17, "routes.users.login_route", false]], "logout() (services.user_service.userservice method)": [[18, "services.user_service.UserService.logout", false]], "logout_route() (in module routes.users)": [[17, "routes.users.logout_route", false]], "lookup_icd_code() (in module models.icd)": [[14, "models.icd.lookup_icd_code", false]], "main() (in module migrations.setup_user_settings)": [[13, "migrations.setup_user_settings.main", false]], "main() (in module opt.hypertension)": [[16, "opt.hypertension.main", false]], "mappingproxytype (in module types)": [[19, "types.MappingProxyType", false]], "mark_messages_as_read() (services.conversation_service.conversationservice method)": [[18, "services.conversation_service.ConversationService.mark_messages_as_read", false]], "medline (class in services.apis)": [[18, "services.apis.Medline", false]], "memberdescriptortype (in module types)": [[19, "types.MemberDescriptorType", false]], "message (class in models.conversation)": [[14, "models.conversation.Message", false]], "methoddescriptortype (in module types)": [[19, "types.MethodDescriptorType", false]], "methodtype (in module types)": [[19, "types.MethodType", false]], "methodwrappertype (in module types)": [[19, "types.MethodWrapperType", false]], "migrations": [[13, "module-migrations", false]], "migrations.demo": [[13, "module-migrations.demo", false]], "migrations.demo_utils": [[13, "module-migrations.demo_utils", false]], "migrations.setup_user_settings": [[13, "module-migrations.setup_user_settings", false]], "migrations.vec": [[13, "module-migrations.vec", false]], "model (migrations.demo_utils.encounterfactory.meta attribute)": [[13, "migrations.demo_utils.EncounterFactory.Meta.model", false]], "model (migrations.demo_utils.patientfactory.meta attribute)": [[13, "migrations.demo_utils.PatientFactory.Meta.model", false]], "models": [[14, "module-models", false]], "models.appointment": [[14, "module-models.appointment", false]], "models.clinic": [[14, "module-models.clinic", false]], "models.conversation": [[14, "module-models.conversation", false]], "models.icd": [[14, "module-models.icd", false]], "models.llm_chat": [[14, "module-models.llm_chat", false]], "models.patient": [[14, "module-models.patient", false]], "models.user": [[14, "module-models.user", false]], "models.user_settings": [[14, "module-models.user_settings", false]], "module": [[8, "module-db", false], [8, "module-db.surreal", false], [8, "module-db.surreal_graph", false], [8, "module-db.vec", false], [9, "module-dummy_data", false], [10, "module-llm", false], [10, "module-llm.agent", false], [10, "module-llm.mcp_tools", false], [11, "module-llm.mcp", false], [11, "module-llm.mcp.mcp_init", false], [11, "module-llm.mcp.register_tools", false], [12, "module-logger", false], [13, "module-migrations", false], [13, "module-migrations.demo", false], [13, "module-migrations.demo_utils", false], [13, "module-migrations.setup_user_settings", false], [13, "module-migrations.vec", false], [14, "module-models", false], [14, "module-models.appointment", false], [14, "module-models.clinic", false], [14, "module-models.conversation", false], [14, "module-models.icd", false], [14, "module-models.llm_chat", false], [14, "module-models.patient", false], [14, "module-models.user", false], [14, "module-models.user_settings", false], [16, "module-opt", false], [16, "module-opt.hypertension", false], [17, "module-routes", false], [17, "module-routes.appointments", false], [17, "module-routes.chat", false], [17, "module-routes.llm_agent", false], [17, "module-routes.patients", false], [17, "module-routes.testing", false], [17, "module-routes.users", false], [18, "module-services", false], [18, "module-services.apis", false], [18, "module-services.auth_decorators", false], [18, "module-services.conversation_service", false], [18, "module-services.encryption", false], [18, "module-services.llm_chat_service", false], [18, "module-services.notifications", false], [18, "module-services.openai_security", false], [18, "module-services.optimal", false], [18, "module-services.redis_client", false], [18, "module-services.scheduling", false], [18, "module-services.user_service", false], [19, "module-types", false]], "moduletype (in module types)": [[19, "types.ModuleType", false]], "ncbi (class in services.apis)": [[18, "services.apis.NCBI", false]], "new_class() (in module types)": [[19, "types.new_class", false]], "no_show (models.appointment.appointmentstatus attribute)": [[14, "models.appointment.AppointmentStatus.NO_SHOW", false]], "nonetype (class in types)": [[19, "types.NoneType", false]], "note_id (migrations.demo_utils.encounterfactory attribute)": [[13, "migrations.demo_utils.EncounterFactory.note_id", false]], "note_text (migrations.demo_utils.encounterfactory attribute)": [[13, "migrations.demo_utils.EncounterFactory.note_text", false]], "notimplementedtype (class in types)": [[19, "types.NotImplementedType", false]], "openaisecurityservice (class in services.openai_security)": [[18, "services.openai_security.OpenAISecurityService", false]], "opt": [[16, "module-opt", false]], "opt.hypertension": [[16, "module-opt.hypertension", false]], "optimalmetadata (class in services.optimal)": [[18, "services.optimal.OptimalMetadata", false]], "optimalschema (class in services.optimal)": [[18, "services.optimal.OptimalSchema", false]], "optimalservice (class in services.optimal)": [[18, "services.optimal.OptimalService", false]], "optional_auth() (in module services.auth_decorators)": [[18, "services.auth_decorators.optional_auth", false]], "patch_intake_route() (in module routes.patients)": [[17, "routes.patients.patch_intake_route", false]], "patient (class in models.patient)": [[14, "models.patient.Patient", false]], "patient_endpoint_route() (in module routes.patients)": [[17, "routes.patients.patient_endpoint_route", false]], "patientfactory (class in migrations.demo_utils)": [[13, "migrations.demo_utils.PatientFactory", false]], "patientfactory.meta (class in migrations.demo_utils)": [[13, "migrations.demo_utils.PatientFactory.Meta", false]], "patients_endpoint_route() (in module routes.patients)": [[17, "routes.patients.patients_endpoint_route", false]], "payload (services.optimal.optimalservice property)": [[18, "services.optimal.OptimalService.payload", false]], "phone (migrations.demo_utils.patientfactory attribute)": [[13, "migrations.demo_utils.PatientFactory.phone", false]], "prepare_class() (in module types)": [[19, "types.prepare_class", false]], "process_tool_call() (in module llm.agent)": [[10, "llm.agent.process_tool_call", false]], "process_tool_calls() (llm.agent.llmagent method)": [[10, "llm.agent.LLMAgent.process_tool_calls", false]], "provider_id (migrations.demo_utils.encounterfactory attribute)": [[13, "migrations.demo_utils.EncounterFactory.provider_id", false]], "publish_event() (in module services.notifications)": [[18, "services.notifications.publish_event", false]], "publish_event_with_buffer() (in module services.notifications)": [[18, "services.notifications.publish_event_with_buffer", false]], "query() (db.surreal.asyncdbcontroller method)": [[8, "db.surreal.AsyncDbController.query", false]], "query() (db.surreal.asyncsurrealwrapper method)": [[8, "db.surreal.AsyncSurrealWrapper.query", false]], "query() (db.surreal.dbcontroller method)": [[8, "db.surreal.DbController.query", false]], "query() (db.surreal.surrealwrapper method)": [[8, "db.surreal.SurrealWrapper.query", false]], "rag_chat() (db.vec.vec method)": [[8, "db.vec.Vec.rag_chat", false]], "red (logger.customformatter attribute)": [[12, "logger.CustomFormatter.red", false]], "register_openai_tool() (in module llm.mcp.register_tools)": [[11, "llm.mcp.register_tools.register_openai_tool", false]], "register_route() (in module routes.users)": [[17, "routes.users.register_route", false]], "relate() (db.surreal_graph.asyncgraphcontroller method)": [[8, "db.surreal_graph.AsyncGraphController.relate", false]], "relate() (db.surreal_graph.graphcontroller method)": [[8, "db.surreal_graph.GraphController.relate", false]], "remove_participant() (models.conversation.conversation method)": [[14, "models.conversation.Conversation.remove_participant", false]], "require_admin() (in module services.auth_decorators)": [[18, "services.auth_decorators.require_admin", false]], "require_auth() (in module services.auth_decorators)": [[18, "services.auth_decorators.require_auth", false]], "require_patient() (in module services.auth_decorators)": [[18, "services.auth_decorators.require_patient", false]], "require_provider() (in module services.auth_decorators)": [[18, "services.auth_decorators.require_provider", false]], "require_role() (in module services.auth_decorators)": [[18, "services.auth_decorators.require_role", false]], "reset (logger.customformatter attribute)": [[12, "logger.CustomFormatter.reset", false]], "reset_conversation() (llm.agent.llmagent method)": [[10, "llm.agent.LLMAgent.reset_conversation", false]], "resolve_bases() (in module types)": [[19, "types.resolve_bases", false]], "routes": [[17, "module-routes", false]], "routes.appointments": [[17, "module-routes.appointments", false]], "routes.chat": [[17, "module-routes.chat", false]], "routes.llm_agent": [[17, "module-routes.llm_agent", false]], "routes.patients": [[17, "module-routes.patients", false]], "routes.testing": [[17, "module-routes.testing", false]], "routes.users": [[17, "module-routes.users", false]], "routine (models.appointment.appointmenttype attribute)": [[14, "models.appointment.AppointmentType.ROUTINE", false]], "save_csv() (in module migrations.demo_utils)": [[13, "migrations.demo_utils.save_csv", false]], "save_user_settings() (services.user_service.userservice method)": [[18, "services.user_service.UserService.save_user_settings", false]], "scheduled (models.appointment.appointmentstatus attribute)": [[14, "models.appointment.AppointmentStatus.SCHEDULED", false]], "schedulingservice (class in services.scheduling)": [[18, "services.scheduling.SchedulingService", false]], "schema() (models.appointment.appointment method)": [[14, "models.appointment.Appointment.schema", false]], "schema() (models.patient.encounter method)": [[14, "models.patient.Encounter.schema", false]], "schema() (models.patient.patient method)": [[14, "models.patient.Patient.schema", false]], "search() (db.surreal.dbcontroller method)": [[8, "db.surreal.DbController.search", false]], "search_clinics_by_location() (in module models.clinic)": [[14, "models.clinic.search_clinics_by_location", false]], "search_encounter_history() (in module models.patient)": [[14, "models.patient.search_encounter_history", false]], "search_encounters_route() (in module routes.patients)": [[17, "routes.patients.search_encounters_route", false]], "search_icd_by_description() (in module models.icd)": [[14, "models.icd.search_icd_by_description", false]], "search_patient_history() (in module models.patient)": [[14, "models.patient.search_patient_history", false]], "search_patients_route() (in module routes.patients)": [[17, "routes.patients.search_patients_route", false]], "search_pubmed() (services.apis.ncbi method)": [[18, "services.apis.NCBI.search_pubmed", false]], "search_users_route() (in module routes.users)": [[17, "routes.users.search_users_route", false]], "seed() (db.vec.vec method)": [[8, "db.vec.Vec.seed", false]], "select() (db.surreal.asyncdbcontroller method)": [[8, "db.surreal.AsyncDbController.select", false]], "select() (db.surreal.asyncsurrealwrapper method)": [[8, "db.surreal.AsyncSurrealWrapper.select", false]], "select() (db.surreal.dbcontroller method)": [[8, "db.surreal.DbController.select", false]], "select() (db.surreal.surrealwrapper method)": [[8, "db.surreal.SurrealWrapper.select", false]], "select_many() (db.surreal.asyncdbcontroller method)": [[8, "db.surreal.AsyncDbController.select_many", false]], "select_many() (db.surreal.dbcontroller method)": [[8, "db.surreal.DbController.select_many", false]], "select_n_random_rows_from_csv() (in module migrations.demo_utils)": [[13, "migrations.demo_utils.select_n_random_rows_from_csv", false]], "send() (services.optimal.optimalservice method)": [[18, "services.optimal.OptimalService.send", false]], "send_message_route() (in module routes.chat)": [[17, "routes.chat.send_message_route", false]], "serialize() (models.patient.soapnotes method)": [[14, "models.patient.SOAPNotes.serialize", false]], "serialize_encounter() (in module models.patient)": [[14, "models.patient.serialize_encounter", false]], "serialize_patient() (in module models.patient)": [[14, "models.patient.serialize_patient", false]], "services": [[18, "module-services", false]], "services.apis": [[18, "module-services.apis", false]], "services.auth_decorators": [[18, "module-services.auth_decorators", false]], "services.conversation_service": [[18, "module-services.conversation_service", false]], "services.encryption": [[18, "module-services.encryption", false]], "services.llm_chat_service": [[18, "module-services.llm_chat_service", false]], "services.notifications": [[18, "module-services.notifications", false]], "services.openai_security": [[18, "module-services.openai_security", false]], "services.optimal": [[18, "module-services.optimal", false]], "services.redis_client": [[18, "module-services.redis_client", false]], "services.scheduling": [[18, "module-services.scheduling", false]], "services.user_service": [[18, "module-services.user_service", false]], "set_openai_api_key() (models.user_settings.usersettings method)": [[14, "models.user_settings.UserSettings.set_openai_api_key", false]], "setter() (types.dynamicclassattribute method)": [[19, "types.DynamicClassAttribute.setter", false]], "settings_route() (in module routes.users)": [[17, "routes.users.settings_route", false]], "setup_default_admin_route() (in module routes.users)": [[17, "routes.users.setup_default_admin_route", false]], "setup_user_settings_schema() (in module migrations.setup_user_settings)": [[13, "migrations.setup_user_settings.setup_user_settings_schema", false]], "sex (migrations.demo_utils.patientfactory attribute)": [[13, "migrations.demo_utils.PatientFactory.sex", false]], "signin() (db.surreal.asyncsurrealwrapper method)": [[8, "db.surreal.AsyncSurrealWrapper.signin", false]], "signin() (db.surreal.surrealwrapper method)": [[8, "db.surreal.SurrealWrapper.signin", false]], "simplenamespace (class in types)": [[19, "types.SimpleNamespace", false]], "soapnotes (class in models.patient)": [[14, "models.patient.SOAPNotes", false]], "specialist (models.appointment.appointmenttype attribute)": [[14, "models.appointment.AppointmentType.SPECIALIST", false]], "store_encounter() (in module models.patient)": [[14, "models.patient.store_encounter", false]], "store_event() (in module services.notifications)": [[18, "services.notifications.store_event", false]], "store_patient() (in module models.patient)": [[14, "models.patient.store_patient", false]], "surrealwrapper (class in db.surreal)": [[8, "db.surreal.SurrealWrapper", false]], "test() (in module models.clinic)": [[14, "models.clinic.test", false]], "test_crud_route() (in module routes.testing)": [[17, "routes.testing.test_crud_route", false]], "test_surrealdb_route() (in module routes.testing)": [[17, "routes.testing.test_surrealdb_route", false]], "to_dict() (llm.agent.llmagent method)": [[10, "llm.agent.LLMAgent.to_dict", false]], "to_dict() (models.appointment.appointment method)": [[14, "models.appointment.Appointment.to_dict", false]], "to_dict() (models.conversation.conversation method)": [[14, "models.conversation.Conversation.to_dict", false]], "to_dict() (models.conversation.message method)": [[14, "models.conversation.Message.to_dict", false]], "to_dict() (models.llm_chat.llmchat method)": [[14, "models.llm_chat.LLMChat.to_dict", false]], "to_dict() (models.user.user method)": [[14, "models.user.User.to_dict", false]], "to_dict() (models.user.usersession method)": [[14, "models.user.UserSession.to_dict", false]], "to_dict() (models.user_settings.usersettings method)": [[14, "models.user_settings.UserSettings.to_dict", false]], "to_dict() (services.optimal.optimalmetadata method)": [[18, "services.optimal.OptimalMetadata.to_dict", false]], "to_dict() (services.optimal.optimalschema method)": [[18, "services.optimal.OptimalSchema.to_dict", false]], "to_geojson_point() (models.clinic.clinic method)": [[14, "models.clinic.Clinic.to_geojson_point", false]], "tracebacktype (in module types)": [[19, "types.TracebackType", false]], "types": [[19, "module-types", false]], "uniontype (class in types)": [[19, "types.UnionType", false]], "update() (db.surreal.asyncdbcontroller method)": [[8, "db.surreal.AsyncDbController.update", false]], "update() (db.surreal.asyncsurrealwrapper method)": [[8, "db.surreal.AsyncSurrealWrapper.update", false]], "update() (db.surreal.dbcontroller method)": [[8, "db.surreal.DbController.update", false]], "update() (db.surreal.surrealwrapper method)": [[8, "db.surreal.SurrealWrapper.update", false]], "update_appointment() (services.scheduling.schedulingservice method)": [[18, "services.scheduling.SchedulingService.update_appointment", false]], "update_appointment_route() (in module routes.appointments)": [[17, "routes.appointments.update_appointment_route", false]], "update_clinic() (in module models.clinic)": [[14, "models.clinic.update_clinic", false]], "update_encounter() (in module models.patient)": [[14, "models.patient.update_encounter", false]], "update_encounter_route() (in module routes.patients)": [[17, "routes.patients.update_encounter_route", false]], "update_openai_api_key() (services.user_service.userservice method)": [[18, "services.user_service.UserService.update_openai_api_key", false]], "update_patient() (in module models.patient)": [[14, "models.patient.update_patient", false]], "update_user() (services.user_service.userservice method)": [[18, "services.user_service.UserService.update_user", false]], "update_user_profile_route() (in module routes.users)": [[17, "routes.users.update_user_profile_route", false]], "update_user_settings() (in module routes.users)": [[17, "routes.users.update_user_settings", false]], "use() (db.surreal.asyncsurrealwrapper method)": [[8, "db.surreal.AsyncSurrealWrapper.use", false]], "use() (db.surreal.surrealwrapper method)": [[8, "db.surreal.SurrealWrapper.use", false]], "user (class in models.user)": [[14, "models.user.User", false]], "userservice (class in services.user_service)": [[18, "services.user_service.UserService", false]], "usersession (class in models.user)": [[14, "models.user.UserSession", false]], "usersettings (class in models.user_settings)": [[14, "models.user_settings.UserSettings", false]], "validate() (services.apis.icd10code method)": [[18, "services.apis.ICD10Code.validate", false]], "validate_api_key() (services.openai_security.openaisecurityservice method)": [[18, "services.openai_security.OpenAISecurityService.validate_api_key", false]], "validate_email() (models.user.user static method)": [[14, "models.user.User.validate_email", false]], "validate_openai_api_key() (models.user_settings.usersettings static method)": [[14, "models.user_settings.UserSettings.validate_openai_api_key", false]], "validate_password() (models.user.user static method)": [[14, "models.user.User.validate_password", false]], "validate_phone() (models.user.user static method)": [[14, "models.user.User.validate_phone", false]], "validate_role() (models.user.user static method)": [[14, "models.user.User.validate_role", false]], "validate_session() (services.user_service.userservice method)": [[18, "services.user_service.UserService.validate_session", false]], "validate_username() (models.user.user static method)": [[14, "models.user.User.validate_username", false]], "vec (class in db.vec)": [[8, "db.vec.Vec", false]], "verify_password() (models.user.user method)": [[14, "models.user.User.verify_password", false]], "warn() (logger.logger method)": [[12, "logger.Logger.warn", false]], "warning() (logger.logger method)": [[12, "logger.Logger.warning", false]], "wrapperdescriptortype (in module types)": [[19, "types.WrapperDescriptorType", false]], "yellow (logger.customformatter attribute)": [[12, "logger.CustomFormatter.yellow", false]]}, "objects": {"": [[8, 0, 0, "-", "db"], [9, 0, 0, "-", "dummy_data"], [10, 0, 0, "-", "llm"], [12, 0, 0, "-", "logger"], [13, 0, 0, "-", "migrations"], [14, 0, 0, "-", "models"], [16, 0, 0, "-", "opt"], [17, 0, 0, "-", "routes"], [18, 0, 0, "-", "services"], [19, 0, 0, "-", "types"]], "db": [[8, 0, 0, "-", "surreal"], [8, 0, 0, "-", "surreal_graph"], [8, 0, 0, "-", "vec"]], "db.surreal": [[8, 1, 1, "", "AsyncDbController"], [8, 1, 1, "", "AsyncSurrealWrapper"], [8, 1, 1, "", "DbController"], [8, 1, 1, "", "SurrealWrapper"]], "db.surreal.AsyncDbController": [[8, 2, 1, "", "close"], [8, 2, 1, "", "connect"], [8, 2, 1, "", "create"], [8, 3, 1, "", "db"], [8, 2, 1, "", "delete"], [8, 2, 1, "", "query"], [8, 2, 1, "", "select"], [8, 2, 1, "", "select_many"], [8, 2, 1, "", "update"]], "db.surreal.AsyncSurrealWrapper": [[8, 2, 1, "", "close"], [8, 2, 1, "", "create"], [8, 2, 1, "", "delete"], [8, 2, 1, "", "query"], [8, 2, 1, "", "select"], [8, 2, 1, "", "signin"], [8, 2, 1, "", "update"], [8, 2, 1, "", "use"]], "db.surreal.DbController": [[8, 2, 1, "", "close"], [8, 2, 1, "", "connect"], [8, 2, 1, "", "create"], [8, 3, 1, "", "db"], [8, 2, 1, "", "delete"], [8, 2, 1, "", "query"], [8, 2, 1, "", "search"], [8, 2, 1, "", "select"], [8, 2, 1, "", "select_many"], [8, 2, 1, "", "update"]], "db.surreal.SurrealWrapper": [[8, 2, 1, "", "close"], [8, 2, 1, "", "create"], [8, 2, 1, "", "delete"], [8, 2, 1, "", "query"], [8, 2, 1, "", "select"], [8, 2, 1, "", "signin"], [8, 2, 1, "", "update"], [8, 2, 1, "", "use"]], "db.surreal_graph": [[8, 1, 1, "", "AsyncGraphController"], [8, 1, 1, "", "GraphController"]], "db.surreal_graph.AsyncGraphController": [[8, 2, 1, "", "count_connections"], [8, 2, 1, "", "find_path"], [8, 2, 1, "", "get_relations"], [8, 2, 1, "", "relate"]], "db.surreal_graph.GraphController": [[8, 2, 1, "", "count_connections"], [8, 2, 1, "", "find_path"], [8, 2, 1, "", "get_relations"], [8, 2, 1, "", "relate"]], "db.vec": [[8, 1, 1, "", "BatchItem"], [8, 1, 1, "", "BatchList"], [8, 1, 1, "", "Vec"]], "db.vec.Vec": [[8, 2, 1, "", "get_context"], [8, 2, 1, "", "init"], [8, 2, 1, "", "insert"], [8, 2, 1, "", "rag_chat"], [8, 2, 1, "", "seed"]], "llm": [[10, 0, 0, "-", "agent"], [11, 0, 0, "-", "mcp"], [10, 0, 0, "-", "mcp_tools"]], "llm.agent": [[10, 1, 1, "", "LLMAgent"], [10, 1, 1, "", "LLMModel"], [10, 4, 1, "", "process_tool_call"]], "llm.agent.LLMAgent": [[10, 2, 1, "", "add_tool"], [10, 2, 1, "", "complete"], [10, 2, 1, "", "fetch_history"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_mcp"], [10, 2, 1, "", "process_tool_calls"], [10, 2, 1, "", "reset_conversation"], [10, 2, 1, "", "to_dict"]], "llm.agent.LLMModel": [[10, 3, 1, "", "GPT_4_1"], [10, 3, 1, "", "GPT_4_1_MINI"], [10, 3, 1, "", "GPT_4_1_NANO"]], "llm.mcp": [[11, 0, 0, "-", "mcp_init"], [11, 0, 0, "-", "register_tools"]], "llm.mcp.mcp_init": [[11, 4, 1, "", "health_check"]], "llm.mcp.register_tools": [[11, 4, 1, "", "register_openai_tool"]], "llm.mcp_tools": [[10, 1, 1, "", "CustomHeaderAuth"], [10, 4, 1, "", "fetch_mcp_tool_defs"]], "llm.mcp_tools.CustomHeaderAuth": [[10, 3, 1, "", "Generator"], [10, 2, 1, "", "auth_flow"]], "logger": [[12, 1, 1, "", "CustomFormatter"], [12, 1, 1, "", "Logger"]], "logger.CustomFormatter": [[12, 3, 1, "", "FORMATS"], [12, 3, 1, "", "black"], [12, 3, 1, "", "bold_red"], [12, 2, 1, "", "format"], [12, 3, 1, "", "green"], [12, 3, 1, "", "grey"], [12, 3, 1, "", "log_format"], [12, 3, 1, "", "red"], [12, 3, 1, "", "reset"], [12, 3, 1, "", "yellow"]], "logger.Logger": [[12, 2, 1, "", "configure"], [12, 2, 1, "", "debug"], [12, 2, 1, "", "error"], [12, 2, 1, "", "info"], [12, 2, 1, "", "warn"], [12, 2, 1, "", "warning"]], "migrations": [[13, 0, 0, "-", "demo"], [13, 0, 0, "-", "demo_utils"], [13, 0, 0, "-", "setup_user_settings"], [13, 0, 0, "-", "vec"]], "migrations.demo": [[13, 4, 1, "", "create_forms"], [13, 4, 1, "", "create_n_patients"]], "migrations.demo_utils": [[13, 1, 1, "", "Encounter"], [13, 1, 1, "", "EncounterFactory"], [13, 1, 1, "", "FactoryWrapper"], [13, 1, 1, "", "PatientFactory"], [13, 4, 1, "", "f"], [13, 4, 1, "", "load_csv"], [13, 4, 1, "", "save_csv"], [13, 4, 1, "", "select_n_random_rows_from_csv"]], "migrations.demo_utils.EncounterFactory": [[13, 1, 1, "", "Meta"], [13, 3, 1, "", "date_created"], [13, 3, 1, "", "note_id"], [13, 3, 1, "", "note_text"], [13, 3, 1, "", "provider_id"]], "migrations.demo_utils.EncounterFactory.Meta": [[13, 3, 1, "", "model"]], "migrations.demo_utils.PatientFactory": [[13, 1, 1, "", "Meta"], [13, 3, 1, "", "date_of_birth"], [13, 3, 1, "", "demographic_no"], [13, 3, 1, "", "email"], [13, 3, 1, "", "first_name"], [13, 3, 1, "", "last_name"], [13, 3, 1, "", "location"], [13, 3, 1, "", "phone"], [13, 3, 1, "", "sex"]], "migrations.demo_utils.PatientFactory.Meta": [[13, 3, 1, "", "model"]], "migrations.setup_user_settings": [[13, 4, 1, "", "check_existing_schema"], [13, 4, 1, "", "main"], [13, 4, 1, "", "setup_user_settings_schema"]], "migrations.vec": [[13, 4, 1, "", "init_vec"]], "models": [[14, 0, 0, "-", "appointment"], [14, 0, 0, "-", "clinic"], [14, 0, 0, "-", "conversation"], [14, 0, 0, "-", "icd"], [14, 0, 0, "-", "llm_chat"], [14, 0, 0, "-", "patient"], [14, 0, 0, "-", "user"], [14, 0, 0, "-", "user_settings"]], "models.appointment": [[14, 1, 1, "", "Appointment"], [14, 1, 1, "", "AppointmentStatus"], [14, 1, 1, "", "AppointmentType"]], "models.appointment.Appointment": [[14, 2, 1, "", "can_be_cancelled"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "get_datetime"], [14, 2, 1, "", "get_duration_minutes"], [14, 2, 1, "", "is_cancelled"], [14, 2, 1, "", "is_completed"], [14, 2, 1, "", "is_confirmed"], [14, 2, 1, "", "is_in_past"], [14, 2, 1, "", "is_this_week"], [14, 2, 1, "", "is_today"], [14, 2, 1, "", "schema"], [14, 2, 1, "", "to_dict"]], "models.appointment.AppointmentStatus": [[14, 3, 1, "", "CANCELLED"], [14, 3, 1, "", "COMPLETED"], [14, 3, 1, "", "CONFIRMED"], [14, 3, 1, "", "NO_SHOW"], [14, 3, 1, "", "SCHEDULED"]], "models.appointment.AppointmentType": [[14, 3, 1, "", "CONSULTATION"], [14, 3, 1, "", "EMERGENCY"], [14, 3, 1, "", "FOLLOW_UP"], [14, 3, 1, "", "ROUTINE"], [14, 3, 1, "", "SPECIALIST"]], "models.clinic": [[14, 1, 1, "", "Clinic"], [14, 4, 1, "", "create_clinic"], [14, 4, 1, "", "delete_clinic"], [14, 4, 1, "", "generate_surrealql_create_query"], [14, 4, 1, "", "get_all_clinics"], [14, 4, 1, "", "get_clinic_by_id"], [14, 4, 1, "", "km_m"], [14, 4, 1, "", "search_clinics_by_location"], [14, 4, 1, "", "test"], [14, 4, 1, "", "update_clinic"]], "models.clinic.Clinic": [[14, 2, 1, "", "to_geojson_point"]], "models.conversation": [[14, 1, 1, "", "Conversation"], [14, 1, 1, "", "Message"]], "models.conversation.Conversation": [[14, 2, 1, "", "add_participant"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "is_participant"], [14, 2, 1, "", "remove_participant"], [14, 2, 1, "", "to_dict"]], "models.conversation.Message": [[14, 2, 1, "", "from_dict"], [14, 2, 1, "", "to_dict"]], "models.icd": [[14, 4, 1, "", "define_index"], [14, 4, 1, "", "import_icd_codes"], [14, 4, 1, "", "lookup_icd_code"], [14, 4, 1, "", "search_icd_by_description"]], "models.llm_chat": [[14, 1, 1, "", "LLMChat"]], "models.llm_chat.LLMChat": [[14, 2, 1, "", "add_message"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "to_dict"]], "models.patient": [[14, 1, 1, "", "Encounter"], [14, 1, 1, "", "Patient"], [14, 1, 1, "", "SOAPNotes"], [14, 4, 1, "", "add_some_placeholder_encounters"], [14, 4, 1, "", "add_some_placeholder_patients"], [14, 4, 1, "", "create_encounter"], [14, 4, 1, "", "create_patient"], [14, 4, 1, "", "create_schema"], [14, 4, 1, "", "delete_encounter"], [14, 4, 1, "", "delete_patient"], [14, 4, 1, "", "get_all_encounters"], [14, 4, 1, "", "get_all_patients"], [14, 4, 1, "", "get_encounter_by_id"], [14, 4, 1, "", "get_encounters_by_patient"], [14, 4, 1, "", "get_patient_by_id"], [14, 4, 1, "", "search_encounter_history"], [14, 4, 1, "", "search_patient_history"], [14, 4, 1, "", "serialize_encounter"], [14, 4, 1, "", "serialize_patient"], [14, 4, 1, "", "store_encounter"], [14, 4, 1, "", "store_patient"], [14, 4, 1, "", "update_encounter"], [14, 4, 1, "", "update_patient"]], "models.patient.Encounter": [[14, 2, 1, "", "schema"]], "models.patient.Patient": [[14, 2, 1, "", "schema"]], "models.patient.SOAPNotes": [[14, 2, 1, "", "from_dict"], [14, 2, 1, "", "serialize"]], "models.user": [[14, 1, 1, "", "User"], [14, 1, 1, "", "UserSession"]], "models.user.User": [[14, 2, 1, "", "from_dict"], [14, 2, 1, "", "get_full_name"], [14, 2, 1, "", "has_role"], [14, 2, 1, "", "hash_password"], [14, 2, 1, "", "is_admin"], [14, 2, 1, "", "is_patient"], [14, 2, 1, "", "is_provider"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "validate_email"], [14, 2, 1, "", "validate_password"], [14, 2, 1, "", "validate_phone"], [14, 2, 1, "", "validate_role"], [14, 2, 1, "", "validate_username"], [14, 2, 1, "", "verify_password"]], "models.user.UserSession": [[14, 2, 1, "", "from_dict"], [14, 2, 1, "", "is_expired"], [14, 2, 1, "", "to_dict"]], "models.user_settings": [[14, 1, 1, "", "UserSettings"]], "models.user_settings.UserSettings": [[14, 2, 1, "", "from_dict"], [14, 2, 1, "", "get_openai_api_key"], [14, 2, 1, "", "has_openai_api_key"], [14, 2, 1, "", "set_openai_api_key"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "validate_openai_api_key"]], "opt": [[16, 0, 0, "-", "hypertension"]], "opt.hypertension": [[16, 4, 1, "", "build_hypertension_payload"], [16, 4, 1, "", "create_food_data_pd"], [16, 4, 1, "", "main"]], "routes": [[17, 0, 0, "-", "appointments"], [17, 0, 0, "-", "chat"], [17, 0, 0, "-", "llm_agent"], [17, 0, 0, "-", "patients"], [17, 0, 0, "-", "testing"], [17, 0, 0, "-", "users"]], "routes.appointments": [[17, 4, 1, "", "cancel_appointment_route"], [17, 4, 1, "", "confirm_appointment_route"], [17, 4, 1, "", "create_appointment_route"], [17, 4, 1, "", "get_appointment_route"], [17, 4, 1, "", "get_appointment_statuses_route"], [17, 4, 1, "", "get_appointment_types_route"], [17, 4, 1, "", "get_appointments_route"], [17, 4, 1, "", "get_available_slots_route"], [17, 4, 1, "", "update_appointment_route"]], "routes.chat": [[17, 4, 1, "", "create_conversation_route"], [17, 4, 1, "", "get_conversation_messages_route"], [17, 4, 1, "", "get_user_conversations_route"], [17, 4, 1, "", "send_message_route"]], "routes.llm_agent": [[17, 4, 1, "", "llm_agent_endpoint_route"]], "routes.patients": [[17, 4, 1, "", "create_encounter_route"], [17, 4, 1, "", "delete_encounter_route"], [17, 4, 1, "", "get_all_encounters_route"], [17, 4, 1, "", "get_encounter_by_id_route"], [17, 4, 1, "", "get_encounters_by_patient_route"], [17, 4, 1, "", "patch_intake_route"], [17, 4, 1, "", "patient_endpoint_route"], [17, 4, 1, "", "patients_endpoint_route"], [17, 4, 1, "", "search_encounters_route"], [17, 4, 1, "", "search_patients_route"], [17, 4, 1, "", "update_encounter_route"]], "routes.testing": [[17, 4, 1, "", "debug_session_route"], [17, 4, 1, "", "test_crud_route"], [17, 4, 1, "", "test_surrealdb_route"]], "routes.users": [[17, 4, 1, "", "activate_user_route"], [17, 4, 1, "", "change_password_route"], [17, 4, 1, "", "check_users_exist_route"], [17, 4, 1, "", "deactivate_user_route"], [17, 4, 1, "", "get_all_users_route"], [17, 4, 1, "", "get_api_usage_route"], [17, 4, 1, "", "get_current_user_info_route"], [17, 4, 1, "", "get_user_profile_route"], [17, 4, 1, "", "get_user_settings"], [17, 4, 1, "", "login_route"], [17, 4, 1, "", "logout_route"], [17, 4, 1, "", "register_route"], [17, 4, 1, "", "search_users_route"], [17, 4, 1, "", "settings_route"], [17, 4, 1, "", "setup_default_admin_route"], [17, 4, 1, "", "update_user_profile_route"], [17, 4, 1, "", "update_user_settings"]], "services": [[18, 0, 0, "-", "apis"], [18, 0, 0, "-", "auth_decorators"], [18, 0, 0, "-", "conversation_service"], [18, 0, 0, "-", "encryption"], [18, 0, 0, "-", "llm_chat_service"], [18, 0, 0, "-", "notifications"], [18, 0, 0, "-", "openai_security"], [18, 0, 0, "-", "optimal"], [18, 0, 0, "-", "redis_client"], [18, 0, 0, "-", "scheduling"], [18, 0, 0, "-", "user_service"]], "services.apis": [[18, 1, 1, "", "ClinicalTrials"], [18, 1, 1, "", "ICD10Code"], [18, 1, 1, "", "Medline"], [18, 1, 1, "", "NCBI"]], "services.apis.ClinicalTrials": [[18, 2, 1, "", "fetch_clinical_trials"]], "services.apis.ICD10Code": [[18, 2, 1, "", "validate"]], "services.apis.Medline": [[18, 2, 1, "", "fetch_medline"]], "services.apis.NCBI": [[18, 2, 1, "", "efetch_abstract"], [18, 2, 1, "", "esearch"], [18, 2, 1, "", "esummary"], [18, 2, 1, "", "fetch_ncbi_studies"], [18, 2, 1, "", "search_pubmed"]], "services.auth_decorators": [[18, 4, 1, "", "get_current_user"], [18, 4, 1, "", "get_current_user_id"], [18, 4, 1, "", "get_current_user_role"], [18, 4, 1, "", "optional_auth"], [18, 4, 1, "", "require_admin"], [18, 4, 1, "", "require_auth"], [18, 4, 1, "", "require_patient"], [18, 4, 1, "", "require_provider"], [18, 4, 1, "", "require_role"]], "services.conversation_service": [[18, 1, 1, "", "ConversationService"]], "services.conversation_service.ConversationService": [[18, 2, 1, "", "add_message"], [18, 2, 1, "", "close"], [18, 2, 1, "", "connect"], [18, 2, 1, "", "create_conversation"], [18, 2, 1, "", "delete_conversation"], [18, 2, 1, "", "get_conversation_by_id"], [18, 2, 1, "", "get_conversation_by_participants"], [18, 2, 1, "", "get_conversation_messages"], [18, 2, 1, "", "get_user_conversations"], [18, 2, 1, "", "mark_messages_as_read"]], "services.encryption": [[18, 1, 1, "", "EncryptionService"], [18, 4, 1, "", "get_encryption_service"]], "services.encryption.EncryptionService": [[18, 2, 1, "", "decrypt"], [18, 2, 1, "", "decrypt_api_key"], [18, 2, 1, "", "encrypt"], [18, 2, 1, "", "encrypt_api_key"]], "services.llm_chat_service": [[18, 1, 1, "", "LLMChatService"]], "services.llm_chat_service.LLMChatService": [[18, 2, 1, "", "add_message"], [18, 2, 1, "", "close"], [18, 2, 1, "", "connect"], [18, 2, 1, "", "create_llm_chat"], [18, 2, 1, "", "get_llm_chat"], [18, 2, 1, "", "get_llm_chats_for_user"]], "services.notifications": [[18, 4, 1, "", "publish_event"], [18, 4, 1, "", "publish_event_with_buffer"], [18, 4, 1, "", "store_event"]], "services.openai_security": [[18, 1, 1, "", "OpenAISecurityService"], [18, 4, 1, "", "get_openai_security_service"]], "services.openai_security.OpenAISecurityService": [[18, 2, 1, "", "check_rate_limit"], [18, 2, 1, "", "get_usage_stats"], [18, 2, 1, "", "get_user_api_key_with_validation"], [18, 2, 1, "", "log_api_usage"], [18, 2, 1, "", "validate_api_key"]], "services.optimal": [[18, 1, 1, "", "OptimalMetadata"], [18, 1, 1, "", "OptimalSchema"], [18, 1, 1, "", "OptimalService"]], "services.optimal.OptimalMetadata": [[18, 2, 1, "", "to_dict"]], "services.optimal.OptimalSchema": [[18, 2, 1, "", "to_dict"]], "services.optimal.OptimalService": [[18, 5, 1, "", "headers"], [18, 5, 1, "", "payload"], [18, 2, 1, "", "send"]], "services.redis_client": [[18, 4, 1, "", "get_redis_connection"]], "services.scheduling": [[18, 1, 1, "", "SchedulingService"]], "services.scheduling.SchedulingService": [[18, 2, 1, "", "cancel_appointment"], [18, 2, 1, "", "close"], [18, 2, 1, "", "complete_appointment"], [18, 2, 1, "", "confirm_appointment"], [18, 2, 1, "", "connect"], [18, 2, 1, "", "create_appointment"], [18, 2, 1, "", "get_all_appointments"], [18, 2, 1, "", "get_appointment"], [18, 2, 1, "", "get_appointments_by_date"], [18, 2, 1, "", "get_appointments_by_patient"], [18, 2, 1, "", "get_appointments_by_provider"], [18, 2, 1, "", "get_available_slots"], [18, 2, 1, "", "update_appointment"]], "services.user_service": [[18, 1, 1, "", "UserService"]], "services.user_service.UserService": [[18, 2, 1, "", "activate_user"], [18, 2, 1, "", "authenticate_user"], [18, 2, 1, "", "change_password"], [18, 2, 1, "", "close"], [18, 2, 1, "", "connect"], [18, 2, 1, "", "create_default_admin"], [18, 2, 1, "", "create_user"], [18, 2, 1, "", "deactivate_user"], [18, 2, 1, "", "get_all_users"], [18, 2, 1, "", "get_openai_api_key"], [18, 2, 1, "", "get_user_by_email"], [18, 2, 1, "", "get_user_by_id"], [18, 2, 1, "", "get_user_by_username"], [18, 2, 1, "", "get_user_settings"], [18, 2, 1, "", "has_openai_api_key"], [18, 2, 1, "", "logout"], [18, 2, 1, "", "save_user_settings"], [18, 2, 1, "", "update_openai_api_key"], [18, 2, 1, "", "update_user"], [18, 2, 1, "", "validate_session"]], "types": [[19, 3, 1, "", "AsyncGeneratorType"], [19, 3, 1, "", "BuiltinFunctionType"], [19, 3, 1, "", "BuiltinMethodType"], [19, 3, 1, "", "CellType"], [19, 3, 1, "", "ClassMethodDescriptorType"], [19, 3, 1, "", "CodeType"], [19, 3, 1, "", "CoroutineType"], [19, 1, 1, "", "DynamicClassAttribute"], [19, 3, 1, "", "EllipsisType"], [19, 3, 1, "", "FrameType"], [19, 3, 1, "", "FunctionType"], [19, 3, 1, "", "GeneratorType"], [19, 1, 1, "", "GenericAlias"], [19, 3, 1, "", "GetSetDescriptorType"], [19, 3, 1, "", "LambdaType"], [19, 3, 1, "", "MappingProxyType"], [19, 3, 1, "", "MemberDescriptorType"], [19, 3, 1, "", "MethodDescriptorType"], [19, 3, 1, "", "MethodType"], [19, 3, 1, "", "MethodWrapperType"], [19, 3, 1, "", "ModuleType"], [19, 1, 1, "", "NoneType"], [19, 1, 1, "", "NotImplementedType"], [19, 1, 1, "", "SimpleNamespace"], [19, 3, 1, "", "TracebackType"], [19, 1, 1, "", "UnionType"], [19, 3, 1, "", "WrapperDescriptorType"], [19, 4, 1, "", "coroutine"], [19, 4, 1, "", "new_class"], [19, 4, 1, "", "prepare_class"], [19, 4, 1, "", "resolve_bases"]], "types.DynamicClassAttribute": [[19, 2, 1, "", "deleter"], [19, 2, 1, "", "getter"], [19, 2, 1, "", "setter"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property"}, "terms": {"": [8, 10, 12, 14, 17, 18, 19], "0": [6, 14, 18], "00": [6, 7, 17, 18], "000": 7, "00z": [6, 17], "01": [6, 7, 17], "01t00": [7, 17], "01t12": 17, "02t00": 17, "09": 17, "0m": 12, "1": [0, 8, 10, 17, 18, 21], "10": [1, 12, 14, 17, 18, 19], "100": [1, 4, 7, 17, 18], "11": 17, "113883": 18, "123": [6, 7, 8, 17], "12345": [14, 17], "1234567890": 17, "16": 18, "1640995200": 4, "1m": 12, "2": [0, 17, 18, 21], "20": [12, 17, 18], "200": 17, "201": [5, 17], "2023": 17, "2024": 7, "2025": 6, "20m": 12, "20t10": 6, "20t14": 6, "256": [4, 7, 14], "2fjson": 18, "3": [8, 19, 21], "30": [1, 6, 12, 17, 18], "31": 12, "32": [4, 7, 12], "33": 12, "35": 18, "3600": 4, "38": 12, "4": [8, 10, 19, 21], "40": 12, "400": [5, 8, 17], "401": [17, 18], "403": [17, 18], "404": [5, 17], "456": [6, 8], "5": [1, 4, 13, 17, 18, 21], "50": [12, 18], "500": [5, 17], "5000": [6, 14, 17], "55": 1, "560": 19, "585": 19, "6": [6, 18], "604": 19, "6379": 6, "67890": 17, "840": 18, "8700": 8, "9": [18, 19], "90": 18, "A": [5, 8, 10, 13, 14, 17, 18, 19], "At": 17, "By": 0, "For": 6, "If": [8, 10, 14, 17, 18, 19], "In": [0, 4, 6], "It": [8, 14, 17, 18, 21], "NOT": 11, "No": [4, 7, 17], "Not": [6, 17, 21], "Or": 6, "TO": 11, "The": [4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 17, 18], "These": 2, "To": 6, "WITH": 11, "__args__": 19, "__getattr__": 19, "__origin__": 19, "__prepare__": 19, "about": [3, 10, 18], "absolut": 2, "abstract": 18, "abus": 4, "accept": [17, 18], "access": [2, 3, 4, 6, 7, 8, 10, 17, 18, 19], "account": [1, 7, 17, 18], "accur": 10, "accuraci": 4, "acknowledg": 6, "across": 14, "act": 19, "action": 5, "activ": [6, 17, 18, 19], "activate_us": [15, 18], "activate_user_rout": [15, 17], "ad": [14, 18], "adapt": 4, "add": [5, 6, 7, 10, 12, 14, 18, 21], "add_messag": [14, 15, 18], "add_particip": [14, 15], "add_some_placeholder_encount": [14, 15], "add_some_placeholder_pati": [14, 15], "add_tool": [10, 15], "addit": [2, 4, 7, 10, 12, 18], "additional_not": 14, "address": [5, 14, 17, 18], "adjust": 4, "admin": [14, 17, 18], "administr": 17, "advanc": [4, 5], "advisor": 1, "ae": [4, 7], "afford": 2, "after": 6, "again": 4, "against": [4, 14], "agent": [15, 17], "agpl": [0, 2], "agplv3": [0, 3], "agre": 0, "ai": [1, 2, 14, 17], "ai_assist": [17, 18], "alert": 4, "algorithm": 3, "alia": [10, 13, 19], "all": [2, 3, 6, 7, 8, 14, 17, 18], "allow": [17, 18, 19], "along": 17, "alpin": 6, "alreadi": [6, 13, 14], "also": 14, "alwai": 7, "am": 18, "amount": 4, "an": [1, 5, 8, 10, 12, 13, 14, 17, 18, 19], "analyt": 21, "ani": [2, 6, 8, 10, 12, 14, 16, 17, 18, 19], "annual": [1, 2, 6], "anomali": 4, "answer": [8, 10], "api": [6, 8, 10, 14, 15, 17, 21], "api_kei": [4, 7, 8, 10, 14, 18], "api_usag": 17, "apiservic": 7, "app": [6, 21], "append": 18, "applic": [5, 6, 7, 17, 18], "appoint": [15, 18], "appointment_d": [14, 17, 18], "appointment_id": [17, 18], "appointment_status": 17, "appointment_typ": [14, 17, 18], "appointmentid": 6, "appointmentstatu": [14, 15], "appointmenttyp": [14, 15], "appropri": [5, 6, 12, 19], "apt": 6, "ar": [0, 2, 3, 4, 5, 6, 7, 8, 10, 14, 17, 18], "architectur": 21, "aren": 19, "arg": [12, 13], "argument": [10, 12, 19], "arrai": 5, "arsmedicatech": [4, 6, 7, 11], "articl": 18, "asctim": 12, "ask": 8, "assert": 0, "assess": 14, "assist": [8, 10, 14, 17, 18], "assistant_id": [14, 18], "associ": 14, "assum": 0, "async": [8, 10, 11, 14], "async_db_control": 8, "asyncdbcontrol": [8, 14, 15], "asyncgeneratortyp": [15, 19], "asyncgraphcontrol": [8, 15], "asynchron": [8, 14], "asyncio": 8, "asyncopenai": 8, "asyncsurr": 8, "asyncsurrealwrapp": [8, 15], "atribut": 19, "attach": 5, "attack": 4, "attempt": [13, 18], "attribut": 19, "attributeerror": 19, "audit": [1, 2, 3, 4, 5, 7], "augment": 8, "auth": [10, 18], "auth_decor": 15, "auth_flow": [10, 15], "authent": [4, 6, 7, 8, 14, 17, 18], "authenticate_us": [15, 18], "author": [7, 18], "automat": [4, 7], "autonomi": 21, "avail": [5, 14, 17, 18], "available_slot": 17, "avatar": 17, "avoid": 18, "await": 7, "awesom": 0, "b": 0, "back": 3, "backend": [4, 21], "background": 17, "backup": [1, 7], "bad": 17, "bar": 4, "base": [6, 7, 8, 10, 12, 13, 14, 17, 18, 19], "base64": 18, "basic": 17, "batch": 8, "batchitem": [8, 15], "batchlist": [8, 15], "bearer": 7, "befor": 7, "being": [2, 4, 18], "belong": 3, "benchmark": 2, "benefic": 2, "benefit": 0, "best": 21, "better": 18, "between": [8, 14, 18, 19], "beyond": 2, "bi": 6, "bill": 18, "black": [12, 15], "bodi": [3, 17], "bold_r": [12, 15], "bool": [13, 14, 18], "both": [4, 5, 17], "bound": 18, "bounti": 1, "branch": 0, "break": 3, "brew": 6, "buffer": [6, 18], "bug": 1, "build": [10, 16], "build_hypertension_payload": [15, 16], "built": 19, "builtin": 19, "builtinfunctiontyp": [15, 19], "builtinmethodtyp": [15, 19], "bulk": 5, "busi": [3, 18], "button": 5, "c": 18, "cach": 4, "calcul": 14, "call": [4, 5, 6, 7, 10, 17, 19], "call_funct": 10, "callabl": [10, 11, 18], "callback": 6, "can": [0, 2, 5, 7, 10, 14, 17], "can_be_cancel": [14, 15], "cancel": [14, 15, 17, 18], "cancel_appoint": [15, 18], "cancel_appointment_rout": [15, 17], "cannot": [8, 17], "capabl": 5, "cardiologi": 17, "care": [2, 3, 10], "case": [5, 14, 17], "cd": 7, "celltyp": [15, 19], "certif": 21, "chang": [7, 17, 18], "change_password": [15, 17, 18], "change_password_rout": [15, 17], "channel": 18, "charact": [4, 5, 7], "chat": [6, 8, 14, 15, 18], "chatcompletionmessagetoolcal": 10, "chatcompletiontoolparam": 10, "check": [0, 4, 6, 7, 11, 13, 14, 17, 18], "check_exist": 17, "check_existing_schema": [13, 15], "check_rate_limit": [4, 15, 18], "check_users_exist_rout": [15, 17], "checkout": 0, "checkup": 6, "citi": [5, 14, 17], "class": [8, 10, 12, 13, 14, 18, 19], "classmethod": [10, 14], "classmethoddescriptortyp": [15, 19], "cleanup": [4, 17], "clear": 10, "cli": 6, "client": [8, 11, 18], "clinic": [0, 1, 2, 3, 10, 15, 17, 18], "clinic_address": [14, 17], "clinic_id": 14, "clinic_nam": [14, 17], "clinicaltri": [15, 18], "clinician": 3, "close": [8, 15, 18], "cloud": 1, "code": [2, 3, 5, 13, 14, 17, 18, 21], "code_of_conduct": 0, "codeinterpretertoolcal": 10, "codetyp": [15, 19], "collect": [1, 2, 3], "color": 12, "column": [13, 14], "com": [0, 17], "command": 3, "commit": 0, "common": 21, "commun": [1, 2, 6], "compat": 8, "complet": [5, 10, 14, 15, 17, 18], "complete_appoint": [15, 18], "complianc": 4, "complic": 11, "compon": 21, "comprehens": 4, "concis": 10, "condit": 18, "conduct": 21, "configur": [7, 12, 15, 21], "confirm": [14, 15, 17, 18], "confirm_appoint": [15, 18], "confirm_appointment_rout": [15, 17], "conflict": 18, "connect": [4, 7, 8, 13, 14, 15, 18], "consent": [2, 3], "consider": 21, "consol": 6, "const": [5, 6, 7], "constraint": 18, "construct": 18, "consult": [14, 15, 17, 18], "contact": [4, 5], "contain": [8, 10, 11, 13, 14, 16, 17, 18], "content": [6, 7, 15], "context": [2, 8, 11, 18], "continu": 18, "contradict": 3, "contribut": 21, "contributor": 0, "control": [3, 4, 7, 8], "conv": 6, "conv12345": 17, "convent": 0, "convers": [6, 10, 15, 17, 18], "conversation_id": [6, 14, 17, 18], "conversation_object": 18, "conversation_servic": 15, "conversation_typ": [14, 18], "conversationservic": [15, 18], "convert": [10, 14, 18, 19], "cooki": 6, "copi": 19, "copyleft": 3, "cor": 6, "coroutin": [15, 19], "coroutinetyp": [15, 19], "correctli": [5, 18], "correspond": 10, "corrupt": 7, "cost": [3, 4], "count": [4, 8, 17], "count_connect": [8, 15], "countri": 5, "coven": 0, "creat": [0, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19], "create_appoint": [15, 18], "create_appointment_rout": [15, 17], "create_clin": [14, 15], "create_convers": [15, 18], "create_conversation_rout": [15, 17], "create_default_admin": [15, 18], "create_encount": [14, 15], "create_encounter_rout": [15, 17], "create_food_data_pd": [15, 16], "create_form": [13, 15], "create_llm_chat": [15, 18], "create_n_pati": [13, 15], "create_pati": [14, 15], "create_schema": [14, 15], "create_us": [15, 18], "created_at": [6, 7, 14, 17], "creation": [7, 14, 17], "credenti": [8, 17], "crud": [17, 21], "csv": [13, 14], "csv_file_path": 14, "ctx": 11, "curl": [6, 18], "current": [4, 8, 11, 17, 18], "current_password": [17, 18], "current_user_id": 6, "custom": [10, 12, 18], "custom_llm_endpoint": 10, "customformatt": [12, 15], "customheaderauth": [10, 15], "cycl": 5, "d": [6, 12], "data": [2, 3, 6, 8, 9, 10, 13, 14, 16, 17, 18, 21], "data_sourc": 8, "data_typ": 8, "databas": [6, 8, 10, 13, 14, 17, 18, 21], "datafram": 16, "dataset": 1, "date": [5, 7, 17, 18], "date_cr": [13, 14, 15], "date_of_birth": [5, 13, 14, 15], "datefmt": 12, "datetim": 14, "db": [14, 15, 21], "db_control": [8, 18], "db_url": 8, "dbcontrol": [8, 14, 15, 18], "dco": 0, "dd": 18, "deactiv": [17, 18], "deactivate_us": [15, 18], "deactivate_user_rout": [15, 17], "debian": 6, "debug": [4, 8, 12, 15, 17, 18], "debug_session_rout": [15, 17], "decis": 3, "declar": 2, "decor": 18, "decrypt": [7, 14, 15, 18], "decrypt_api_kei": [7, 15, 18], "decrypted_kei": 7, "default": [8, 12, 14, 17, 18], "defin": [13, 14, 19], "define_index": [14, 15], "definit": [10, 11, 14], "degrad": 4, "delai": 18, "delet": [2, 8, 14, 15, 17, 18, 19], "delete_clin": [14, 15], "delete_convers": [15, 18], "delete_encount": [14, 15], "delete_encounter_rout": [15, 17], "delete_pati": [14, 15], "deliv": 6, "demo": 15, "demo_util": 15, "democratis": 0, "demographic_no": [5, 13, 14, 15], "demonstr": [2, 14], "deni": 17, "denial": 2, "deploi": 0, "deriv": [4, 7], "describ": [4, 5, 7], "descript": 14, "descriptor": 19, "design": [3, 4, 5, 7], "desktop": 7, "destini": 3, "detail": [4, 5, 7, 14, 17, 18, 21], "detect": 4, "develop": [3, 21], "devic": [6, 7], "df": 16, "diagnost": 13, "diagnostic_cod": [13, 14], "dict": [8, 10, 11, 14, 16, 18, 19], "dictionari": [8, 10, 14, 18], "diet": 16, "differ": [17, 19], "digit": 0, "direct": [2, 6, 8, 18], "directli": 19, "discrimin": 2, "displai": [4, 5, 7, 17], "distanc": 14, "distribut": 4, "dn": 18, "do": 4, "doc": [0, 1, 19], "docker": 6, "document": [0, 4, 5, 6, 7, 13], "doe": [8, 11, 13, 14, 17, 18], "doesn": 18, "dollar": [1, 4], "don": 7, "donat": 2, "done": 19, "dr": 6, "dropdown": 17, "due": 11, "dummi": 9, "dummy_data": [15, 21], "durat": [14, 17, 18], "duration_minut": [17, 18], "dure": [5, 17], "dynam": 19, "dynamicclassattribut": [15, 19], "e": [8, 10, 13, 14, 17, 18, 19], "each": [4, 6, 8, 10, 13, 14, 18], "edg": 8, "edge_data": 8, "edge_t": 8, "edit": 5, "efetch": 18, "efetch_abstract": [15, 18], "ellipsi": 19, "ellipsistyp": [15, 19], "email": [5, 13, 14, 15, 17, 18], "embed": 8, "embed_model": 8, "emerg": [14, 15, 17], "empti": [8, 14, 17, 18, 19], "en": 18, "enabl": 7, "enclosur": 21, "encod": 18, "encodeuricompon": 5, "encount": [5, 13, 14, 15, 17], "encounter_data": 14, "encounter_id": [14, 17], "encounterdict": 14, "encounterfactori": [13, 15], "encourag": 2, "encrypt": [3, 4, 6, 14, 15], "encrypt_api_kei": [7, 15, 18], "encrypted_api_kei": 18, "encrypted_data": 18, "encrypted_kei": 7, "encryption_kei": [4, 7], "encryption_servic": 7, "encryptionservic": [15, 18], "end": [4, 8, 17, 18], "end_dat": 18, "end_tabl": 8, "end_tim": [14, 17, 18], "endpoint": [4, 11, 17, 21], "enforc": 4, "enhanc": 21, "enough": 8, "ensur": [4, 6, 7, 14, 17, 18], "entrez": 18, "entri": 19, "enum": [10, 14, 19], "enumer": 10, "env": 6, "environ": 21, "equit": 2, "error": [6, 7, 8, 12, 14, 15, 17, 18, 21], "error_messag": [14, 18], "esearch": [15, 18], "establish": [6, 18], "esummari": [15, 18], "etc": [2, 17, 18], "ethic": 21, "even": 3, "event": [18, 21], "event_data": [6, 18], "eventdata": 18, "everi": [0, 1, 3, 10, 13], "everyon": 3, "exampl": [0, 8, 17, 21], "exceed": [4, 18], "except": [8, 18], "exclud": 17, "exec_bodi": 19, "execut": [8, 10], "exist": [5, 7, 8, 10, 13, 17, 18], "expect": [14, 17], "expens": 1, "experi": 4, "expir": 14, "expires_at": 14, "explain": 6, "export": [2, 5, 7], "expos": [3, 7], "extract": 3, "f": [5, 13, 15, 18], "factor": [4, 7], "factori": 13, "factory_class": 13, "factorywrapp": [13, 15], "fail": [4, 6, 7, 8, 14, 17, 18], "failur": [4, 7, 17], "fair": 4, "faith": 0, "faker": 13, "fallback": 4, "fals": [13, 14, 17, 18], "fastmcp": 11, "fdel": 19, "feat": 0, "featur": [0, 1, 2, 3, 21], "feel": 6, "femal": 5, "fernet": 7, "fetch": [6, 10, 18], "fetch_clinical_tri": [15, 18], "fetch_histori": [10, 15], "fetch_mcp_tool_def": [10, 15], "fetch_medlin": [15, 18], "fetch_ncbi_studi": [15, 18], "fget": 19, "fhir": 0, "field": [5, 8, 14, 17, 18], "file": [5, 6, 8, 13, 14], "filenam": 12, "filesearchtoolcal": 10, "fill": 0, "filter": [5, 8, 17, 18], "financ": 1, "find": 8, "find_path": [8, 15], "firewal": 6, "first": [0, 1, 13, 14, 17, 18], "first_nam": [5, 13, 14, 15, 17, 18], "fix": [0, 1], "flask": [5, 6, 10, 18], "float": [14, 18], "flow": [2, 3, 21], "fmt": 12, "fn": 11, "focus": 7, "follow": [0, 5, 7, 14, 17], "follow_up": [14, 15, 17], "food": 16, "forbidden": [17, 18], "fork": [0, 3], "form": [5, 13], "format": [0, 4, 5, 6, 7, 10, 12, 14, 15, 17, 18], "formatt": 12, "foster": 3, "found": [5, 14, 17, 18], "frametyp": [15, 19], "friendli": 4, "from": [3, 6, 7, 8, 10, 13, 14, 17, 18, 19], "from_dict": [10, 14, 15], "from_mcp": [10, 15], "from_record": 8, "frontend": [4, 21], "fset": 19, "ft": 17, "full": [5, 14], "func": 19, "function": [6, 10, 11, 13, 14, 16, 17, 18, 19], "functiontoolcal": 10, "functiontyp": [15, 19], "fund": [1, 2], "futur": 21, "fy2025": 14, "g": [8, 10, 13, 14, 17, 18, 19], "gdpr": [2, 4], "gener": [7, 8, 10, 13, 14, 15, 19], "generate_surrealql_create_queri": [14, 15], "generatortyp": [15, 19], "genericalia": [15, 19], "geograph": 4, "geojson": 14, "geospati": 14, "get": [4, 6, 8, 14, 17, 18], "get_all_appoint": [15, 18], "get_all_clin": [14, 15], "get_all_encount": [14, 15], "get_all_encounters_rout": [15, 17], "get_all_pati": [14, 15], "get_all_us": [15, 18], "get_all_users_rout": [15, 17], "get_api_usage_rout": [15, 17], "get_appoint": [15, 18], "get_appointment_rout": [15, 17], "get_appointment_statuses_rout": [15, 17], "get_appointment_types_rout": [15, 17], "get_appointments_by_d": [15, 18], "get_appointments_by_pati": [15, 18], "get_appointments_by_provid": [15, 18], "get_appointments_rout": [15, 17], "get_available_slot": [15, 18], "get_available_slots_rout": [15, 17], "get_clinic_by_id": [14, 15], "get_context": [8, 15], "get_conversation_by_id": [15, 18], "get_conversation_by_particip": [15, 18], "get_conversation_messag": [15, 18], "get_conversation_messages_rout": [15, 17], "get_current_us": [15, 18], "get_current_user_id": [15, 18], "get_current_user_info_rout": [15, 17], "get_current_user_rol": [15, 18], "get_datetim": [14, 15], "get_duration_minut": [14, 15], "get_encounter_by_id": [14, 15], "get_encounter_by_id_rout": [15, 17], "get_encounters_by_pati": [14, 15], "get_encounters_by_patient_rout": [15, 17], "get_encryption_servic": [7, 15, 18], "get_full_nam": [14, 15], "get_llm_chat": [15, 18], "get_llm_chats_for_us": [15, 18], "get_openai_api_kei": [7, 14, 15, 18], "get_openai_security_servic": [15, 18], "get_patient_by_id": [14, 15], "get_redis_connect": [15, 18], "get_rel": [8, 15], "get_usage_stat": [4, 15, 18], "get_user_api_key_with_valid": [4, 15, 18], "get_user_by_email": [15, 18], "get_user_by_id": [15, 18], "get_user_by_usernam": [15, 18], "get_user_convers": [15, 18], "get_user_conversations_rout": [15, 17], "get_user_profile_rout": [15, 17], "get_user_set": [7, 15, 17, 18], "getal": 5, "getapi": 7, "getbyid": 5, "getsetdescriptortyp": [15, 19], "getter": [7, 15, 19], "git": 0, "github": 1, "given": [8, 10, 14, 17, 18], "global": 18, "goe": 1, "good": 0, "gov": 18, "gpt": [8, 10], "gpt_4_1": [10, 15], "gpt_4_1_mini": [10, 15], "gpt_4_1_nano": [10, 15], "grace": 4, "graph": [8, 15], "graphcontrol": [8, 15], "green": [12, 15], "grei": [12, 15], "group": 17, "grow": 3, "growth": 21, "guarante": 6, "guidelin": 21, "h": [6, 18], "ha": [4, 7, 8, 14, 17, 18], "hand": 3, "handl": [7, 14, 17, 21], "handleappointmentremind": 6, "handlenewmessag": 6, "handler": 18, "handlesystemnotif": 6, "happen": 7, "harass": 0, "has_kei": 7, "has_openai_api_kei": [7, 14, 15, 17, 18], "has_rol": [14, 15], "hash": 14, "hash_password": [14, 15], "have": [0, 8, 14, 17, 18, 19], "headach": 17, "header": [10, 15, 17, 18], "health": [0, 1, 2, 11], "health_check": [10, 11], "healthcar": [3, 10, 14, 17], "heart": 17, "hello": [6, 17], "help": 10, "helper": 18, "here": 7, "hh": 18, "hide": 7, "high": 18, "highest": 4, "hipaa": [2, 4], "histor": 4, "histori": [5, 10, 17], "hit": 18, "hook": 6, "host": [2, 6], "hour": [4, 6, 18], "how": 21, "http": [0, 4, 5, 6, 10, 17, 18], "httpx": 10, "hyper": 21, "hypertens": 15, "i": [1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 17, 18, 19], "icd": [15, 18], "icd10": 18, "icd10_cod": 18, "icd10cod": [14, 15, 18], "icd_cod": 14, "id": [6, 7, 8, 10, 14, 17, 18], "identif": 7, "identifi": [2, 5], "immedi": [4, 6], "implement": [4, 5, 7, 8, 10], "import": [7, 14], "import_icd_cod": [14, 15], "improv": [0, 2], "inact": 17, "includ": [5, 6, 17, 18], "incomplet": 6, "index": [5, 14], "indic": [8, 11, 17], "individu": 3, "inference_model": 8, "inflat": 3, "influenc": 3, "info": [12, 15], "inform": [2, 4, 5, 7, 8, 10, 11, 14, 17, 18], "informationrecipi": 18, "inherit": 18, "init": [8, 15], "init_vec": [13, 15], "initi": [8, 11, 13, 17], "initial_guess": 18, "inject": 11, "inner": 13, "input": [4, 7, 18], "insensit": 17, "insert": [8, 14, 15], "inspect": [3, 19], "instanc": [2, 8, 10, 11, 13, 14, 18, 19], "instruct": 21, "int": [8, 13, 14, 17, 18, 19], "intak": 17, "integr": [2, 5, 21], "intend": 17, "interact": [10, 14, 17, 18], "interfac": 6, "intern": 17, "invalid": [4, 5, 7, 14, 17], "invit": 3, "ip": 4, "is_act": 14, "is_admin": [14, 15], "is_cancel": [14, 15], "is_complet": [14, 15], "is_confirm": [14, 15], "is_expir": [14, 15], "is_in_past": [14, 15], "is_particip": [14, 15], "is_pati": [14, 15], "is_provid": [14, 15], "is_read": [14, 17], "is_this_week": [14, 15], "is_todai": [14, 15], "is_valid": [4, 14, 18], "isai": 17, "iso": 5, "issu": [0, 4, 17], "item": 8, "iter": [3, 7], "its": [12, 14, 17, 18], "j": 21, "jane": 0, "john": 17, "journal": 18, "json": [6, 7, 8, 10, 17, 18], "jsonl": 8, "k": 8, "keep": [3, 10], "kei": [6, 7, 8, 10, 14, 17, 18], "kept": 8, "keyword": 12, "kilomet": 14, "km_m": [14, 15], "knowledg": [3, 8], "knowledgeresponsetyp": 18, "kwarg": [10, 12, 13, 19], "kwd": 19, "label": 17, "lambdatyp": [15, 19], "languag": 14, "languagecod": 18, "larg": [8, 14], "last": [14, 17, 18], "last_message_at": [14, 17], "last_nam": [5, 13, 14, 15, 17, 18], "last_reset": 17, "lastmessag": [6, 17], "later": 4, "latitud": 14, "layer": 4, "least": [5, 17], "legal": [1, 2], "level": [7, 12, 18], "levelnam": 12, "leverag": 8, "lib": [6, 21], "librari": 12, "licens": [0, 2], "like": [14, 18], "limit": [2, 6, 17, 18], "lineno": 12, "link": 1, "linter": 0, "list": [5, 6, 8, 10, 13, 14, 17, 18, 19], "llm": [14, 15, 17, 18, 21], "llm_agent": 15, "llm_agent_endpoint_rout": [15, 17], "llm_chat": [4, 15], "llm_chat_servic": 15, "llmagent": [10, 15], "llmchat": [14, 15, 18], "llmchatservic": [15, 18], "llmmodel": [10, 15], "load": [5, 7, 13], "load_csv": [13, 15], "local": 6, "localhost": [6, 8], "locat": [5, 13, 14, 15, 17, 18], "log": [3, 4, 5, 6, 7, 12, 14, 17, 18], "log_api_usag": [15, 18], "log_format": [12, 15], "logger": [8, 15, 18, 21], "logic": 8, "login": 17, "login_rout": [15, 17], "logout": [15, 17, 18], "logout_rout": [15, 17], "logrecord": 12, "longer": 6, "longitud": 14, "look": 14, "lookup_icd_cod": [14, 15], "low": 2, "m": 5, "maco": 6, "made": 17, "main": [13, 15, 16], "mainsearchcriteria": 18, "maintain": [1, 3, 4], "mainten": 4, "make": 18, "male": 5, "malefic": 2, "manag": [4, 5, 6, 7, 14, 16, 17, 18], "manifesto": 21, "map": [0, 6, 10], "mappingproxytyp": [15, 19], "mark": 18, "mark_messages_as_read": [15, 18], "master": 7, "master_kei": 18, "match": [14, 17, 18], "max_record": 18, "max_requests_per_hour": 4, "max_token": [8, 10], "maximum": [8, 18], "mcp": [10, 15], "mcp_init": [10, 15], "mcp_server": [10, 15], "mcp_tool": 15, "mcp_url": 10, "md": [1, 2], "me": 17, "medic": [5, 6, 8, 14, 18], "medlin": [15, 18], "medlineplu": 18, "memberdescriptortyp": [15, 19], "memori": 4, "messag": [4, 5, 7, 10, 12, 14, 15, 17, 18], "message_id": 17, "message_object": 18, "message_text": 6, "meta": [13, 15, 18], "metaclass": 19, "metadata": [10, 11, 18], "meter": 14, "method": [1, 4, 5, 7, 8, 10, 17, 18, 19], "methoddescriptortyp": [15, 19], "methodtyp": [15, 19], "methodwrappertyp": [15, 19], "metric": 17, "migrat": [4, 15, 21], "migration_openai_api_kei": 4, "mini": 10, "minimis": 3, "minut": [14, 18], "miss": 17, "ml": 2, "mm": 18, "mobil": [6, 7], "mock": 18, "mode": 18, "model": [1, 3, 4, 8, 10, 13, 15, 18, 21], "modern": 7, "modest": 3, "modif": 0, "modifi": 10, "modul": [2, 15, 21], "moduletyp": [15, 19], "monet": 2, "monitor": [6, 18, 21], "more": 17, "mro": 19, "msg": [8, 12], "msg12345": 17, "msg_obj": 6, "multi": [4, 7], "multipl": 4, "must": [2, 3, 7, 17, 18], "my": 0, "mypi": 0, "n": [6, 8, 10, 13], "name": [8, 10, 12, 14, 17, 18, 19], "namespac": [8, 19], "nano": [8, 10], "navig": 6, "ncbi": [15, 18], "nearest": 8, "necessari": [8, 10, 17], "need": [4, 7, 8, 18], "neighbor": 8, "network": 4, "never": [4, 7], "new": [8, 14, 17, 18], "new_class": [15, 19], "new_password": [17, 18], "newli": [17, 18], "nif": 8, "no_show": [14, 15, 17], "node": 8, "non": 2, "none": [8, 10, 11, 12, 13, 14, 18, 19], "nonetyp": [15, 19], "normal": 19, "note": [4, 11, 13, 14, 17, 18], "note_id": [13, 14, 15], "note_text": [13, 15], "notif": [4, 7, 15, 21], "notificationtest": 6, "notimplementedtyp": [15, 19], "npm": 6, "nth": 13, "number": [5, 8, 13, 14, 17, 18], "nyou": [8, 10], "nyour": [8, 10], "o": 5, "object": [5, 8, 10, 11, 12, 13, 14, 17, 18, 19], "oblig": 2, "occur": [7, 8, 14, 17], "off": [0, 1, 3], "ok": 17, "old_password": 17, "onappointmentremind": 6, "one": [1, 17, 18, 19], "onli": [7, 13, 14, 17, 18], "onnewmessag": 6, "onsystemnotif": 6, "ontologi": 0, "open": [0, 1, 3], "openai": [7, 8, 10, 11, 14, 17, 18, 21], "openai_api_kei": [7, 14, 17], "openai_cli": 8, "openai_secur": 15, "openai_tool_def": [10, 11], "openaisecurityservic": [4, 15, 18], "oper": [7, 8, 14, 17, 21], "opt": [2, 15, 21], "optim": [15, 16], "optimalmetadata": [15, 18], "optimalschema": [15, 16, 18], "optimalservic": [15, 18], "option": [4, 5, 8, 10, 14, 17, 18], "optional_auth": [15, 18], "orchestr": 13, "order": [8, 18], "org": 0, "origin": 21, "other": [5, 6, 10, 17], "otherwis": [13, 14, 18], "our": 3, "out": [0, 2, 17], "outgo": 8, "output": 12, "over": 21, "overridden": 10, "overview": 21, "own": 4, "p": 6, "packag": [15, 21], "page": 6, "param": [8, 10, 11, 12, 13, 14, 16, 17, 18], "paramet": [8, 10, 14, 17, 18], "part": 1, "partial": [14, 17], "particip": [6, 14, 17, 18], "participant_id": 6, "participantid": 17, "particularli": 7, "pass": 19, "password": [8, 14, 17, 18], "past": [6, 14], "patch": [0, 14, 17], "patch_intake_rout": [15, 17], "path": [8, 13, 14, 17], "patient": [0, 1, 2, 10, 13, 15, 18, 21], "patient_data": 14, "patient_endpoint_rout": [15, 17], "patient_id": [5, 14, 17, 18], "patientapi": 5, "patientdata": 5, "patientdict": 14, "patientfactori": [13, 15], "patientid": 17, "patients_endpoint_rout": [15, 17], "payload": [15, 16, 17, 18], "paypal": 1, "pbkdf2": [4, 7], "pd": 16, "pentest": 1, "pep": 19, "per": 4, "perform": [4, 5, 8, 10, 14, 17], "period": 4, "persist": 6, "person": [5, 8], "phone": [5, 13, 14, 15, 17], "ping": 6, "pipeda": 2, "placehold": 14, "plain": [4, 7, 11, 14, 18], "plaintextrespons": 11, "plan": 14, "platform": [1, 4], "pleas": [0, 4], "pm": 18, "pmid": 18, "point": [14, 21], "popul": 17, "port": 6, "post": [1, 5, 6, 7, 17], "postapi": 7, "pr": 0, "practic": [2, 21], "predatori": 3, "prefer": [7, 14], "prefix": 7, "prepar": 19, "prepare_class": [15, 19], "prevconvers": 6, "prevent": [4, 5, 6], "preview": 17, "price": 2, "primarili": 18, "principl": [2, 3], "prioritis": 3, "privaci": [0, 21], "privat": 0, "problem": [4, 16, 18], "problem_id": 18, "proce": 18, "process": [2, 8, 10, 13], "process_tool_cal": [10, 15], "product": [0, 8], "profil": [6, 7, 17], "progress": [4, 14], "project": 3, "prompt": [1, 10], "proper": [4, 5], "properli": [5, 19], "properti": [18, 19], "proven": 2, "provid": [4, 5, 6, 7, 8, 10, 14, 17, 18], "provider_id": [13, 14, 15, 17, 18], "proxi": 10, "pubdat": 18, "public": 17, "publish": [0, 2, 18], "publish_ev": [15, 18], "publish_event_with_buff": [6, 15, 18], "pubm": 18, "pubsub": 6, "pull": [1, 10], "purpos": [3, 9, 14, 18], "push": 6, "put": [3, 5, 17], "py": 6, "pytest": 0, "python": [4, 6, 7, 8, 19], "q": [5, 17], "queri": [5, 8, 13, 14, 15, 17, 18], "question": [4, 8, 10], "r": 8, "radic": 21, "radiu": 14, "rag": 8, "rag_chat": [8, 15], "rais": [8, 14, 18, 19], "random": [13, 17], "rang": 18, "rate": [6, 18], "rate_limit_window": 4, "react": [5, 6], "read": [5, 14, 18], "readm": 0, "real": [4, 6, 7], "reason": [17, 18], "receiv": 6, "reciproc": 21, "recommend": 7, "reconnect": 6, "record": [5, 8, 12, 13, 14, 18], "recordid": 14, "red": [12, 15], "redi": [18, 21], "redis_cli": [6, 15], "redis_host": 6, "redis_port": 6, "referenc": 14, "refresh": 6, "regist": [11, 17], "register_openai_tool": [10, 11], "register_rout": [15, 17], "register_tool": [10, 15], "regular": [4, 19], "regularli": [4, 7], "reject": 3, "relat": [8, 10, 15, 17], "relationship": 8, "relev": [0, 16, 17], "reli": 3, "remain": [2, 19], "remind": 21, "remov": [7, 14, 17, 18, 19], "remove_particip": [14, 15], "replai": 6, "repo": [0, 2], "report": [1, 4], "repres": [8, 10, 13, 14, 19], "represent": [14, 17, 18], "reproduc": 0, "request": [1, 10, 11, 17, 18], "requests_mad": 17, "requests_this_hour": 4, "requir": [0, 4, 5, 6, 8, 10, 14, 17, 18], "require_admin": [15, 18], "require_auth": [15, 18], "require_pati": [15, 18], "require_provid": [15, 18], "require_rol": [15, 18], "required_rol": [14, 18], "research": 2, "reset": [4, 10, 12, 15], "reset_convers": [10, 15], "resolv": 19, "resolve_bas": [15, 19], "resourc": 2, "respect": [0, 3], "respons": [5, 7, 8, 10, 17, 18], "rest": [3, 4, 7], "restor": [7, 10], "restrict": 4, "restructuredtext": 21, "result": [8, 10, 14, 17, 18], "retain": 10, "retmax": 18, "retri": 4, "retriev": [7, 8, 14, 17, 18], "return": [4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19], "revenu": 3, "review": [1, 4], "right": [0, 2], "role": [7, 10, 14, 17, 18], "rotat": [4, 7], "rout": [6, 15, 18, 19, 21], "routin": [14, 15, 17], "row": 13, "rpc": 8, "rtype": [8, 10, 11, 12, 13, 14, 16, 17, 18], "rule": [2, 3], "run": [0, 6, 7, 8], "safe": 0, "safeti": 18, "salt": 14, "same": 19, "sampl": 13, "save": [6, 7, 13, 18], "save_csv": [13, 15], "save_user_set": [7, 15, 18], "scenario": 4, "schedul": [14, 15, 17], "schedulingservic": [15, 18], "schema": [8, 10, 13, 14, 15, 16, 18, 21], "screenshot": 0, "script": [0, 6, 13], "seamless": 4, "search": [8, 14, 15, 17, 18], "search_clinics_by_loc": [14, 15], "search_encounter_histori": [14, 15], "search_encounters_rout": [15, 17], "search_icd_by_descript": [14, 15], "search_patient_histori": [14, 15], "search_patients_rout": [15, 17], "search_pubm": [15, 18], "search_term": [5, 14], "search_users_rout": [15, 17], "searchabl": 17, "second": 18, "secur": [1, 18, 21], "securepassword": 17, "security_servic": 4, "see": [2, 13, 21], "seed": [8, 13, 15], "select": [6, 8, 13, 15, 17], "select_mani": [8, 15], "select_n_random_rows_from_csv": [13, 15], "selectedconversationid": 6, "self": 4, "send": [10, 15, 17, 18], "send_message_rout": [15, 17], "sender": [6, 14, 17, 18], "sender_id": [14, 18], "sender_nam": 6, "sens": 18, "sensit": [6, 7, 14, 18], "sent": [6, 17, 18], "serial": [10, 14, 15], "serialize_encount": [14, 15], "serialize_pati": [14, 15], "serv": 3, "server": [1, 6, 10, 11, 17], "servic": [6, 10, 15, 17, 21], "session": [6, 8, 10, 14, 17, 18], "session_id": 10, "session_object": 18, "set": [2, 6, 8, 12, 13, 14, 17, 18, 21], "set_openai_api_kei": [14, 15], "setconvers": 6, "setter": [7, 15, 19], "settings_rout": [15, 17], "setup": [13, 17, 21], "setup_default_admin": 17, "setup_default_admin_rout": [15, 17], "setup_user_set": 15, "setup_user_settings_schema": [13, 15], "sever": 12, "sex": [5, 13, 14, 15], "sh": 0, "sha": 14, "share": 4, "sharehold": 3, "short": [0, 14], "short_descript": 14, "should": [8, 10, 14], "show": [5, 7, 17], "shown": 5, "side": 17, "sign": [0, 8], "signin": [8, 15], "simpl": [8, 19], "simplenamespac": [15, 19], "simpli": 18, "sinc": 19, "singl": 8, "size": 13, "sk": [4, 7, 17], "slide": 4, "slot": [17, 18], "small": 8, "smith": 6, "so": 0, "soap": 14, "soap_not": 14, "soapnot": [14, 15], "softwar": 3, "solut": 7, "solv": 18, "solver": 18, "some": [8, 13, 14], "sourc": [3, 8, 18], "spam": 6, "specialist": [14, 15, 17], "specialti": [14, 17], "specif": [4, 5, 8, 14, 17, 18], "specifi": [14, 17, 18, 19], "sponsor": 1, "sql": [8, 14], "src": [6, 21], "sse": 21, "st": 17, "standard": [4, 12], "start": [7, 8, 10, 14, 17, 18], "start_dat": 18, "start_nod": 8, "start_tim": [14, 17, 18], "stat": 4, "state": [5, 7, 10, 14, 17], "statement": [8, 14], "static": 14, "statist": [17, 18, 21], "statu": [5, 11, 14, 17, 18], "status": 17, "step": 13, "still": 19, "stipend": 1, "storag": [4, 6, 7, 10, 14], "store": [5, 6, 7, 14, 18], "store_encount": [14, 15], "store_ev": [15, 18], "store_pati": [14, 15], "str": [6, 8, 10, 12, 13, 14, 16, 17, 18, 19], "stream": 6, "street": 14, "strength": 14, "string": [5, 7, 8, 14, 17, 18], "structur": [7, 13, 14, 21], "studi": 18, "style": [0, 11, 12], "subclass": 19, "subject": [3, 14], "submiss": [5, 13], "submit": 0, "submodul": 15, "subpackag": 15, "subscrib": 6, "success": [4, 5, 7, 13, 14, 17, 18], "successfulli": [6, 7, 17], "sudo": 6, "summari": 18, "support": [2, 6, 10, 14, 17, 21], "surreal": 15, "surreal_graph": 15, "surrealdb": [5, 8, 13, 14, 17], "surrealql": [8, 14], "surrealwrapp": [8, 15], "surveil": 2, "sustain": [1, 21], "symmetr": 7, "synchron": 8, "syntax": 21, "system": [10, 14, 17, 21], "system_prompt": [8, 10], "t": [6, 7, 18, 19], "tabl": [5, 7, 8, 13, 14, 18], "table_nam": [8, 14], "tag": 0, "take": 0, "target": [3, 8], "task": [8, 10], "tbd": 1, "team": 4, "temperatur": 10, "templat": 0, "term": [5, 6, 14], "test": [0, 9, 13, 14, 15, 18, 21], "test_api_valid": 4, "test_crud": 5, "test_crud_rout": [15, 17], "test_encrypt": [4, 7], "test_rate_limit": 4, "test_redi": 6, "test_surrealdb_rout": [15, 17], "text": [4, 5, 6, 7, 8, 14, 17, 18], "thank": [0, 1], "thei": [14, 17], "them": [0, 3], "themselv": 3, "thi": [4, 5, 6, 7, 8, 10, 13, 14, 17, 18, 19], "thing": 0, "those": [0, 17], "threat": [1, 4], "through": [6, 19], "time": [0, 1, 2, 4, 6, 7, 14, 17, 18], "timer": 4, "timestamp": [6, 17], "titl": 18, "to_dict": [10, 14, 15, 18], "to_geojson_point": [14, 15], "to_record": 8, "todai": 14, "todo": 8, "togeth": 0, "toggl": 7, "token": [4, 7, 8, 14, 17, 18], "tokens_us": [17, 18], "toler": 0, "tool": [0, 10, 11], "tool_cal": 10, "tool_def": 10, "tool_definit": 10, "tool_dict": 10, "tool_func_dict": 10, "tool_nam": 10, "toolcal": 10, "tostr": 6, "total": [17, 18], "tracebacktyp": [15, 19], "track": [4, 7], "trail": [4, 7], "train": 2, "transit": [3, 7], "transmiss": 4, "transpar": [1, 2, 21], "treat": 19, "tree": [10, 15], "trial": 18, "troubleshoot": 21, "true": [4, 7, 12, 13, 14, 17, 18], "try": 4, "tsx": 6, "ttl": 6, "tupl": [10, 14, 17, 18, 19], "tutori": 0, "two": [8, 13, 17], "txt": 6, "type": [0, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "typecheck": 0, "typevar": 18, "ubuntu": 6, "ui": [6, 7, 17], "unauthor": [17, 18], "under": [0, 3], "understand": 3, "unexpect": 17, "union": [10, 14, 19], "uniontyp": [15, 19], "uniqu": 5, "up": [4, 8, 13, 14, 17, 18], "updat": [4, 6, 8, 14, 15, 17, 18, 19], "update_appoint": [15, 18], "update_appointment_rout": [15, 17], "update_clin": [14, 15], "update_encount": [14, 15], "update_encounter_rout": [15, 17], "update_openai_api_kei": [7, 15, 18], "update_pati": [14, 15], "update_us": [15, 18], "update_user_profile_rout": [15, 17], "update_user_set": [15, 17], "updated_at": [7, 14, 17], "uphold": 3, "upon": 17, "upstream": 0, "url": [8, 10, 17, 18], "us": [4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 17, 18, 19, 21], "usag": [8, 17, 18, 21], "usecallback": 6, "useev": 6, "user": [2, 5, 6, 8, 10, 15, 18, 21], "user1": 17, "user123": 17, "user1_id": 17, "user2_id": 17, "user_count": 17, "user_id": [4, 7, 14, 17, 18], "user_object": 18, "user_servic": 15, "user_set": 15, "user_to_us": [14, 17, 18], "userid": 18, "usernam": [14, 17, 18], "users_exist": 17, "userservic": [7, 15, 18], "usersess": [14, 15, 18], "userset": [7, 13, 14, 15, 18], "util": 13, "v": [4, 18], "v2": [0, 18], "v3": 0, "valid": [1, 5, 7, 12, 14, 15, 17, 18], "validate_api_kei": [4, 15, 18], "validate_email": [14, 15], "validate_openai_api_kei": [14, 15], "validate_password": [14, 15], "validate_phon": [14, 15], "validate_rol": [14, 15], "validate_sess": [15, 18], "validate_usernam": [14, 15], "valu": [3, 10, 14, 17, 18], "valueerror": [14, 18], "var": 8, "variabl": 18, "variou": [10, 17, 18], "vec": 15, "vector": [8, 13], "verifi": [5, 6, 11, 13, 14, 17], "verify_password": [14, 15], "version": [0, 19], "via": [6, 8, 17], "view": [5, 17], "violat": 4, "virtual": 19, "visibl": 2, "visit": 17, "vulner": 4, "w": 8, "wa": [14, 17], "wage": 3, "wai": 7, "wall": 3, "warn": [4, 12, 15], "we": [0, 2, 3], "webhook": 4, "websocket": 6, "week": 14, "welcom": 0, "welfar": 3, "well": 2, "were": [14, 17], "when": [4, 6, 7, 17, 19], "where": [0, 13, 18], "whether": 17, "which": [4, 8], "while": [4, 10], "whitelist": 4, "who": 8, "whole": 3, "whom": 18, "whose": 18, "wide": 4, "window": 4, "window_start": 4, "with_abstract": 18, "within": [14, 18], "within_limit": [4, 18], "without": 18, "work": [5, 7, 11, 17, 21], "wrapperdescriptortyp": [15, 19], "write": 0, "www": 0, "x": [6, 18], "x1b": 12, "yellow": [12, 15], "you": [0, 1, 6, 8], "your": [0, 4, 6, 7, 8, 21], "yyyi": [1, 18], "zero": 0, "zip_cod": 14, "zipcod": 5}, "titles": ["Contributing to ArsMedicaTech", "Support ArsMedicaTech", "ArsMedicaTech Ethical Guidelines", "ArsMedicaTech Manifesto", "OpenAI Security System", "Patient CRUD Operations", "Redis/SSE Notifications System", "User Settings System", "db package", "dummy_data module", "llm package", "llm.mcp package", "logger module", "migrations package", "models package", "lib", "opt package", "routes package", "services package", "types module", "app module", "ArsMedicaTech documentation"], "titleterms": {"1": [3, 4, 5, 6, 7], "2": [3, 4, 5, 6, 7], "3": [3, 4, 5, 6, 7], "4": [3, 4, 5, 7], "5": [3, 5], "6": 5, "For": 4, "In": 1, "It": 6, "Not": 3, "admin": 4, "agent": [4, 10], "all": 5, "analyt": 4, "api": [4, 5, 7, 18], "app": 20, "appoint": [6, 14, 17], "appointment_remind": 6, "architectur": [3, 4, 6], "arsmedicatech": [0, 1, 2, 3, 21], "auth_decor": 18, "autonomi": 3, "backend": [5, 6, 7], "best": [4, 7], "browser": 6, "certif": 0, "chat": 17, "clinic": 14, "code": 0, "command": 6, "common": [3, 4, 6, 7], "compon": [4, 5, 6, 7], "conduct": 0, "configur": [4, 6], "connect": 6, "consider": 4, "content": [8, 10, 11, 13, 14, 16, 17, 18, 21], "contribut": [0, 1], "convers": 14, "conversation_servic": 18, "creat": 5, "crud": 5, "dashboard": 4, "data": [4, 5, 7], "databas": [5, 7], "db": 8, "debug": [6, 7], "delet": 5, "deliveri": 6, "demo": 13, "demo_util": 13, "depend": 6, "develop": [0, 4], "document": 21, "dummy_data": 9, "enclosur": 3, "encrypt": [7, 18], "endpoint": [5, 6, 7], "enhanc": [4, 5, 6, 7], "environ": [4, 7], "error": [4, 5], "ethic": 2, "event": 6, "exampl": 7, "extens": 7, "featur": [4, 7], "flow": 4, "frontend": [5, 6, 7], "futur": [4, 5, 6, 7], "get": [0, 5, 7], "graph": 14, "growth": 3, "guidelin": 2, "handl": [4, 5, 6], "how": [0, 1, 6], "hyper": 3, "hypertens": 16, "icd": 14, "id": 5, "improv": 4, "instal": 6, "instruct": 6, "integr": [4, 6], "issu": [6, 7], "j": 5, "kei": 4, "kind": 1, "lib": [4, 7, 15], "limit": 4, "llm": [4, 10, 11], "llm_agent": [4, 17], "llm_chat": 14, "llm_chat_servic": 18, "logger": 12, "make": 4, "manifesto": 3, "mcp": 11, "mcp_init": 11, "mcp_server": 11, "mcp_tool": 10, "messag": 6, "migrat": 13, "mode": 7, "model": [7, 14], "modul": [8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20], "monitor": 4, "new": [5, 6], "new_messag": 6, "notif": [6, 18], "openai": 4, "openai_secur": [4, 18], "oper": 5, "opt": 16, "optim": 18, "origin": 0, "over": 3, "overview": [4, 6, 7], "packag": [8, 10, 11, 13, 14, 16, 17, 18], "patient": [3, 5, 14, 17], "patientform": 5, "patientlist": 5, "plan": 4, "point": 6, "practic": [4, 7], "privaci": 3, "process": 4, "protect": [4, 7], "publish": 6, "py": [4, 7], "radic": 3, "rate": 4, "reciproc": 0, "recoveri": 4, "redi": 6, "redis_cli": 18, "register_tool": 11, "remind": [0, 6], "request": 4, "requir": 7, "respons": 4, "rout": [4, 5, 7, 17], "schedul": 18, "schema": [5, 7], "search": 5, "secur": [4, 7], "send": 6, "servic": [4, 5, 7, 18], "set": [4, 7], "setup": [6, 7], "setup_user_set": 13, "small": 0, "src": [5, 7], "sse": 6, "start": [0, 6], "statist": 4, "structur": 5, "submodul": [8, 10, 11, 13, 14, 16, 17, 18], "subpackag": 10, "support": [1, 4], "surreal": 8, "surreal_graph": 8, "sustain": 3, "system": [4, 6, 7], "system_notif": 6, "task": 0, "test": [4, 5, 6, 7, 17], "transpar": 3, "tree": 11, "troubleshoot": [6, 7], "tsx": 7, "type": [6, 19], "ui": 4, "updat": [5, 7], "usag": [4, 7], "user": [4, 7, 14, 17], "user_servic": [7, 18], "user_set": [7, 14], "valid": 4, "variabl": [4, 7], "vec": [8, 13], "volunt": 1, "work": 6}})