Search.setIndex({"alltitles": {"1. Encryption Service (lib/services/encryption.py)": [[8, "encryption-service-lib-services-encryption-py"]], "1. Event Publishing": [[7, "event-publishing"]], "1. Get All Patients": [[5, "get-all-patients"]], "1. New Message (new_message)": [[7, "new-message-new-message"]], "1. OpenAI Security Service (lib/services/openai_security.py)": [[4, "openai-security-service-lib-services-openai-security-py"]], "1. Patient Autonomy": [[3, "patient-autonomy"]], "1. PatientList Component": [[5, "patientlist-component"]], "1. Redis Configuration": [[7, "redis-configuration"]], "1. Test Redis Connection": [[7, "test-redis-connection"]], "1. User Makes Request": [[4, "user-makes-request"]], "2. Appointment Reminder (appointment_reminder)": [[7, "appointment-reminder-appointment-reminder"]], "2. Enhanced LLM Agent Route (lib/routes/llm_agent.py)": [[4, "enhanced-llm-agent-route-lib-routes-llm-agent-py"]], "2. Event Delivery": [[7, "event-delivery"]], "2. Get Patient by ID": [[5, "get-patient-by-id"]], "2. Install Dependencies": [[7, "install-dependencies"]], "2. Patient Component": [[5, "patient-component"]], "2. Radical Transparency": [[3, "radical-transparency"]], "2. Security Validation": [[4, "security-validation"]], "2. Test SSE in Browser": [[7, "test-sse-in-browser"]], "2. User Settings Model (lib/models/user_settings.py)": [[8, "user-settings-model-lib-models-user-settings-py"]], "3. Create New Patient": [[5, "create-new-patient"]], "3. Frontend Handling": [[7, "frontend-handling"]], "3. PatientForm Component": [[5, "patientform-component"]], "3. Privacy by Architecture": [[3, "privacy-by-architecture"]], "3. Response Processing": [[4, "response-processing"]], "3. Start Redis": [[7, "start-redis"]], "3. System Notification (system_notification)": [[7, "system-notification-system-notification"]], "3. Test Endpoints": [[7, "test-endpoints"]], "3. Usage Monitoring (/api/usage)": [[4, "usage-monitoring-api-usage"]], "3. User Service Extensions (lib/services/user_service.py)": [[8, "user-service-extensions-lib-services-user-service-py"]], "4. Commons over Enclosure": [[3, "commons-over-enclosure"]], "4. Enhanced Settings UI": [[4, "enhanced-settings-ui"]], "4. Settings Routes (lib/routes/settings.py)": [[8, "settings-routes-lib-routes-settings-py"]], "4. Update Patient": [[5, "update-patient"]], "5. Delete Patient": [[5, "delete-patient"]], "5. Sustainability, Not Hyper-Growth": [[3, "sustainability-not-hyper-growth"]], "6. Search Patients": [[5, "search-patients"]], "API Endpoints": [[8, "api-endpoints"]], "API Key Security": [[4, "api-key-security"]], "API Service (src/services/api.js)": [[5, "api-service-src-services-api-js"]], "Admin Monitoring": [[4, "admin-monitoring"]], "Architecture": [[7, "architecture"]], "ArsMedicaTech Ethical Guidelines": [[2, null]], "ArsMedicaTech Manifesto": [[3, null]], "ArsMedicaTech documentation": [[22, null]], "Backend API Endpoints": [[5, "backend-api-endpoints"]], "Backend Components": [[7, "backend-components"], [8, "backend-components"]], "Backend Usage": [[8, "backend-usage"]], "Common Errors": [[4, "common-errors"]], "Common Issues": [[7, "common-issues"], [8, "common-issues"]], "Components": [[7, "components"]], "Contents:": [[22, null]], "Contributing to ArsMedicaTech": [[0, null]], "Data Protection": [[4, "data-protection"], [8, "data-protection"]], "Database Schema": [[5, "database-schema"], [8, "database-schema"]], "Debug Commands": [[7, "debug-commands"]], "Debug Mode": [[8, "debug-mode"]], "Encryption": [[8, "encryption"]], "Environment Setup": [[8, "environment-setup"]], "Environment Variables": [[4, "environment-variables"]], "Error Handling": [[5, "error-handling"]], "Error Recovery": [[4, "error-recovery"]], "Event Types": [[7, "event-types"]], "Features": [[8, "features"]], "For Developers": [[4, "for-developers"]], "For Users": [[4, "for-users"]], "Frontend Components": [[5, "frontend-components"], [7, "frontend-components"], [8, "frontend-components"]], "Frontend Integration": [[7, "frontend-integration"]], "Frontend Usage": [[8, "frontend-usage"]], "Future Enhancements": [[5, "future-enhancements"], [7, "future-enhancements"], [8, "future-enhancements"]], "Get User Settings": [[8, "get-user-settings"]], "How It Works": [[7, "how-it-works"]], "In-Kind & Volunteer Support": [[1, "in-kind-volunteer-support"]], "Integration Points": [[7, "integration-points"]], "Integration Tests": [[4, "integration-tests"]], "Message Sending": [[7, "message-sending"]], "Module contents": [[9, "module-db"], [11, "module-llm"], [12, "module-llm.mcp"], [14, "module-migrations"], [15, "module-models"], [17, "module-opt"], [18, "module-routes"], [19, "module-services"]], "Monitoring": [[4, "monitoring"]], "OpenAI Security System": [[4, null]], "Overview": [[7, "overview"], [8, "overview"]], "Patient CRUD Operations": [[5, null]], "Patient Data Structure": [[5, "patient-data-structure"]], "Planned Features": [[4, "planned-features"]], "Rate Limiting": [[4, "rate-limiting"], [4, "id1"]], "Rate Limiting Configuration": [[4, "rate-limiting-configuration"]], "Redis/SSE Notifications System": [[7, null]], "Required Environment Variables": [[8, "required-environment-variables"]], "Routes": [[5, "routes"]], "Running Locally": [[6, null]], "Security Best Practices": [[8, "security-best-practices"]], "Security Features": [[8, "security-features"]], "Security Improvements": [[4, "security-improvements"]], "Security Tests": [[4, "security-tests"]], "Settings Component (src/components/Settings.tsx)": [[8, "settings-component-src-components-settings-tsx"]], "Setup Instructions": [[7, "setup-instructions"]], "Small Tasks to Get Started": [[0, "small-tasks-to-get-started"]], "Steps": [[6, "steps"]], "Submodules": [[9, "submodules"], [11, "submodules"], [12, "submodules"], [14, "submodules"], [15, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"]], "Subpackages": [[11, "subpackages"]], "Support ArsMedicaTech": [[1, null]], "Testing": [[5, "testing"], [7, "testing"], [8, "testing"]], "Troubleshooting": [[7, "troubleshooting"], [8, "troubleshooting"]], "Update User Settings": [[8, "update-user-settings"]], "Usage Dashboard": [[4, "usage-dashboard"]], "Usage Examples": [[8, "usage-examples"]], "Usage Monitoring": [[4, "usage-monitoring"]], "User Settings System": [[8, null]], "app module": [[21, null]], "db package": [[9, null]], "db.surreal module": [[9, "module-db.surreal"]], "db.surreal_graph module": [[9, "module-db.surreal_graph"]], "db.vec module": [[9, "module-db.vec"]], "dummy_data module": [[10, null]], "lib": [[16, null]], "llm package": [[11, null]], "llm.agent module": [[11, "module-llm.agent"]], "llm.mcp package": [[12, null]], "llm.mcp.mcp_init module": [[12, "module-llm.mcp.mcp_init"]], "llm.mcp.mcp_server module": [[12, "llm-mcp-mcp-server-module"]], "llm.mcp.register_tools module": [[12, "module-llm.mcp.register_tools"]], "llm.mcp.trees module": [[12, "llm-mcp-trees-module"]], "llm.mcp_tools module": [[11, "module-llm.mcp_tools"]], "logger module": [[13, null]], "migrations package": [[14, null]], "migrations.demo module": [[14, "module-migrations.demo"]], "migrations.demo_utils module": [[14, "module-migrations.demo_utils"]], "migrations.setup_user_settings module": [[14, "module-migrations.setup_user_settings"]], "migrations.vec module": [[14, "module-migrations.vec"]], "models package": [[15, null]], "models.appointment module": [[15, "module-models.appointment"]], "models.clinic module": [[15, "module-models.clinic"]], "models.conversation module": [[15, "module-models.conversation"]], "models.graph module": [[15, "models-graph-module"]], "models.icd module": [[15, "module-models.icd"]], "models.llm_chat module": [[15, "module-models.llm_chat"]], "models.patient module": [[15, "module-models.patient"]], "models.user module": [[15, "module-models.user"]], "models.user_settings module": [[15, "models-user-settings-module"]], "opt package": [[17, null]], "opt.hypertension module": [[17, "module-opt.hypertension"]], "routes package": [[18, null]], "routes.appointments module": [[18, "module-routes.appointments"]], "routes.chat module": [[18, "module-routes.chat"]], "routes.llm_agent module": [[18, "module-routes.llm_agent"]], "routes.patients module": [[18, "module-routes.patients"]], "routes.testing module": [[18, "module-routes.testing"]], "routes.users module": [[18, "module-routes.users"]], "services package": [[19, null]], "services.apis module": [[19, "module-services.apis"]], "services.auth_decorators module": [[19, "module-services.auth_decorators"]], "services.conversation_service module": [[19, "module-services.conversation_service"]], "services.encryption module": [[19, "module-services.encryption"]], "services.llm_chat_service module": [[19, "module-services.llm_chat_service"]], "services.notifications module": [[19, "module-services.notifications"]], "services.openai_security module": [[19, "module-services.openai_security"]], "services.optimal module": [[19, "module-services.optimal"]], "services.redis_client module": [[19, "module-services.redis_client"]], "services.scheduling module": [[19, "module-services.scheduling"]], "services.user_service module": [[19, "module-services.user_service"]], "types module": [[20, null]], "}": [[18, "id1"], [18, "id2"], [18, "id3"], [18, "id4"], [18, "id5"], [18, "id6"]], "\ud83c\udfd7\ufe0f Architecture": [[4, "architecture"]], "\ud83d\udcb3 How to Contribute": [[1, "how-to-contribute"]], "\ud83d\udcc8 Monitoring & Analytics": [[4, "monitoring-analytics"]], "\ud83d\udcca Usage Statistics": [[4, "usage-statistics"]], "\ud83d\udcdc Code of Conduct": [[0, "code-of-conduct"]], "\ud83d\udcdd Developer Certificate of Origin": [[0, "developer-certificate-of-origin"]], "\ud83d\udcde Support": [[4, "support"]], "\ud83d\udd04 API Flow": [[4, "api-flow"]], "\ud83d\udd04 Reciprocity Reminder": [[0, "reciprocity-reminder"]], "\ud83d\udd0d Error Handling": [[4, "error-handling"]], "\ud83d\udd10 Security Overview": [[4, "security-overview"]], "\ud83d\udd12 Best Practices": [[4, "best-practices"]], "\ud83d\udd27 Components": [[4, "components"]], "\ud83d\udd2e Future Enhancements": [[4, "future-enhancements"]], "\ud83d\ude80 Configuration": [[4, "configuration"]], "\ud83d\udea8 Security Considerations": [[4, "security-considerations"]], "\ud83d\udee0\ufe0f How to Contribute": [[0, "how-to-contribute"]], "\ud83d\udee1\ufe0f Security Features": [[4, "security-features"]], "\ud83e\uddea Testing": [[4, "testing"]]}, "docnames": ["CONTRIBUTING", "DONATE", "ETHICS", "MANIFESTO", "OPENAI_SECURITY_README", "PATIENT_CRUD_README", "RUNNING_LOCALLY", "SSE_NOTIFICATIONS_README", "USER_SETTINGS_README", "api/db", "api/dummy_data", "api/llm", "api/llm.mcp", "api/logger", "api/migrations", "api/models", "api/modules", "api/opt", "api/routes", "api/services", "api/types", "app", "index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["CONTRIBUTING.md", "DONATE.md", "ETHICS.md", "MANIFESTO.md", "OPENAI_SECURITY_README.md", "PATIENT_CRUD_README.md", "RUNNING_LOCALLY.md", "SSE_NOTIFICATIONS_README.md", "USER_SETTINGS_README.md", "api/db.rst", "api/dummy_data.rst", "api/llm.rst", "api/llm.mcp.rst", "api/logger.rst", "api/migrations.rst", "api/models.rst", "api/modules.rst", "api/opt.rst", "api/routes.rst", "api/services.rst", "api/types.rst", "app.rst", "index.rst"], "indexentries": {"activate_user() (services.user_service.userservice method)": [[19, "services.user_service.UserService.activate_user", false]], "activate_user_route() (in module routes.users)": [[18, "routes.users.activate_user_route", false]], "add_message() (models.llm_chat.llmchat method)": [[15, "models.llm_chat.LLMChat.add_message", false]], "add_message() (services.conversation_service.conversationservice method)": [[19, "services.conversation_service.ConversationService.add_message", false]], "add_message() (services.llm_chat_service.llmchatservice method)": [[19, "services.llm_chat_service.LLMChatService.add_message", false]], "add_participant() (models.conversation.conversation method)": [[15, "models.conversation.Conversation.add_participant", false]], "add_tool() (llm.agent.llmagent method)": [[11, "llm.agent.LLMAgent.add_tool", false]], "address (class in models.clinic)": [[15, "models.clinic.Address", false]], "address (models.clinic.clinictype attribute)": [[15, "models.clinic.ClinicType.address", false]], "appointment (class in models.appointment)": [[15, "models.appointment.Appointment", false]], "appointmentstatus (class in models.appointment)": [[15, "models.appointment.AppointmentStatus", false]], "appointmenttype (class in models.appointment)": [[15, "models.appointment.AppointmentType", false]], "asyncdbcontroller (class in db.surreal)": [[9, "db.surreal.AsyncDbController", false]], "asyncgeneratortype (in module types)": [[20, "types.AsyncGeneratorType", false]], "asyncgraphcontroller (class in db.surreal_graph)": [[9, "db.surreal_graph.AsyncGraphController", false]], "asyncsurrealwrapper (class in db.surreal)": [[9, "db.surreal.AsyncSurrealWrapper", false]], "auth_flow() (llm.mcp_tools.customheaderauth method)": [[11, "llm.mcp_tools.CustomHeaderAuth.auth_flow", false]], "authenticate_user() (services.user_service.userservice method)": [[19, "services.user_service.UserService.authenticate_user", false]], "batchitem (class in db.vec)": [[9, "db.vec.BatchItem", false]], "batchlist (class in db.vec)": [[9, "db.vec.BatchList", false]], "black (logger.customformatter attribute)": [[13, "logger.CustomFormatter.black", false]], "bold_red (logger.customformatter attribute)": [[13, "logger.CustomFormatter.bold_red", false]], "build_hypertension_payload() (in module opt.hypertension)": [[17, "opt.hypertension.build_hypertension_payload", false]], "builtinfunctiontype (in module types)": [[20, "types.BuiltinFunctionType", false]], "builtinmethodtype (in module types)": [[20, "types.BuiltinMethodType", false]], "can_be_cancelled() (models.appointment.appointment method)": [[15, "models.appointment.Appointment.can_be_cancelled", false]], "cancel_appointment() (services.scheduling.schedulingservice method)": [[19, "services.scheduling.SchedulingService.cancel_appointment", false]], "cancel_appointment_route() (in module routes.appointments)": [[18, "routes.appointments.cancel_appointment_route", false]], "cancelled (models.appointment.appointmentstatus attribute)": [[15, "models.appointment.AppointmentStatus.CANCELLED", false]], "celltype (in module types)": [[20, "types.CellType", false]], "change_password() (services.user_service.userservice method)": [[19, "services.user_service.UserService.change_password", false]], "change_password_route() (in module routes.users)": [[18, "routes.users.change_password_route", false]], "check_existing_schema() (in module migrations.setup_user_settings)": [[14, "migrations.setup_user_settings.check_existing_schema", false]], "check_rate_limit() (services.openai_security.openaisecurityservice method)": [[19, "services.openai_security.OpenAISecurityService.check_rate_limit", false]], "check_users_exist_route() (in module routes.users)": [[18, "routes.users.check_users_exist_route", false]], "city (models.clinic.address attribute)": [[15, "models.clinic.Address.city", false]], "classmethoddescriptortype (in module types)": [[20, "types.ClassMethodDescriptorType", false]], "clinic (class in models.clinic)": [[15, "models.clinic.Clinic", false]], "clinicaltrials (class in services.apis)": [[19, "services.apis.ClinicalTrials", false]], "clinictype (class in models.clinic)": [[15, "models.clinic.ClinicType", false]], "close() (db.surreal.asyncdbcontroller method)": [[9, "db.surreal.AsyncDbController.close", false]], "close() (db.surreal.asyncsurrealwrapper method)": [[9, "db.surreal.AsyncSurrealWrapper.close", false]], "close() (db.surreal.dbcontroller method)": [[9, "db.surreal.DbController.close", false]], "close() (db.surreal.surrealwrapper method)": [[9, "db.surreal.SurrealWrapper.close", false]], "close() (services.conversation_service.conversationservice method)": [[19, "services.conversation_service.ConversationService.close", false]], "close() (services.llm_chat_service.llmchatservice method)": [[19, "services.llm_chat_service.LLMChatService.close", false]], "close() (services.scheduling.schedulingservice method)": [[19, "services.scheduling.SchedulingService.close", false]], "close() (services.user_service.userservice method)": [[19, "services.user_service.UserService.close", false]], "codetype (in module types)": [[20, "types.CodeType", false]], "complete() (llm.agent.llmagent method)": [[11, "llm.agent.LLMAgent.complete", false]], "complete_appointment() (services.scheduling.schedulingservice method)": [[19, "services.scheduling.SchedulingService.complete_appointment", false]], "completed (models.appointment.appointmentstatus attribute)": [[15, "models.appointment.AppointmentStatus.COMPLETED", false]], "configure() (logger.logger method)": [[13, "logger.Logger.configure", false]], "confirm_appointment() (services.scheduling.schedulingservice method)": [[19, "services.scheduling.SchedulingService.confirm_appointment", false]], "confirm_appointment_route() (in module routes.appointments)": [[18, "routes.appointments.confirm_appointment_route", false]], "confirmed (models.appointment.appointmentstatus attribute)": [[15, "models.appointment.AppointmentStatus.CONFIRMED", false]], "connect() (db.surreal.asyncdbcontroller method)": [[9, "db.surreal.AsyncDbController.connect", false]], "connect() (db.surreal.dbcontroller method)": [[9, "db.surreal.DbController.connect", false]], "connect() (services.conversation_service.conversationservice method)": [[19, "services.conversation_service.ConversationService.connect", false]], "connect() (services.llm_chat_service.llmchatservice method)": [[19, "services.llm_chat_service.LLMChatService.connect", false]], "connect() (services.scheduling.schedulingservice method)": [[19, "services.scheduling.SchedulingService.connect", false]], "connect() (services.user_service.userservice method)": [[19, "services.user_service.UserService.connect", false]], "consultation (models.appointment.appointmenttype attribute)": [[15, "models.appointment.AppointmentType.CONSULTATION", false]], "conversation (class in models.conversation)": [[15, "models.conversation.Conversation", false]], "conversationservice (class in services.conversation_service)": [[19, "services.conversation_service.ConversationService", false]], "coordinates (models.clinic.geojsonpoint attribute)": [[15, "models.clinic.GeoJSONPoint.coordinates", false]], "coroutine() (in module types)": [[20, "types.coroutine", false]], "coroutinetype (in module types)": [[20, "types.CoroutineType", false]], "count_connections() (db.surreal_graph.asyncgraphcontroller method)": [[9, "db.surreal_graph.AsyncGraphController.count_connections", false]], "count_connections() (db.surreal_graph.graphcontroller method)": [[9, "db.surreal_graph.GraphController.count_connections", false]], "country (models.clinic.address attribute)": [[15, "models.clinic.Address.country", false]], "create() (db.surreal.asyncdbcontroller method)": [[9, "db.surreal.AsyncDbController.create", false]], "create() (db.surreal.asyncsurrealwrapper method)": [[9, "db.surreal.AsyncSurrealWrapper.create", false]], "create() (db.surreal.dbcontroller method)": [[9, "db.surreal.DbController.create", false]], "create() (db.surreal.surrealwrapper method)": [[9, "db.surreal.SurrealWrapper.create", false]], "create_appointment() (services.scheduling.schedulingservice method)": [[19, "services.scheduling.SchedulingService.create_appointment", false]], "create_appointment_route() (in module routes.appointments)": [[18, "routes.appointments.create_appointment_route", false]], "create_clinic() (in module models.clinic)": [[15, "models.clinic.create_clinic", false]], "create_conversation() (services.conversation_service.conversationservice method)": [[19, "services.conversation_service.ConversationService.create_conversation", false]], "create_conversation_route() (in module routes.chat)": [[18, "routes.chat.create_conversation_route", false]], "create_default_admin() (services.user_service.userservice method)": [[19, "services.user_service.UserService.create_default_admin", false]], "create_encounter_route() (in module routes.patients)": [[18, "routes.patients.create_encounter_route", false]], "create_food_data_pd() (in module opt.hypertension)": [[17, "opt.hypertension.create_food_data_pd", false]], "create_forms() (in module migrations.demo)": [[14, "migrations.demo.create_forms", false]], "create_llm_chat() (services.llm_chat_service.llmchatservice method)": [[19, "services.llm_chat_service.LLMChatService.create_llm_chat", false]], "create_n_patients() (in module migrations.demo)": [[14, "migrations.demo.create_n_patients", false]], "create_session() (services.user_service.userservice method)": [[19, "services.user_service.UserService.create_session", false]], "create_user() (services.user_service.userservice method)": [[19, "services.user_service.UserService.create_user", false]], "customformatter (class in logger)": [[13, "logger.CustomFormatter", false]], "customheaderauth (class in llm.mcp_tools)": [[11, "llm.mcp_tools.CustomHeaderAuth", false]], "date_created (migrations.demo_utils.encounterfactory attribute)": [[14, "migrations.demo_utils.EncounterFactory.date_created", false]], "date_of_birth (migrations.demo_utils.patientfactory attribute)": [[14, "migrations.demo_utils.PatientFactory.date_of_birth", false]], "db": [[9, "module-db", false]], "db (db.surreal.asyncdbcontroller attribute)": [[9, "db.surreal.AsyncDbController.db", false]], "db (db.surreal.dbcontroller attribute)": [[9, "db.surreal.DbController.db", false]], "db.surreal": [[9, "module-db.surreal", false]], "db.surreal_graph": [[9, "module-db.surreal_graph", false]], "db.vec": [[9, "module-db.vec", false]], "dbcontroller (class in db.surreal)": [[9, "db.surreal.DbController", false]], "deactivate_user() (services.user_service.userservice method)": [[19, "services.user_service.UserService.deactivate_user", false]], "deactivate_user_route() (in module routes.users)": [[18, "routes.users.deactivate_user_route", false]], "debug() (logger.logger method)": [[13, "logger.Logger.debug", false]], "debug_session_route() (in module routes.testing)": [[18, "routes.testing.debug_session_route", false]], "decrypt() (services.encryption.encryptionservice method)": [[19, "services.encryption.EncryptionService.decrypt", false]], "decrypt_api_key() (services.encryption.encryptionservice method)": [[19, "services.encryption.EncryptionService.decrypt_api_key", false]], "define_index() (in module models.icd)": [[15, "models.icd.define_index", false]], "delete() (db.surreal.asyncdbcontroller method)": [[9, "db.surreal.AsyncDbController.delete", false]], "delete() (db.surreal.asyncsurrealwrapper method)": [[9, "db.surreal.AsyncSurrealWrapper.delete", false]], "delete() (db.surreal.dbcontroller method)": [[9, "db.surreal.DbController.delete", false]], "delete() (db.surreal.surrealwrapper method)": [[9, "db.surreal.SurrealWrapper.delete", false]], "delete_clinic() (in module models.clinic)": [[15, "models.clinic.delete_clinic", false]], "delete_conversation() (services.conversation_service.conversationservice method)": [[19, "services.conversation_service.ConversationService.delete_conversation", false]], "delete_encounter_route() (in module routes.patients)": [[18, "routes.patients.delete_encounter_route", false]], "deleter() (types.dynamicclassattribute method)": [[20, "types.DynamicClassAttribute.deleter", false]], "demographic_no (migrations.demo_utils.patientfactory attribute)": [[14, "migrations.demo_utils.PatientFactory.demographic_no", false]], "dummy_data": [[10, "module-dummy_data", false]], "dynamicclassattribute (class in types)": [[20, "types.DynamicClassAttribute", false]], "efetch_abstract() (services.apis.ncbi method)": [[19, "services.apis.NCBI.efetch_abstract", false]], "ellipsistype (in module types)": [[20, "types.EllipsisType", false]], "email (migrations.demo_utils.patientfactory attribute)": [[14, "migrations.demo_utils.PatientFactory.email", false]], "emergency (models.appointment.appointmenttype attribute)": [[15, "models.appointment.AppointmentType.EMERGENCY", false]], "encounter (class in migrations.demo_utils)": [[14, "migrations.demo_utils.Encounter", false]], "encounterfactory (class in migrations.demo_utils)": [[14, "migrations.demo_utils.EncounterFactory", false]], "encounterfactory.meta (class in migrations.demo_utils)": [[14, "migrations.demo_utils.EncounterFactory.Meta", false]], "encrypt() (services.encryption.encryptionservice method)": [[19, "services.encryption.EncryptionService.encrypt", false]], "encrypt_api_key() (services.encryption.encryptionservice method)": [[19, "services.encryption.EncryptionService.encrypt_api_key", false]], "encryptionservice (class in services.encryption)": [[19, "services.encryption.EncryptionService", false]], "error() (logger.logger method)": [[13, "logger.Logger.error", false]], "esearch() (services.apis.ncbi method)": [[19, "services.apis.NCBI.esearch", false]], "esummary() (services.apis.ncbi method)": [[19, "services.apis.NCBI.esummary", false]], "extract_entities_from_notes_route() (in module routes.patients)": [[18, "routes.patients.extract_entities_from_notes_route", false]], "f() (in module migrations.demo_utils)": [[14, "migrations.demo_utils.f", false]], "factorywrapper (class in migrations.demo_utils)": [[14, "migrations.demo_utils.FactoryWrapper", false]], "fetch_clinical_trials() (services.apis.clinicaltrials method)": [[19, "services.apis.ClinicalTrials.fetch_clinical_trials", false]], "fetch_history() (llm.agent.llmagent method)": [[11, "llm.agent.LLMAgent.fetch_history", false]], "fetch_mcp_tool_defs() (in module llm.mcp_tools)": [[11, "llm.mcp_tools.fetch_mcp_tool_defs", false]], "fetch_medline() (services.apis.medline method)": [[19, "services.apis.Medline.fetch_medline", false]], "fetch_ncbi_studies() (services.apis.ncbi method)": [[19, "services.apis.NCBI.fetch_ncbi_studies", false]], "find_path() (db.surreal_graph.asyncgraphcontroller method)": [[9, "db.surreal_graph.AsyncGraphController.find_path", false]], "find_path() (db.surreal_graph.graphcontroller method)": [[9, "db.surreal_graph.GraphController.find_path", false]], "first_name (migrations.demo_utils.patientfactory attribute)": [[14, "migrations.demo_utils.PatientFactory.first_name", false]], "follow_up (models.appointment.appointmenttype attribute)": [[15, "models.appointment.AppointmentType.FOLLOW_UP", false]], "format() (logger.customformatter method)": [[13, "logger.CustomFormatter.format", false]], "formats (logger.customformatter attribute)": [[13, "logger.CustomFormatter.FORMATS", false]], "frametype (in module types)": [[20, "types.FrameType", false]], "from_db() (models.clinic.clinic static method)": [[15, "models.clinic.Clinic.from_db", false]], "from_dict() (llm.agent.llmagent class method)": [[11, "llm.agent.LLMAgent.from_dict", false]], "from_dict() (models.appointment.appointment class method)": [[15, "models.appointment.Appointment.from_dict", false]], "from_dict() (models.conversation.conversation class method)": [[15, "models.conversation.Conversation.from_dict", false]], "from_dict() (models.conversation.message class method)": [[15, "models.conversation.Message.from_dict", false]], "from_dict() (models.llm_chat.llmchat class method)": [[15, "models.llm_chat.LLMChat.from_dict", false]], "from_mcp() (llm.agent.llmagent class method)": [[11, "llm.agent.LLMAgent.from_mcp", false]], "functiontype (in module types)": [[20, "types.FunctionType", false]], "generate_surrealql_create_query() (in module models.clinic)": [[15, "models.clinic.generate_surrealql_create_query", false]], "generator (llm.mcp_tools.customheaderauth attribute)": [[11, "llm.mcp_tools.CustomHeaderAuth.Generator", false]], "generatortype (in module types)": [[20, "types.GeneratorType", false]], "genericalias (class in types)": [[20, "types.GenericAlias", false]], "geojsonpoint (class in models.clinic)": [[15, "models.clinic.GeoJSONPoint", false]], "get_all_appointments() (services.scheduling.schedulingservice method)": [[19, "services.scheduling.SchedulingService.get_all_appointments", false]], "get_all_clinics() (in module models.clinic)": [[15, "models.clinic.get_all_clinics", false]], "get_all_encounters_route() (in module routes.patients)": [[18, "routes.patients.get_all_encounters_route", false]], "get_all_users() (services.user_service.userservice method)": [[19, "services.user_service.UserService.get_all_users", false]], "get_all_users_route() (in module routes.users)": [[18, "routes.users.get_all_users_route", false]], "get_api_usage_route() (in module routes.users)": [[18, "routes.users.get_api_usage_route", false]], "get_appointment() (services.scheduling.schedulingservice method)": [[19, "services.scheduling.SchedulingService.get_appointment", false]], "get_appointment_route() (in module routes.appointments)": [[18, "routes.appointments.get_appointment_route", false]], "get_appointment_statuses_route() (in module routes.appointments)": [[18, "routes.appointments.get_appointment_statuses_route", false]], "get_appointment_types_route() (in module routes.appointments)": [[18, "routes.appointments.get_appointment_types_route", false]], "get_appointments_by_date() (services.scheduling.schedulingservice method)": [[19, "services.scheduling.SchedulingService.get_appointments_by_date", false]], "get_appointments_by_patient() (services.scheduling.schedulingservice method)": [[19, "services.scheduling.SchedulingService.get_appointments_by_patient", false]], "get_appointments_by_provider() (services.scheduling.schedulingservice method)": [[19, "services.scheduling.SchedulingService.get_appointments_by_provider", false]], "get_appointments_route() (in module routes.appointments)": [[18, "routes.appointments.get_appointments_route", false]], "get_available_slots() (services.scheduling.schedulingservice method)": [[19, "services.scheduling.SchedulingService.get_available_slots", false]], "get_available_slots_route() (in module routes.appointments)": [[18, "routes.appointments.get_available_slots_route", false]], "get_cache_stats_route() (in module routes.patients)": [[18, "routes.patients.get_cache_stats_route", false]], "get_clinic_by_id() (in module models.clinic)": [[15, "models.clinic.get_clinic_by_id", false]], "get_context() (db.vec.vec method)": [[9, "db.vec.Vec.get_context", false]], "get_conversation_by_id() (services.conversation_service.conversationservice method)": [[19, "services.conversation_service.ConversationService.get_conversation_by_id", false]], "get_conversation_by_participants() (services.conversation_service.conversationservice method)": [[19, "services.conversation_service.ConversationService.get_conversation_by_participants", false]], "get_conversation_messages() (services.conversation_service.conversationservice method)": [[19, "services.conversation_service.ConversationService.get_conversation_messages", false]], "get_conversation_messages_route() (in module routes.chat)": [[18, "routes.chat.get_conversation_messages_route", false]], "get_current_api_key() (in module services.auth_decorators)": [[19, "services.auth_decorators.get_current_api_key", false]], "get_current_api_key_permissions() (in module services.auth_decorators)": [[19, "services.auth_decorators.get_current_api_key_permissions", false]], "get_current_user() (in module services.auth_decorators)": [[19, "services.auth_decorators.get_current_user", false]], "get_current_user_id() (in module services.auth_decorators)": [[19, "services.auth_decorators.get_current_user_id", false]], "get_current_user_info_route() (in module routes.users)": [[18, "routes.users.get_current_user_info_route", false]], "get_current_user_role() (in module services.auth_decorators)": [[19, "services.auth_decorators.get_current_user_role", false]], "get_datetime() (models.appointment.appointment method)": [[15, "models.appointment.Appointment.get_datetime", false]], "get_duration_minutes() (models.appointment.appointment method)": [[15, "models.appointment.Appointment.get_duration_minutes", false]], "get_encounter_by_id_route() (in module routes.patients)": [[18, "routes.patients.get_encounter_by_id_route", false]], "get_encounters_by_patient_route() (in module routes.patients)": [[18, "routes.patients.get_encounters_by_patient_route", false]], "get_encryption_service() (in module services.encryption)": [[19, "services.encryption.get_encryption_service", false]], "get_llm_chat() (services.llm_chat_service.llmchatservice method)": [[19, "services.llm_chat_service.LLMChatService.get_llm_chat", false]], "get_llm_chats_for_user() (services.llm_chat_service.llmchatservice method)": [[19, "services.llm_chat_service.LLMChatService.get_llm_chats_for_user", false]], "get_openai_api_key() (services.user_service.userservice method)": [[19, "services.user_service.UserService.get_openai_api_key", false]], "get_openai_security_service() (in module services.openai_security)": [[19, "services.openai_security.get_openai_security_service", false]], "get_optimal_api_key() (services.user_service.userservice method)": [[19, "services.user_service.UserService.get_optimal_api_key", false]], "get_organization_id() (services.user_service.userservice method)": [[19, "services.user_service.UserService.get_organization_id", false]], "get_redis_connection() (in module services.redis_client)": [[19, "services.redis_client.get_redis_connection", false]], "get_relations() (db.surreal_graph.asyncgraphcontroller method)": [[9, "db.surreal_graph.AsyncGraphController.get_relations", false]], "get_relations() (db.surreal_graph.graphcontroller method)": [[9, "db.surreal_graph.GraphController.get_relations", false]], "get_usage_stats() (services.openai_security.openaisecurityservice method)": [[19, "services.openai_security.OpenAISecurityService.get_usage_stats", false]], "get_user_api_key_with_validation() (services.openai_security.openaisecurityservice method)": [[19, "services.openai_security.OpenAISecurityService.get_user_api_key_with_validation", false]], "get_user_by_email() (services.user_service.userservice method)": [[19, "services.user_service.UserService.get_user_by_email", false]], "get_user_by_id() (services.user_service.userservice method)": [[19, "services.user_service.UserService.get_user_by_id", false]], "get_user_by_username() (services.user_service.userservice method)": [[19, "services.user_service.UserService.get_user_by_username", false]], "get_user_conversations() (services.conversation_service.conversationservice method)": [[19, "services.conversation_service.ConversationService.get_user_conversations", false]], "get_user_conversations_route() (in module routes.chat)": [[18, "routes.chat.get_user_conversations_route", false]], "get_user_profile_route() (in module routes.users)": [[18, "routes.users.get_user_profile_route", false]], "get_user_settings() (in module routes.users)": [[18, "routes.users.get_user_settings", false]], "get_user_settings() (services.user_service.userservice method)": [[19, "services.user_service.UserService.get_user_settings", false]], "getsetdescriptortype (in module types)": [[20, "types.GetSetDescriptorType", false]], "getter() (types.dynamicclassattribute method)": [[20, "types.DynamicClassAttribute.getter", false]], "gpt_4_1 (llm.agent.llmmodel attribute)": [[11, "llm.agent.LLMModel.GPT_4_1", false]], "gpt_4_1_mini (llm.agent.llmmodel attribute)": [[11, "llm.agent.LLMModel.GPT_4_1_MINI", false]], "gpt_4_1_nano (llm.agent.llmmodel attribute)": [[11, "llm.agent.LLMModel.GPT_4_1_NANO", false]], "graphcontroller (class in db.surreal_graph)": [[9, "db.surreal_graph.GraphController", false]], "green (logger.customformatter attribute)": [[13, "logger.CustomFormatter.green", false]], "grey (logger.customformatter attribute)": [[13, "logger.CustomFormatter.grey", false]], "has_openai_api_key() (services.user_service.userservice method)": [[19, "services.user_service.UserService.has_openai_api_key", false]], "has_optimal_api_key() (services.user_service.userservice method)": [[19, "services.user_service.UserService.has_optimal_api_key", false]], "headers (services.optimal.optimalservice property)": [[19, "services.optimal.OptimalService.headers", false]], "health_check() (in module llm.mcp.mcp_init)": [[12, "llm.mcp.mcp_init.health_check", false]], "icd10code (class in services.apis)": [[19, "services.apis.ICD10Code", false]], "import_icd_codes() (in module models.icd)": [[15, "models.icd.import_icd_codes", false]], "info() (logger.logger method)": [[13, "logger.Logger.info", false]], "init() (db.vec.vec method)": [[9, "db.vec.Vec.init", false]], "init_vec() (in module migrations.vec)": [[14, "migrations.vec.init_vec", false]], "insert() (db.vec.vec method)": [[9, "db.vec.Vec.insert", false]], "is_cancelled() (models.appointment.appointment method)": [[15, "models.appointment.Appointment.is_cancelled", false]], "is_completed() (models.appointment.appointment method)": [[15, "models.appointment.Appointment.is_completed", false]], "is_confirmed() (models.appointment.appointment method)": [[15, "models.appointment.Appointment.is_confirmed", false]], "is_in_past() (models.appointment.appointment method)": [[15, "models.appointment.Appointment.is_in_past", false]], "is_participant() (models.conversation.conversation method)": [[15, "models.conversation.Conversation.is_participant", false]], "is_this_week() (models.appointment.appointment method)": [[15, "models.appointment.Appointment.is_this_week", false]], "is_today() (models.appointment.appointment method)": [[15, "models.appointment.Appointment.is_today", false]], "km_m() (in module models.clinic)": [[15, "models.clinic.km_m", false]], "lambdatype (in module types)": [[20, "types.LambdaType", false]], "last_name (migrations.demo_utils.patientfactory attribute)": [[14, "migrations.demo_utils.PatientFactory.last_name", false]], "latitude (models.clinic.clinictype attribute)": [[15, "models.clinic.ClinicType.latitude", false]], "llm": [[11, "module-llm", false]], "llm.agent": [[11, "module-llm.agent", false]], "llm.mcp": [[12, "module-llm.mcp", false]], "llm.mcp.mcp_init": [[12, "module-llm.mcp.mcp_init", false]], "llm.mcp.register_tools": [[12, "module-llm.mcp.register_tools", false]], "llm.mcp_tools": [[11, "module-llm.mcp_tools", false]], "llm_agent_endpoint_route() (in module routes.llm_agent)": [[18, "routes.llm_agent.llm_agent_endpoint_route", false]], "llmagent (class in llm.agent)": [[11, "llm.agent.LLMAgent", false]], "llmchat (class in models.llm_chat)": [[15, "models.llm_chat.LLMChat", false]], "llmchatservice (class in services.llm_chat_service)": [[19, "services.llm_chat_service.LLMChatService", false]], "llmmodel (class in llm.agent)": [[11, "llm.agent.LLMModel", false]], "load_csv() (in module migrations.demo_utils)": [[14, "migrations.demo_utils.load_csv", false]], "location (migrations.demo_utils.patientfactory attribute)": [[14, "migrations.demo_utils.PatientFactory.location", false]], "location (models.clinic.clinictype attribute)": [[15, "models.clinic.ClinicType.location", false]], "log_api_usage() (services.openai_security.openaisecurityservice method)": [[19, "services.openai_security.OpenAISecurityService.log_api_usage", false]], "log_format (logger.customformatter attribute)": [[13, "logger.CustomFormatter.log_format", false]], "logger": [[13, "module-logger", false]], "logger (class in logger)": [[13, "logger.Logger", false]], "login_route() (in module routes.users)": [[18, "routes.users.login_route", false]], "logout() (services.user_service.userservice method)": [[19, "services.user_service.UserService.logout", false]], "logout_route() (in module routes.users)": [[18, "routes.users.logout_route", false]], "longitude (models.clinic.clinictype attribute)": [[15, "models.clinic.ClinicType.longitude", false]], "lookup_icd_code() (in module models.icd)": [[15, "models.icd.lookup_icd_code", false]], "main() (in module migrations.setup_user_settings)": [[14, "migrations.setup_user_settings.main", false]], "main() (in module opt.hypertension)": [[17, "opt.hypertension.main", false]], "mappingproxytype (in module types)": [[20, "types.MappingProxyType", false]], "mark_messages_as_read() (services.conversation_service.conversationservice method)": [[19, "services.conversation_service.ConversationService.mark_messages_as_read", false]], "medline (class in services.apis)": [[19, "services.apis.Medline", false]], "memberdescriptortype (in module types)": [[20, "types.MemberDescriptorType", false]], "message (class in models.conversation)": [[15, "models.conversation.Message", false]], "methoddescriptortype (in module types)": [[20, "types.MethodDescriptorType", false]], "methodtype (in module types)": [[20, "types.MethodType", false]], "methodwrappertype (in module types)": [[20, "types.MethodWrapperType", false]], "migrations": [[14, "module-migrations", false]], "migrations.demo": [[14, "module-migrations.demo", false]], "migrations.demo_utils": [[14, "module-migrations.demo_utils", false]], "migrations.setup_user_settings": [[14, "module-migrations.setup_user_settings", false]], "migrations.vec": [[14, "module-migrations.vec", false]], "model (migrations.demo_utils.encounterfactory.meta attribute)": [[14, "migrations.demo_utils.EncounterFactory.Meta.model", false]], "model (migrations.demo_utils.patientfactory.meta attribute)": [[14, "migrations.demo_utils.PatientFactory.Meta.model", false]], "models": [[15, "module-models", false]], "models.appointment": [[15, "module-models.appointment", false]], "models.clinic": [[15, "module-models.clinic", false]], "models.conversation": [[15, "module-models.conversation", false]], "models.icd": [[15, "module-models.icd", false]], "models.llm_chat": [[15, "module-models.llm_chat", false]], "models.patient": [[15, "module-models.patient", false]], "models.user": [[15, "module-models.user", false]], "module": [[9, "module-db", false], [9, "module-db.surreal", false], [9, "module-db.surreal_graph", false], [9, "module-db.vec", false], [10, "module-dummy_data", false], [11, "module-llm", false], [11, "module-llm.agent", false], [11, "module-llm.mcp_tools", false], [12, "module-llm.mcp", false], [12, "module-llm.mcp.mcp_init", false], [12, "module-llm.mcp.register_tools", false], [13, "module-logger", false], [14, "module-migrations", false], [14, "module-migrations.demo", false], [14, "module-migrations.demo_utils", false], [14, "module-migrations.setup_user_settings", false], [14, "module-migrations.vec", false], [15, "module-models", false], [15, "module-models.appointment", false], [15, "module-models.clinic", false], [15, "module-models.conversation", false], [15, "module-models.icd", false], [15, "module-models.llm_chat", false], [15, "module-models.patient", false], [15, "module-models.user", false], [17, "module-opt", false], [17, "module-opt.hypertension", false], [18, "module-routes", false], [18, "module-routes.appointments", false], [18, "module-routes.chat", false], [18, "module-routes.llm_agent", false], [18, "module-routes.patients", false], [18, "module-routes.testing", false], [18, "module-routes.users", false], [19, "module-services", false], [19, "module-services.apis", false], [19, "module-services.auth_decorators", false], [19, "module-services.conversation_service", false], [19, "module-services.encryption", false], [19, "module-services.llm_chat_service", false], [19, "module-services.notifications", false], [19, "module-services.openai_security", false], [19, "module-services.optimal", false], [19, "module-services.redis_client", false], [19, "module-services.scheduling", false], [19, "module-services.user_service", false], [20, "module-types", false]], "moduletype (in module types)": [[20, "types.ModuleType", false]], "name (models.clinic.clinictype attribute)": [[15, "models.clinic.ClinicType.name", false]], "ncbi (class in services.apis)": [[19, "services.apis.NCBI", false]], "new_class() (in module types)": [[20, "types.new_class", false]], "no_show (models.appointment.appointmentstatus attribute)": [[15, "models.appointment.AppointmentStatus.NO_SHOW", false]], "nonetype (class in types)": [[20, "types.NoneType", false]], "note_id (migrations.demo_utils.encounterfactory attribute)": [[14, "migrations.demo_utils.EncounterFactory.note_id", false]], "note_text (migrations.demo_utils.encounterfactory attribute)": [[14, "migrations.demo_utils.EncounterFactory.note_text", false]], "notimplementedtype (class in types)": [[20, "types.NotImplementedType", false]], "openaisecurityservice (class in services.openai_security)": [[19, "services.openai_security.OpenAISecurityService", false]], "opt": [[17, "module-opt", false]], "opt.hypertension": [[17, "module-opt.hypertension", false]], "optimalmetadata (class in services.optimal)": [[19, "services.optimal.OptimalMetadata", false]], "optimalschema (class in services.optimal)": [[19, "services.optimal.OptimalSchema", false]], "optimalservice (class in services.optimal)": [[19, "services.optimal.OptimalService", false]], "optional_auth() (in module services.auth_decorators)": [[19, "services.auth_decorators.optional_auth", false]], "organization_id (models.clinic.clinictype attribute)": [[15, "models.clinic.ClinicType.organization_id", false]], "patch_intake_route() (in module routes.patients)": [[18, "routes.patients.patch_intake_route", false]], "patient_endpoint_route() (in module routes.patients)": [[18, "routes.patients.patient_endpoint_route", false]], "patientfactory (class in migrations.demo_utils)": [[14, "migrations.demo_utils.PatientFactory", false]], "patientfactory.meta (class in migrations.demo_utils)": [[14, "migrations.demo_utils.PatientFactory.Meta", false]], "patients_endpoint_route() (in module routes.patients)": [[18, "routes.patients.patients_endpoint_route", false]], "payload (services.optimal.optimalservice property)": [[19, "services.optimal.OptimalService.payload", false]], "phone (migrations.demo_utils.patientfactory attribute)": [[14, "migrations.demo_utils.PatientFactory.phone", false]], "prepare_class() (in module types)": [[20, "types.prepare_class", false]], "process_tool_call() (in module llm.agent)": [[11, "llm.agent.process_tool_call", false]], "process_tool_calls() (llm.agent.llmagent method)": [[11, "llm.agent.LLMAgent.process_tool_calls", false]], "provider_id (migrations.demo_utils.encounterfactory attribute)": [[14, "migrations.demo_utils.EncounterFactory.provider_id", false]], "publish_event() (in module services.notifications)": [[19, "services.notifications.publish_event", false]], "publish_event_with_buffer() (in module services.notifications)": [[19, "services.notifications.publish_event_with_buffer", false]], "query() (db.surreal.asyncdbcontroller method)": [[9, "db.surreal.AsyncDbController.query", false]], "query() (db.surreal.asyncsurrealwrapper method)": [[9, "db.surreal.AsyncSurrealWrapper.query", false]], "query() (db.surreal.dbcontroller method)": [[9, "db.surreal.DbController.query", false]], "query() (db.surreal.surrealwrapper method)": [[9, "db.surreal.SurrealWrapper.query", false]], "rag_chat() (db.vec.vec method)": [[9, "db.vec.Vec.rag_chat", false]], "red (logger.customformatter attribute)": [[13, "logger.CustomFormatter.red", false]], "register_openai_tool() (in module llm.mcp.register_tools)": [[12, "llm.mcp.register_tools.register_openai_tool", false]], "register_route() (in module routes.users)": [[18, "routes.users.register_route", false]], "relate() (db.surreal_graph.asyncgraphcontroller method)": [[9, "db.surreal_graph.AsyncGraphController.relate", false]], "relate() (db.surreal_graph.graphcontroller method)": [[9, "db.surreal_graph.GraphController.relate", false]], "remove_participant() (models.conversation.conversation method)": [[15, "models.conversation.Conversation.remove_participant", false]], "require_admin() (in module services.auth_decorators)": [[19, "services.auth_decorators.require_admin", false]], "require_api_key() (in module services.auth_decorators)": [[19, "services.auth_decorators.require_api_key", false]], "require_api_permission() (in module services.auth_decorators)": [[19, "services.auth_decorators.require_api_permission", false]], "require_api_permissions() (in module services.auth_decorators)": [[19, "services.auth_decorators.require_api_permissions", false]], "require_auth() (in module services.auth_decorators)": [[19, "services.auth_decorators.require_auth", false]], "require_patient() (in module services.auth_decorators)": [[19, "services.auth_decorators.require_patient", false]], "require_provider() (in module services.auth_decorators)": [[19, "services.auth_decorators.require_provider", false]], "require_role() (in module services.auth_decorators)": [[19, "services.auth_decorators.require_role", false]], "reset (logger.customformatter attribute)": [[13, "logger.CustomFormatter.reset", false]], "reset_conversation() (llm.agent.llmagent method)": [[11, "llm.agent.LLMAgent.reset_conversation", false]], "resolve_bases() (in module types)": [[20, "types.resolve_bases", false]], "routes": [[18, "module-routes", false]], "routes.appointments": [[18, "module-routes.appointments", false]], "routes.chat": [[18, "module-routes.chat", false]], "routes.llm_agent": [[18, "module-routes.llm_agent", false]], "routes.patients": [[18, "module-routes.patients", false]], "routes.testing": [[18, "module-routes.testing", false]], "routes.users": [[18, "module-routes.users", false]], "routine (models.appointment.appointmenttype attribute)": [[15, "models.appointment.AppointmentType.ROUTINE", false]], "save_csv() (in module migrations.demo_utils)": [[14, "migrations.demo_utils.save_csv", false]], "save_user_settings() (services.user_service.userservice method)": [[19, "services.user_service.UserService.save_user_settings", false]], "scheduled (models.appointment.appointmentstatus attribute)": [[15, "models.appointment.AppointmentStatus.SCHEDULED", false]], "schedulingservice (class in services.scheduling)": [[19, "services.scheduling.SchedulingService", false]], "schema() (models.appointment.appointment method)": [[15, "models.appointment.Appointment.schema", false]], "search() (db.surreal.dbcontroller method)": [[9, "db.surreal.DbController.search", false]], "search_clinics_by_location() (in module models.clinic)": [[15, "models.clinic.search_clinics_by_location", false]], "search_encounters_route() (in module routes.patients)": [[18, "routes.patients.search_encounters_route", false]], "search_icd_by_description() (in module models.icd)": [[15, "models.icd.search_icd_by_description", false]], "search_patients_route() (in module routes.patients)": [[18, "routes.patients.search_patients_route", false]], "search_pubmed() (services.apis.ncbi method)": [[19, "services.apis.NCBI.search_pubmed", false]], "search_users_route() (in module routes.users)": [[18, "routes.users.search_users_route", false]], "seed() (db.vec.vec method)": [[9, "db.vec.Vec.seed", false]], "select() (db.surreal.asyncdbcontroller method)": [[9, "db.surreal.AsyncDbController.select", false]], "select() (db.surreal.asyncsurrealwrapper method)": [[9, "db.surreal.AsyncSurrealWrapper.select", false]], "select() (db.surreal.dbcontroller method)": [[9, "db.surreal.DbController.select", false]], "select() (db.surreal.surrealwrapper method)": [[9, "db.surreal.SurrealWrapper.select", false]], "select_many() (db.surreal.asyncdbcontroller method)": [[9, "db.surreal.AsyncDbController.select_many", false]], "select_many() (db.surreal.dbcontroller method)": [[9, "db.surreal.DbController.select_many", false]], "select_n_random_rows_from_csv() (in module migrations.demo_utils)": [[14, "migrations.demo_utils.select_n_random_rows_from_csv", false]], "send() (services.optimal.optimalservice method)": [[19, "services.optimal.OptimalService.send", false]], "send_message_route() (in module routes.chat)": [[18, "routes.chat.send_message_route", false]], "services": [[19, "module-services", false]], "services.apis": [[19, "module-services.apis", false]], "services.auth_decorators": [[19, "module-services.auth_decorators", false]], "services.conversation_service": [[19, "module-services.conversation_service", false]], "services.encryption": [[19, "module-services.encryption", false]], "services.llm_chat_service": [[19, "module-services.llm_chat_service", false]], "services.notifications": [[19, "module-services.notifications", false]], "services.openai_security": [[19, "module-services.openai_security", false]], "services.optimal": [[19, "module-services.optimal", false]], "services.redis_client": [[19, "module-services.redis_client", false]], "services.scheduling": [[19, "module-services.scheduling", false]], "services.user_service": [[19, "module-services.user_service", false]], "setter() (types.dynamicclassattribute method)": [[20, "types.DynamicClassAttribute.setter", false]], "settings_route() (in module routes.users)": [[18, "routes.users.settings_route", false]], "setup_default_admin_route() (in module routes.users)": [[18, "routes.users.setup_default_admin_route", false]], "setup_user_settings_schema() (in module migrations.setup_user_settings)": [[14, "migrations.setup_user_settings.setup_user_settings_schema", false]], "sex (migrations.demo_utils.patientfactory attribute)": [[14, "migrations.demo_utils.PatientFactory.sex", false]], "signin() (db.surreal.asyncsurrealwrapper method)": [[9, "db.surreal.AsyncSurrealWrapper.signin", false]], "signin() (db.surreal.surrealwrapper method)": [[9, "db.surreal.SurrealWrapper.signin", false]], "simplenamespace (class in types)": [[20, "types.SimpleNamespace", false]], "specialist (models.appointment.appointmenttype attribute)": [[15, "models.appointment.AppointmentType.SPECIALIST", false]], "state (models.clinic.address attribute)": [[15, "models.clinic.Address.state", false]], "store_event() (in module services.notifications)": [[19, "services.notifications.store_event", false]], "street (models.clinic.address attribute)": [[15, "models.clinic.Address.street", false]], "surrealwrapper (class in db.surreal)": [[9, "db.surreal.SurrealWrapper", false]], "test() (in module models.clinic)": [[15, "models.clinic.test", false]], "test_crud_route() (in module routes.testing)": [[18, "routes.testing.test_crud_route", false]], "test_surrealdb_route() (in module routes.testing)": [[18, "routes.testing.test_surrealdb_route", false]], "to_dict() (llm.agent.llmagent method)": [[11, "llm.agent.LLMAgent.to_dict", false]], "to_dict() (models.appointment.appointment method)": [[15, "models.appointment.Appointment.to_dict", false]], "to_dict() (models.clinic.clinic method)": [[15, "models.clinic.Clinic.to_dict", false]], "to_dict() (models.conversation.conversation method)": [[15, "models.conversation.Conversation.to_dict", false]], "to_dict() (models.conversation.message method)": [[15, "models.conversation.Message.to_dict", false]], "to_dict() (models.llm_chat.llmchat method)": [[15, "models.llm_chat.LLMChat.to_dict", false]], "to_dict() (services.optimal.optimalmetadata method)": [[19, "services.optimal.OptimalMetadata.to_dict", false]], "to_dict() (services.optimal.optimalschema method)": [[19, "services.optimal.OptimalSchema.to_dict", false]], "to_geojson_point() (models.clinic.clinic method)": [[15, "models.clinic.Clinic.to_geojson_point", false]], "tracebacktype (in module types)": [[20, "types.TracebackType", false]], "type (models.clinic.geojsonpoint attribute)": [[15, "models.clinic.GeoJSONPoint.type", false]], "types": [[20, "module-types", false]], "uniontype (class in types)": [[20, "types.UnionType", false]], "update() (db.surreal.asyncdbcontroller method)": [[9, "db.surreal.AsyncDbController.update", false]], "update() (db.surreal.asyncsurrealwrapper method)": [[9, "db.surreal.AsyncSurrealWrapper.update", false]], "update() (db.surreal.dbcontroller method)": [[9, "db.surreal.DbController.update", false]], "update() (db.surreal.surrealwrapper method)": [[9, "db.surreal.SurrealWrapper.update", false]], "update_appointment() (services.scheduling.schedulingservice method)": [[19, "services.scheduling.SchedulingService.update_appointment", false]], "update_appointment_route() (in module routes.appointments)": [[18, "routes.appointments.update_appointment_route", false]], "update_clinic() (in module models.clinic)": [[15, "models.clinic.update_clinic", false]], "update_encounter_route() (in module routes.patients)": [[18, "routes.patients.update_encounter_route", false]], "update_openai_api_key() (services.user_service.userservice method)": [[19, "services.user_service.UserService.update_openai_api_key", false]], "update_optimal_api_key() (services.user_service.userservice method)": [[19, "services.user_service.UserService.update_optimal_api_key", false]], "update_user() (services.user_service.userservice method)": [[19, "services.user_service.UserService.update_user", false]], "update_user_profile_route() (in module routes.users)": [[18, "routes.users.update_user_profile_route", false]], "update_user_settings() (in module routes.users)": [[18, "routes.users.update_user_settings", false]], "use() (db.surreal.asyncsurrealwrapper method)": [[9, "db.surreal.AsyncSurrealWrapper.use", false]], "use() (db.surreal.surrealwrapper method)": [[9, "db.surreal.SurrealWrapper.use", false]], "usernotaffiliatederror": [[19, "services.user_service.UserNotAffiliatedError", false]], "userservice (class in services.user_service)": [[19, "services.user_service.UserService", false]], "validate() (services.apis.icd10code method)": [[19, "services.apis.ICD10Code.validate", false]], "validate_api_key() (services.openai_security.openaisecurityservice method)": [[19, "services.openai_security.OpenAISecurityService.validate_api_key", false]], "validate_session() (services.user_service.userservice method)": [[19, "services.user_service.UserService.validate_session", false]], "vec (class in db.vec)": [[9, "db.vec.Vec", false]], "warn() (logger.logger method)": [[13, "logger.Logger.warn", false]], "warning() (logger.logger method)": [[13, "logger.Logger.warning", false]], "wrapperdescriptortype (in module types)": [[20, "types.WrapperDescriptorType", false]], "yellow (logger.customformatter attribute)": [[13, "logger.CustomFormatter.yellow", false]], "zip (models.clinic.address attribute)": [[15, "models.clinic.Address.zip", false]]}, "objects": {"": [[9, 0, 0, "-", "db"], [10, 0, 0, "-", "dummy_data"], [11, 0, 0, "-", "llm"], [13, 0, 0, "-", "logger"], [14, 0, 0, "-", "migrations"], [15, 0, 0, "-", "models"], [17, 0, 0, "-", "opt"], [18, 0, 0, "-", "routes"], [19, 0, 0, "-", "services"], [20, 0, 0, "-", "types"]], "db": [[9, 0, 0, "-", "surreal"], [9, 0, 0, "-", "surreal_graph"], [9, 0, 0, "-", "vec"]], "db.surreal": [[9, 1, 1, "", "AsyncDbController"], [9, 1, 1, "", "AsyncSurrealWrapper"], [9, 1, 1, "", "DbController"], [9, 1, 1, "", "SurrealWrapper"]], "db.surreal.AsyncDbController": [[9, 2, 1, "", "close"], [9, 2, 1, "", "connect"], [9, 2, 1, "", "create"], [9, 3, 1, "", "db"], [9, 2, 1, "", "delete"], [9, 2, 1, "", "query"], [9, 2, 1, "", "select"], [9, 2, 1, "", "select_many"], [9, 2, 1, "", "update"]], "db.surreal.AsyncSurrealWrapper": [[9, 2, 1, "", "close"], [9, 2, 1, "", "create"], [9, 2, 1, "", "delete"], [9, 2, 1, "", "query"], [9, 2, 1, "", "select"], [9, 2, 1, "", "signin"], [9, 2, 1, "", "update"], [9, 2, 1, "", "use"]], "db.surreal.DbController": [[9, 2, 1, "", "close"], [9, 2, 1, "", "connect"], [9, 2, 1, "", "create"], [9, 3, 1, "", "db"], [9, 2, 1, "", "delete"], [9, 2, 1, "", "query"], [9, 2, 1, "", "search"], [9, 2, 1, "", "select"], [9, 2, 1, "", "select_many"], [9, 2, 1, "", "update"]], "db.surreal.SurrealWrapper": [[9, 2, 1, "", "close"], [9, 2, 1, "", "create"], [9, 2, 1, "", "delete"], [9, 2, 1, "", "query"], [9, 2, 1, "", "select"], [9, 2, 1, "", "signin"], [9, 2, 1, "", "update"], [9, 2, 1, "", "use"]], "db.surreal_graph": [[9, 1, 1, "", "AsyncGraphController"], [9, 1, 1, "", "GraphController"]], "db.surreal_graph.AsyncGraphController": [[9, 2, 1, "", "count_connections"], [9, 2, 1, "", "find_path"], [9, 2, 1, "", "get_relations"], [9, 2, 1, "", "relate"]], "db.surreal_graph.GraphController": [[9, 2, 1, "", "count_connections"], [9, 2, 1, "", "find_path"], [9, 2, 1, "", "get_relations"], [9, 2, 1, "", "relate"]], "db.vec": [[9, 1, 1, "", "BatchItem"], [9, 1, 1, "", "BatchList"], [9, 1, 1, "", "Vec"]], "db.vec.Vec": [[9, 2, 1, "", "get_context"], [9, 2, 1, "", "init"], [9, 2, 1, "", "insert"], [9, 2, 1, "", "rag_chat"], [9, 2, 1, "", "seed"]], "llm": [[11, 0, 0, "-", "agent"], [12, 0, 0, "-", "mcp"], [11, 0, 0, "-", "mcp_tools"]], "llm.agent": [[11, 1, 1, "", "LLMAgent"], [11, 1, 1, "", "LLMModel"], [11, 4, 1, "", "process_tool_call"]], "llm.agent.LLMAgent": [[11, 2, 1, "", "add_tool"], [11, 2, 1, "", "complete"], [11, 2, 1, "", "fetch_history"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_mcp"], [11, 2, 1, "", "process_tool_calls"], [11, 2, 1, "", "reset_conversation"], [11, 2, 1, "", "to_dict"]], "llm.agent.LLMModel": [[11, 3, 1, "", "GPT_4_1"], [11, 3, 1, "", "GPT_4_1_MINI"], [11, 3, 1, "", "GPT_4_1_NANO"]], "llm.mcp": [[12, 0, 0, "-", "mcp_init"], [12, 0, 0, "-", "register_tools"]], "llm.mcp.mcp_init": [[12, 4, 1, "", "health_check"]], "llm.mcp.register_tools": [[12, 4, 1, "", "register_openai_tool"]], "llm.mcp_tools": [[11, 1, 1, "", "CustomHeaderAuth"], [11, 4, 1, "", "fetch_mcp_tool_defs"]], "llm.mcp_tools.CustomHeaderAuth": [[11, 3, 1, "", "Generator"], [11, 2, 1, "", "auth_flow"]], "logger": [[13, 1, 1, "", "CustomFormatter"], [13, 1, 1, "", "Logger"]], "logger.CustomFormatter": [[13, 3, 1, "", "FORMATS"], [13, 3, 1, "", "black"], [13, 3, 1, "", "bold_red"], [13, 2, 1, "", "format"], [13, 3, 1, "", "green"], [13, 3, 1, "", "grey"], [13, 3, 1, "", "log_format"], [13, 3, 1, "", "red"], [13, 3, 1, "", "reset"], [13, 3, 1, "", "yellow"]], "logger.Logger": [[13, 2, 1, "", "configure"], [13, 2, 1, "", "debug"], [13, 2, 1, "", "error"], [13, 2, 1, "", "info"], [13, 2, 1, "", "warn"], [13, 2, 1, "", "warning"]], "migrations": [[14, 0, 0, "-", "demo"], [14, 0, 0, "-", "demo_utils"], [14, 0, 0, "-", "setup_user_settings"], [14, 0, 0, "-", "vec"]], "migrations.demo": [[14, 4, 1, "", "create_forms"], [14, 4, 1, "", "create_n_patients"]], "migrations.demo_utils": [[14, 1, 1, "", "Encounter"], [14, 1, 1, "", "EncounterFactory"], [14, 1, 1, "", "FactoryWrapper"], [14, 1, 1, "", "PatientFactory"], [14, 4, 1, "", "f"], [14, 4, 1, "", "load_csv"], [14, 4, 1, "", "save_csv"], [14, 4, 1, "", "select_n_random_rows_from_csv"]], "migrations.demo_utils.EncounterFactory": [[14, 1, 1, "", "Meta"], [14, 3, 1, "", "date_created"], [14, 3, 1, "", "note_id"], [14, 3, 1, "", "note_text"], [14, 3, 1, "", "provider_id"]], "migrations.demo_utils.EncounterFactory.Meta": [[14, 3, 1, "", "model"]], "migrations.demo_utils.PatientFactory": [[14, 1, 1, "", "Meta"], [14, 3, 1, "", "date_of_birth"], [14, 3, 1, "", "demographic_no"], [14, 3, 1, "", "email"], [14, 3, 1, "", "first_name"], [14, 3, 1, "", "last_name"], [14, 3, 1, "", "location"], [14, 3, 1, "", "phone"], [14, 3, 1, "", "sex"]], "migrations.demo_utils.PatientFactory.Meta": [[14, 3, 1, "", "model"]], "migrations.setup_user_settings": [[14, 4, 1, "", "check_existing_schema"], [14, 4, 1, "", "main"], [14, 4, 1, "", "setup_user_settings_schema"]], "migrations.vec": [[14, 4, 1, "", "init_vec"]], "models": [[15, 0, 0, "-", "appointment"], [15, 0, 0, "-", "clinic"], [15, 0, 0, "-", "conversation"], [15, 0, 0, "-", "icd"], [15, 0, 0, "-", "llm_chat"], [15, 0, 0, "-", "patient"], [15, 0, 0, "-", "user"]], "models.appointment": [[15, 1, 1, "", "Appointment"], [15, 1, 1, "", "AppointmentStatus"], [15, 1, 1, "", "AppointmentType"]], "models.appointment.Appointment": [[15, 2, 1, "", "can_be_cancelled"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "get_datetime"], [15, 2, 1, "", "get_duration_minutes"], [15, 2, 1, "", "is_cancelled"], [15, 2, 1, "", "is_completed"], [15, 2, 1, "", "is_confirmed"], [15, 2, 1, "", "is_in_past"], [15, 2, 1, "", "is_this_week"], [15, 2, 1, "", "is_today"], [15, 2, 1, "", "schema"], [15, 2, 1, "", "to_dict"]], "models.appointment.AppointmentStatus": [[15, 3, 1, "", "CANCELLED"], [15, 3, 1, "", "COMPLETED"], [15, 3, 1, "", "CONFIRMED"], [15, 3, 1, "", "NO_SHOW"], [15, 3, 1, "", "SCHEDULED"]], "models.appointment.AppointmentType": [[15, 3, 1, "", "CONSULTATION"], [15, 3, 1, "", "EMERGENCY"], [15, 3, 1, "", "FOLLOW_UP"], [15, 3, 1, "", "ROUTINE"], [15, 3, 1, "", "SPECIALIST"]], "models.clinic": [[15, 1, 1, "", "Address"], [15, 1, 1, "", "Clinic"], [15, 1, 1, "", "ClinicType"], [15, 1, 1, "", "GeoJSONPoint"], [15, 4, 1, "", "create_clinic"], [15, 4, 1, "", "delete_clinic"], [15, 4, 1, "", "generate_surrealql_create_query"], [15, 4, 1, "", "get_all_clinics"], [15, 4, 1, "", "get_clinic_by_id"], [15, 4, 1, "", "km_m"], [15, 4, 1, "", "search_clinics_by_location"], [15, 4, 1, "", "test"], [15, 4, 1, "", "update_clinic"]], "models.clinic.Address": [[15, 3, 1, "", "city"], [15, 3, 1, "", "country"], [15, 3, 1, "", "state"], [15, 3, 1, "", "street"], [15, 3, 1, "", "zip"]], "models.clinic.Clinic": [[15, 2, 1, "", "from_db"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_geojson_point"]], "models.clinic.ClinicType": [[15, 3, 1, "", "address"], [15, 3, 1, "", "latitude"], [15, 3, 1, "", "location"], [15, 3, 1, "", "longitude"], [15, 3, 1, "", "name"], [15, 3, 1, "", "organization_id"]], "models.clinic.GeoJSONPoint": [[15, 3, 1, "", "coordinates"], [15, 3, 1, "", "type"]], "models.conversation": [[15, 1, 1, "", "Conversation"], [15, 1, 1, "", "Message"]], "models.conversation.Conversation": [[15, 2, 1, "", "add_participant"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "is_participant"], [15, 2, 1, "", "remove_participant"], [15, 2, 1, "", "to_dict"]], "models.conversation.Message": [[15, 2, 1, "", "from_dict"], [15, 2, 1, "", "to_dict"]], "models.icd": [[15, 4, 1, "", "define_index"], [15, 4, 1, "", "import_icd_codes"], [15, 4, 1, "", "lookup_icd_code"], [15, 4, 1, "", "search_icd_by_description"]], "models.llm_chat": [[15, 1, 1, "", "LLMChat"]], "models.llm_chat.LLMChat": [[15, 2, 1, "", "add_message"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "to_dict"]], "opt": [[17, 0, 0, "-", "hypertension"]], "opt.hypertension": [[17, 4, 1, "", "build_hypertension_payload"], [17, 4, 1, "", "create_food_data_pd"], [17, 4, 1, "", "main"]], "routes": [[18, 0, 0, "-", "appointments"], [18, 0, 0, "-", "chat"], [18, 0, 0, "-", "llm_agent"], [18, 0, 0, "-", "patients"], [18, 0, 0, "-", "testing"], [18, 0, 0, "-", "users"]], "routes.appointments": [[18, 4, 1, "", "cancel_appointment_route"], [18, 4, 1, "", "confirm_appointment_route"], [18, 4, 1, "", "create_appointment_route"], [18, 4, 1, "", "get_appointment_route"], [18, 4, 1, "", "get_appointment_statuses_route"], [18, 4, 1, "", "get_appointment_types_route"], [18, 4, 1, "", "get_appointments_route"], [18, 4, 1, "", "get_available_slots_route"], [18, 4, 1, "", "update_appointment_route"]], "routes.chat": [[18, 4, 1, "", "create_conversation_route"], [18, 4, 1, "", "get_conversation_messages_route"], [18, 4, 1, "", "get_user_conversations_route"], [18, 4, 1, "", "send_message_route"]], "routes.llm_agent": [[18, 4, 1, "", "llm_agent_endpoint_route"]], "routes.patients": [[18, 4, 1, "", "create_encounter_route"], [18, 4, 1, "", "delete_encounter_route"], [18, 4, 1, "", "extract_entities_from_notes_route"], [18, 4, 1, "", "get_all_encounters_route"], [18, 4, 1, "", "get_cache_stats_route"], [18, 4, 1, "", "get_encounter_by_id_route"], [18, 4, 1, "", "get_encounters_by_patient_route"], [18, 4, 1, "", "patch_intake_route"], [18, 4, 1, "", "patient_endpoint_route"], [18, 4, 1, "", "patients_endpoint_route"], [18, 4, 1, "", "search_encounters_route"], [18, 4, 1, "", "search_patients_route"], [18, 4, 1, "", "update_encounter_route"]], "routes.testing": [[18, 4, 1, "", "debug_session_route"], [18, 4, 1, "", "test_crud_route"], [18, 4, 1, "", "test_surrealdb_route"]], "routes.users": [[18, 4, 1, "", "activate_user_route"], [18, 4, 1, "", "change_password_route"], [18, 4, 1, "", "check_users_exist_route"], [18, 4, 1, "", "deactivate_user_route"], [18, 4, 1, "", "get_all_users_route"], [18, 4, 1, "", "get_api_usage_route"], [18, 4, 1, "", "get_current_user_info_route"], [18, 4, 1, "", "get_user_profile_route"], [18, 4, 1, "", "get_user_settings"], [18, 4, 1, "", "login_route"], [18, 4, 1, "", "logout_route"], [18, 4, 1, "", "register_route"], [18, 4, 1, "", "search_users_route"], [18, 4, 1, "", "settings_route"], [18, 4, 1, "", "setup_default_admin_route"], [18, 4, 1, "", "update_user_profile_route"], [18, 4, 1, "", "update_user_settings"]], "services": [[19, 0, 0, "-", "apis"], [19, 0, 0, "-", "auth_decorators"], [19, 0, 0, "-", "conversation_service"], [19, 0, 0, "-", "encryption"], [19, 0, 0, "-", "llm_chat_service"], [19, 0, 0, "-", "notifications"], [19, 0, 0, "-", "openai_security"], [19, 0, 0, "-", "optimal"], [19, 0, 0, "-", "redis_client"], [19, 0, 0, "-", "scheduling"], [19, 0, 0, "-", "user_service"]], "services.apis": [[19, 1, 1, "", "ClinicalTrials"], [19, 1, 1, "", "ICD10Code"], [19, 1, 1, "", "Medline"], [19, 1, 1, "", "NCBI"]], "services.apis.ClinicalTrials": [[19, 2, 1, "", "fetch_clinical_trials"]], "services.apis.ICD10Code": [[19, 2, 1, "", "validate"]], "services.apis.Medline": [[19, 2, 1, "", "fetch_medline"]], "services.apis.NCBI": [[19, 2, 1, "", "efetch_abstract"], [19, 2, 1, "", "esearch"], [19, 2, 1, "", "esummary"], [19, 2, 1, "", "fetch_ncbi_studies"], [19, 2, 1, "", "search_pubmed"]], "services.auth_decorators": [[19, 4, 1, "", "get_current_api_key"], [19, 4, 1, "", "get_current_api_key_permissions"], [19, 4, 1, "", "get_current_user"], [19, 4, 1, "", "get_current_user_id"], [19, 4, 1, "", "get_current_user_role"], [19, 4, 1, "", "optional_auth"], [19, 4, 1, "", "require_admin"], [19, 4, 1, "", "require_api_key"], [19, 4, 1, "", "require_api_permission"], [19, 4, 1, "", "require_api_permissions"], [19, 4, 1, "", "require_auth"], [19, 4, 1, "", "require_patient"], [19, 4, 1, "", "require_provider"], [19, 4, 1, "", "require_role"]], "services.conversation_service": [[19, 1, 1, "", "ConversationService"]], "services.conversation_service.ConversationService": [[19, 2, 1, "", "add_message"], [19, 2, 1, "", "close"], [19, 2, 1, "", "connect"], [19, 2, 1, "", "create_conversation"], [19, 2, 1, "", "delete_conversation"], [19, 2, 1, "", "get_conversation_by_id"], [19, 2, 1, "", "get_conversation_by_participants"], [19, 2, 1, "", "get_conversation_messages"], [19, 2, 1, "", "get_user_conversations"], [19, 2, 1, "", "mark_messages_as_read"]], "services.encryption": [[19, 1, 1, "", "EncryptionService"], [19, 4, 1, "", "get_encryption_service"]], "services.encryption.EncryptionService": [[19, 2, 1, "", "decrypt"], [19, 2, 1, "", "decrypt_api_key"], [19, 2, 1, "", "encrypt"], [19, 2, 1, "", "encrypt_api_key"]], "services.llm_chat_service": [[19, 1, 1, "", "LLMChatService"]], "services.llm_chat_service.LLMChatService": [[19, 2, 1, "", "add_message"], [19, 2, 1, "", "close"], [19, 2, 1, "", "connect"], [19, 2, 1, "", "create_llm_chat"], [19, 2, 1, "", "get_llm_chat"], [19, 2, 1, "", "get_llm_chats_for_user"]], "services.notifications": [[19, 4, 1, "", "publish_event"], [19, 4, 1, "", "publish_event_with_buffer"], [19, 4, 1, "", "store_event"]], "services.openai_security": [[19, 1, 1, "", "OpenAISecurityService"], [19, 4, 1, "", "get_openai_security_service"]], "services.openai_security.OpenAISecurityService": [[19, 2, 1, "", "check_rate_limit"], [19, 2, 1, "", "get_usage_stats"], [19, 2, 1, "", "get_user_api_key_with_validation"], [19, 2, 1, "", "log_api_usage"], [19, 2, 1, "", "validate_api_key"]], "services.optimal": [[19, 1, 1, "", "OptimalMetadata"], [19, 1, 1, "", "OptimalSchema"], [19, 1, 1, "", "OptimalService"]], "services.optimal.OptimalMetadata": [[19, 2, 1, "", "to_dict"]], "services.optimal.OptimalSchema": [[19, 2, 1, "", "to_dict"]], "services.optimal.OptimalService": [[19, 5, 1, "", "headers"], [19, 5, 1, "", "payload"], [19, 2, 1, "", "send"]], "services.redis_client": [[19, 4, 1, "", "get_redis_connection"]], "services.scheduling": [[19, 1, 1, "", "SchedulingService"]], "services.scheduling.SchedulingService": [[19, 2, 1, "", "cancel_appointment"], [19, 2, 1, "", "close"], [19, 2, 1, "", "complete_appointment"], [19, 2, 1, "", "confirm_appointment"], [19, 2, 1, "", "connect"], [19, 2, 1, "", "create_appointment"], [19, 2, 1, "", "get_all_appointments"], [19, 2, 1, "", "get_appointment"], [19, 2, 1, "", "get_appointments_by_date"], [19, 2, 1, "", "get_appointments_by_patient"], [19, 2, 1, "", "get_appointments_by_provider"], [19, 2, 1, "", "get_available_slots"], [19, 2, 1, "", "update_appointment"]], "services.user_service": [[19, 6, 1, "", "UserNotAffiliatedError"], [19, 1, 1, "", "UserService"]], "services.user_service.UserService": [[19, 2, 1, "", "activate_user"], [19, 2, 1, "", "authenticate_user"], [19, 2, 1, "", "change_password"], [19, 2, 1, "", "close"], [19, 2, 1, "", "connect"], [19, 2, 1, "", "create_default_admin"], [19, 2, 1, "", "create_session"], [19, 2, 1, "", "create_user"], [19, 2, 1, "", "deactivate_user"], [19, 2, 1, "", "get_all_users"], [19, 2, 1, "", "get_openai_api_key"], [19, 2, 1, "", "get_optimal_api_key"], [19, 2, 1, "", "get_organization_id"], [19, 2, 1, "", "get_user_by_email"], [19, 2, 1, "", "get_user_by_id"], [19, 2, 1, "", "get_user_by_username"], [19, 2, 1, "", "get_user_settings"], [19, 2, 1, "", "has_openai_api_key"], [19, 2, 1, "", "has_optimal_api_key"], [19, 2, 1, "", "logout"], [19, 2, 1, "", "save_user_settings"], [19, 2, 1, "", "update_openai_api_key"], [19, 2, 1, "", "update_optimal_api_key"], [19, 2, 1, "", "update_user"], [19, 2, 1, "", "validate_session"]], "types": [[20, 3, 1, "", "AsyncGeneratorType"], [20, 3, 1, "", "BuiltinFunctionType"], [20, 3, 1, "", "BuiltinMethodType"], [20, 3, 1, "", "CellType"], [20, 3, 1, "", "ClassMethodDescriptorType"], [20, 3, 1, "", "CodeType"], [20, 3, 1, "", "CoroutineType"], [20, 1, 1, "", "DynamicClassAttribute"], [20, 3, 1, "", "EllipsisType"], [20, 3, 1, "", "FrameType"], [20, 3, 1, "", "FunctionType"], [20, 3, 1, "", "GeneratorType"], [20, 1, 1, "", "GenericAlias"], [20, 3, 1, "", "GetSetDescriptorType"], [20, 3, 1, "", "LambdaType"], [20, 3, 1, "", "MappingProxyType"], [20, 3, 1, "", "MemberDescriptorType"], [20, 3, 1, "", "MethodDescriptorType"], [20, 3, 1, "", "MethodType"], [20, 3, 1, "", "MethodWrapperType"], [20, 3, 1, "", "ModuleType"], [20, 1, 1, "", "NoneType"], [20, 1, 1, "", "NotImplementedType"], [20, 1, 1, "", "SimpleNamespace"], [20, 3, 1, "", "TracebackType"], [20, 1, 1, "", "UnionType"], [20, 3, 1, "", "WrapperDescriptorType"], [20, 4, 1, "", "coroutine"], [20, 4, 1, "", "new_class"], [20, 4, 1, "", "prepare_class"], [20, 4, 1, "", "resolve_bases"]], "types.DynamicClassAttribute": [[20, 2, 1, "", "deleter"], [20, 2, 1, "", "getter"], [20, 2, 1, "", "setter"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property", "6": "py:exception"}, "terms": {"": [9, 11, 13, 15, 18, 19, 20], "0": [7, 15, 19], "00": [7, 8, 18, 19], "000": 8, "00z": [7, 18], "01": [7, 8, 18], "01t00": [8, 18], "01t12": 18, "02t00": 18, "09": 18, "0m": 13, "1": [0, 9, 11, 18, 19, 22], "10": [1, 13, 15, 18, 19, 20], "100": [1, 4, 8, 18, 19], "11": 18, "113883": 19, "123": [7, 8, 9, 18], "12345": 18, "1234567890": 18, "16": 19, "1640995200": 4, "1m": 13, "2": [0, 18, 19, 22], "20": [13, 18, 19], "200": 18, "201": [5, 18], "2023": 18, "2024": 8, "2025": 7, "20m": 13, "20t10": 7, "20t14": 7, "256": [4, 8], "2fjson": 19, "3": [9, 20, 22], "30": [1, 7, 13, 18, 19], "3000": 6, "31": 13, "32": [4, 8, 13], "33": 13, "35": 19, "3600": 4, "38": 13, "3rd": 19, "4": [9, 11, 20, 22], "40": 13, "400": [5, 9, 18], "401": [18, 19], "403": [18, 19], "404": [5, 18], "429": 19, "456": [7, 9], "5": [1, 4, 14, 18, 19, 22], "50": [13, 19], "500": [5, 18], "5000": [7, 15, 18], "55": 1, "560": 20, "585": 20, "6": [7, 19], "604": 20, "6379": 7, "67890": 18, "8000": 6, "840": 19, "8700": 9, "9": [19, 20], "90": 19, "A": [5, 6, 9, 11, 14, 15, 18, 19, 20], "As": 6, "At": 18, "By": 0, "For": 7, "If": [6, 9, 11, 18, 19, 20], "In": [0, 4, 7], "It": [9, 15, 18, 19, 22], "NOT": 12, "No": [4, 8, 18], "Not": [7, 18, 22], "Or": 7, "TO": 12, "The": [4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19], "There": 6, "These": 2, "To": 7, "WITH": 12, "__args__": 20, "__getattr__": 20, "__origin__": 20, "__prepare__": 20, "about": [3, 11, 19], "abov": 6, "absolut": 2, "abstract": 19, "abus": 4, "accept": [18, 19], "access": [2, 3, 4, 6, 7, 8, 9, 11, 18, 19, 20], "accordingli": 6, "account": [1, 8, 18, 19], "accur": 11, "accuraci": 4, "acknowledg": 7, "act": 20, "action": 5, "activ": [6, 7, 18, 19, 20], "activate_us": [16, 19], "activate_user_rout": [16, 18], "ad": [15, 19], "adapt": 4, "add": [5, 7, 8, 11, 13, 15, 19, 22], "add_messag": [15, 16, 19], "add_particip": [15, 16], "add_tool": [11, 16], "addit": [2, 4, 8, 11, 13, 19], "address": [5, 15, 16, 18, 19], "adjust": [4, 6], "admin": [18, 19], "administr": 18, "advanc": [4, 5], "advisor": 1, "ae": [4, 8], "affili": 19, "afford": 2, "after": 7, "again": 4, "against": 4, "agent": [16, 18], "agpl": [0, 2], "agplv3": [0, 3], "agre": 0, "ai": [1, 2, 15, 18], "ai_assist": [18, 19], "alert": 4, "algorithm": 3, "alia": [11, 14, 20], "all": [2, 3, 6, 7, 8, 9, 15, 18, 19], "allow": [18, 19, 20], "along": 18, "alpin": 7, "alreadi": [7, 14, 15], "also": [6, 15], "alwai": 8, "am": 19, "amount": 4, "an": [1, 5, 6, 9, 11, 13, 14, 15, 18, 19, 20], "analyt": 22, "ani": [2, 6, 7, 9, 11, 13, 15, 17, 18, 19, 20], "annual": [1, 2, 7], "anomali": 4, "answer": [9, 11], "api": [6, 7, 9, 11, 16, 18, 22], "api_kei": [4, 8, 9, 11, 19], "api_usag": 18, "apikei": 19, "apiservic": 8, "app": [6, 7, 22], "append": 19, "applic": [5, 7, 8, 18, 19], "appoint": [16, 19], "appointment_d": [15, 18, 19], "appointment_id": [18, 19], "appointment_status": 18, "appointment_typ": [15, 18, 19], "appointmentid": 7, "appointmentstatu": [15, 16], "appointmenttyp": [15, 16], "appropri": [5, 7, 13, 20], "apt": 7, "ar": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 15, 18, 19], "architectur": [6, 22], "aren": 20, "arg": [13, 14], "argument": [11, 13, 20], "arrai": 5, "arsmedicatech": [4, 7, 8, 12], "articl": 19, "asctim": 13, "ask": 9, "assert": 0, "assist": [9, 11, 15, 18, 19], "assistant_cont": 11, "assistant_id": [15, 19], "assum": 0, "async": [9, 11, 12, 15], "async_db_control": 9, "asyncdbcontrol": [9, 16], "asyncgeneratortyp": [16, 20], "asyncgraphcontrol": [9, 16], "asynchron": [9, 15], "asyncio": 9, "asyncopenai": 9, "asyncsurr": 9, "asyncsurrealwrapp": [9, 16], "atribut": 20, "attach": 5, "attack": 4, "attempt": [14, 19], "attribut": [15, 20], "attributeerror": 20, "audit": [1, 2, 3, 4, 5, 8], "augment": 9, "auth": [11, 19], "auth_decor": 16, "auth_flow": [11, 16], "authent": [4, 7, 8, 9, 18, 19], "authenticate_us": [16, 19], "author": [8, 19], "autocod": 18, "automat": [4, 8], "autonomi": 22, "avail": [5, 18, 19], "available_slot": 18, "avatar": 18, "avoid": 19, "await": 8, "awesom": 0, "b": 0, "back": 3, "backend": [4, 6, 22], "background": 18, "backup": [1, 8], "bad": 18, "bar": 4, "bare": 6, "base": [7, 8, 9, 11, 13, 14, 15, 18, 19, 20], "base64": 19, "basic": 18, "batch": 9, "batchitem": [9, 16], "batchlist": [9, 16], "bearer": 8, "befor": 8, "being": [2, 4, 19], "belong": 3, "benchmark": 2, "benefic": 2, "benefit": [0, 11], "best": 22, "better": [11, 19], "between": [9, 15, 19, 20], "beyond": 2, "bi": 7, "bill": 19, "bin": 6, "black": [13, 16], "bodi": [3, 18], "bold_r": [13, 16], "bool": [14, 15, 19], "both": [4, 5, 18], "bound": 19, "bounti": 1, "branch": 0, "break": 3, "brew": 7, "brief": 6, "browser": 6, "buffer": [7, 19], "bug": 1, "build": [11, 17], "build_hypertension_payload": [16, 17], "built": 20, "builtin": 20, "builtinfunctiontyp": [16, 20], "builtinmethodtyp": [16, 20], "bulk": 5, "busi": [3, 19], "button": 5, "c": 19, "cach": [4, 18], "cache_en": 18, "calcul": 15, "call": [4, 5, 6, 7, 8, 11, 18, 20], "call_funct": 11, "callabl": [11, 12, 19], "callback": 7, "can": [0, 2, 5, 6, 8, 11, 15, 18], "can_be_cancel": [15, 16], "cancel": [15, 16, 18, 19], "cancel_appoint": [16, 19], "cancel_appointment_rout": [16, 18], "cannot": [9, 18], "capabl": 5, "cardiologi": 18, "care": [2, 3, 11], "case": [5, 15, 18], "cd": [6, 8], "celltyp": [16, 20], "certif": 22, "chang": [8, 18, 19], "change_password": [16, 18, 19], "change_password_rout": [16, 18], "channel": 19, "charact": [4, 5, 8], "chat": [7, 9, 15, 16, 19], "chatcompletionmessagetoolcal": 11, "chatcompletiontoolparam": 11, "check": [0, 4, 7, 8, 12, 14, 15, 18, 19], "check_exist": 18, "check_existing_schema": [14, 16], "check_rate_limit": [4, 16, 19], "check_users_exist_rout": [16, 18], "checkout": 0, "checkup": 7, "citi": [5, 15, 16, 18], "class": [9, 11, 13, 14, 15, 19, 20], "classmethod": [11, 15], "classmethoddescriptortyp": [16, 20], "cleanup": [4, 18], "clear": 11, "cli": 7, "client": [9, 12, 19], "clinic": [0, 1, 2, 3, 11, 16, 18, 19], "clinic_address": 18, "clinic_id": 15, "clinic_nam": 18, "clinicaltri": [16, 19], "clinician": 3, "clinictyp": [15, 16], "close": [9, 16, 19], "cloud": 1, "cm": 18, "code": [2, 3, 5, 14, 15, 18, 19, 22], "code_of_conduct": 0, "codeinterpretertoolcal": 11, "codetyp": [16, 20], "collect": [1, 2, 3, 11], "color": 13, "column": [14, 15], "com": [0, 18], "command": 3, "commit": 0, "common": 22, "commun": [1, 2, 7], "compat": 9, "complet": [5, 11, 15, 16, 18, 19], "complete_appoint": [16, 19], "complianc": 4, "complic": 12, "compon": [6, 22], "comprehens": [4, 11], "concis": 11, "condit": 19, "conduct": 22, "configur": [8, 13, 16, 22], "confirm": [15, 16, 18, 19], "confirm_appoint": [16, 19], "confirm_appointment_rout": [16, 18], "conflict": 19, "connect": [4, 8, 9, 14, 15, 16, 19], "consent": [2, 3], "consider": 22, "consol": 7, "const": [5, 7, 8], "constraint": 19, "construct": 19, "consult": [15, 16, 18, 19], "contact": [4, 5], "contain": [6, 9, 11, 12, 14, 15, 17, 18, 19], "content": [7, 8, 16], "context": [2, 9, 12, 19], "continu": 19, "contradict": 3, "contribut": 22, "contributor": 0, "control": [3, 4, 8, 9], "conv": 7, "conv12345": 18, "convent": 0, "convers": [7, 11, 16, 18, 19], "conversation_id": [7, 15, 18, 19], "conversation_object": 19, "conversation_servic": 16, "conversation_typ": [15, 19], "conversationservic": [16, 19], "convert": [11, 15, 19, 20], "cooki": 7, "coordin": [15, 16], "copi": [6, 20], "copyleft": 3, "cor": 7, "coroutin": [16, 20], "coroutinetyp": [16, 20], "correctli": [5, 19], "correspond": 11, "corrupt": 8, "cost": [3, 4], "count": [4, 9, 18], "count_connect": [9, 16], "countri": [5, 15, 16], "coven": 0, "creat": [0, 8, 9, 11, 14, 15, 16, 17, 18, 19, 20], "create_appoint": [16, 19], "create_appointment_rout": [16, 18], "create_clin": [15, 16], "create_convers": [16, 19], "create_conversation_rout": [16, 18], "create_default_admin": [16, 19], "create_encounter_rout": [16, 18], "create_food_data_pd": [16, 17], "create_form": [14, 16], "create_llm_chat": [16, 19], "create_n_pati": [14, 16], "create_sess": [16, 19], "create_us": [16, 19], "created_at": [7, 8, 15, 18, 19], "creation": [8, 15, 18, 19], "credenti": [9, 18], "crud": [18, 22], "csv": [14, 15], "csv_file_path": 15, "ctx": 12, "curl": [7, 19], "current": [4, 9, 12, 18, 19], "current_password": [18, 19], "current_user_id": 7, "custom": [11, 13, 19], "custom_llm_endpoint": 11, "customformatt": [13, 16], "customheaderauth": [11, 16], "cycl": 5, "d": [6, 7, 13], "data": [2, 3, 7, 9, 10, 11, 14, 15, 17, 18, 19, 22], "data_sourc": 9, "data_typ": 9, "databas": [6, 7, 9, 11, 14, 15, 18, 19, 22], "datafram": 17, "dataset": 1, "date": [5, 8, 18, 19], "date_cr": [14, 16], "date_of_birth": [5, 14, 16], "datefmt": 13, "datetim": 15, "db": [16, 22], "db_control": [9, 19], "db_url": 9, "dbcontrol": [9, 16, 19], "dco": 0, "dd": 19, "deactiv": [18, 19], "deactivate_us": [16, 19], "deactivate_user_rout": [16, 18], "debian": 7, "debug": [4, 9, 13, 16, 18, 19], "debug_session_rout": [16, 18], "decis": 3, "declar": 2, "decor": 19, "decrypt": [8, 16, 19], "decrypt_api_kei": [8, 16, 19], "decrypted_kei": 8, "default": [9, 13, 15, 18, 19], "defin": [14, 15, 20], "define_index": [15, 16], "definit": [11, 12], "degrad": 4, "delai": 19, "delet": [2, 9, 15, 16, 18, 19, 20], "delete_clin": [15, 16], "delete_convers": [16, 19], "delete_encounter_rout": [16, 18], "deliv": 7, "demo": 16, "demo_util": 16, "democratis": 0, "demographic_no": [5, 14, 16], "demonstr": [2, 15], "deni": 18, "denial": 2, "deploi": 0, "deploy": 6, "deriv": [4, 8], "describ": [4, 5, 8], "descript": 15, "descriptor": 20, "design": [3, 4, 5, 8], "desktop": 8, "destini": 3, "detail": [4, 5, 8, 15, 18, 19, 22], "detect": 4, "develop": [3, 6, 22], "devic": [7, 8], "df": 17, "diagnost": 14, "diagnostic_cod": 14, "dict": [9, 11, 12, 15, 17, 19, 20], "dictionari": [9, 11, 15, 19], "diet": 17, "differ": [18, 20], "digit": 0, "direct": [2, 7, 9, 19], "directli": 20, "discrimin": 2, "displai": [4, 5, 8, 18], "distanc": 15, "distribut": 4, "dn": 19, "do": [4, 6], "doc": [0, 1, 6, 20], "docker": [6, 7], "document": [0, 4, 5, 7, 8, 14], "doe": [9, 12, 14, 15, 18, 19], "doesn": 19, "dollar": [1, 4], "don": [8, 11], "donat": 2, "done": 20, "dr": 7, "dropdown": 18, "due": 12, "dummi": 10, "dummy_data": [16, 22], "durat": [15, 18, 19], "duration_minut": [18, 19], "dure": [5, 18], "dynam": 20, "dynamicclassattribut": [16, 20], "e": [9, 11, 14, 15, 18, 19, 20], "each": [4, 7, 9, 11, 14, 15, 19], "edg": 9, "edge_data": 9, "edge_t": 9, "edit": 5, "efetch": 19, "efetch_abstract": [16, 19], "ellipsi": 20, "ellipsistyp": [16, 20], "email": [5, 14, 16, 18, 19], "embed": 9, "embed_model": 9, "emerg": [15, 16, 18], "empti": [9, 18, 19, 20], "en": 19, "enabl": 8, "enclosur": 22, "encod": 19, "encodeuricompon": 5, "encount": [5, 14, 16, 18, 19], "encounter_id": 18, "encounterfactori": [14, 16], "encourag": 2, "encrypt": [3, 4, 7, 16], "encrypt_api_kei": [8, 16, 19], "encrypted_api_kei": 19, "encrypted_data": 19, "encrypted_kei": 8, "encryption_kei": [4, 8], "encryption_servic": 8, "encryptionservic": [16, 19], "end": [4, 9, 18, 19], "end_dat": 19, "end_tabl": 9, "end_tim": [15, 18, 19], "endpoint": [4, 12, 18, 22], "enforc": 4, "enhanc": 22, "enough": 9, "ensur": [4, 7, 8, 18, 19], "entiti": 18, "entrez": 19, "entri": 20, "enum": [11, 15, 20], "enumer": 11, "env": [6, 7], "environ": [6, 22], "equit": 2, "error": [7, 8, 9, 13, 16, 18, 19, 22], "error_messag": 19, "esearch": [16, 19], "essenti": 6, "establish": [7, 19], "esummari": [16, 19], "etc": [2, 18, 19], "ethic": 22, "even": 3, "event": [19, 22], "event_data": [7, 19], "eventdata": 19, "everi": [0, 1, 3, 11, 14], "everyon": 3, "exampl": [0, 6, 9, 18, 22], "exceed": [4, 19], "except": [9, 19], "exclud": 18, "exec_bodi": 20, "execut": [9, 11], "exist": [5, 8, 9, 11, 14, 18, 19], "expect": [15, 18], "expens": 1, "experi": 4, "expir": 19, "expires_at": 19, "explain": 7, "export": [2, 5, 8], "expos": [3, 8], "extract": [3, 18], "extract_entities_from_notes_rout": [16, 18], "f": [5, 14, 16, 19], "factor": [4, 8], "factori": 14, "factory_class": 14, "factorywrapp": [14, 16], "fail": [4, 7, 8, 9, 15, 18, 19], "failur": [4, 8, 18], "fair": 4, "faith": 0, "faker": 14, "fallback": 4, "fals": [14, 15, 18, 19], "fastmcp": 12, "fdel": 20, "feat": 0, "featur": [0, 1, 2, 3, 6, 22], "feder": 19, "feel": 7, "femal": 5, "fernet": 8, "fetch": [7, 11, 19], "fetch_clinical_tri": [16, 19], "fetch_histori": [11, 16], "fetch_mcp_tool_def": [11, 16], "fetch_medlin": [16, 19], "fetch_ncbi_studi": [16, 19], "fget": 20, "fhir": 0, "field": [5, 9, 15, 18, 19], "file": [5, 6, 7, 9, 14, 15], "filenam": 13, "filesearchtoolcal": 11, "fill": 0, "filter": [5, 9, 18, 19], "financ": 1, "find": 9, "find_path": [9, 16], "firewal": 7, "first": [0, 1, 6, 14, 18, 19], "first_nam": [5, 14, 16, 18, 19], "fix": [0, 1], "flask": [5, 6, 7, 11, 19], "float": [15, 19], "flow": [2, 3, 22], "fmt": 13, "fn": 12, "focus": 8, "follow": [0, 5, 6, 8, 15, 18], "follow_up": [15, 16, 18], "food": 17, "forbidden": [18, 19], "fork": [0, 3], "form": [5, 14], "format": [0, 4, 5, 7, 8, 11, 13, 15, 16, 18, 19], "formatt": 13, "foster": 3, "found": [5, 15, 18, 19], "frametyp": [16, 20], "friendli": 4, "from": [3, 7, 8, 9, 11, 14, 15, 18, 19, 20], "from_db": [15, 16], "from_dict": [11, 15, 16], "from_mcp": [11, 16], "from_record": 9, "frontend": [4, 6, 22], "fset": 20, "ft": 18, "full": [5, 15], "func": 20, "function": [7, 11, 12, 14, 15, 17, 18, 19, 20], "functiontoolcal": 11, "functiontyp": [16, 20], "fund": [1, 2], "futur": 22, "fy2025": 15, "g": [9, 11, 14, 15, 18, 19, 20], "gdpr": [2, 4], "gener": [8, 9, 11, 14, 15, 16, 20], "generate_surrealql_create_queri": [15, 16], "generatortyp": [16, 20], "genericalia": [16, 20], "geograph": 4, "geojson": 15, "geojsonpoint": [15, 16], "geospati": 15, "get": [4, 6, 7, 9, 15, 18, 19], "get_all_appoint": [16, 19], "get_all_clin": [15, 16], "get_all_encounters_rout": [16, 18], "get_all_us": [16, 19], "get_all_users_rout": [16, 18], "get_api_usage_rout": [16, 18], "get_appoint": [16, 19], "get_appointment_rout": [16, 18], "get_appointment_statuses_rout": [16, 18], "get_appointment_types_rout": [16, 18], "get_appointments_by_d": [16, 19], "get_appointments_by_pati": [16, 19], "get_appointments_by_provid": [16, 19], "get_appointments_rout": [16, 18], "get_available_slot": [16, 19], "get_available_slots_rout": [16, 18], "get_cache_stats_rout": [16, 18], "get_clinic_by_id": [15, 16], "get_context": [9, 16], "get_conversation_by_id": [16, 19], "get_conversation_by_particip": [16, 19], "get_conversation_messag": [16, 19], "get_conversation_messages_rout": [16, 18], "get_current_api_kei": [16, 19], "get_current_api_key_permiss": [16, 19], "get_current_us": [16, 19], "get_current_user_id": [16, 19], "get_current_user_info_rout": [16, 18], "get_current_user_rol": [16, 19], "get_datetim": [15, 16], "get_duration_minut": [15, 16], "get_encounter_by_id_rout": [16, 18], "get_encounters_by_patient_rout": [16, 18], "get_encryption_servic": [8, 16, 19], "get_llm_chat": [16, 19], "get_llm_chats_for_us": [16, 19], "get_openai_api_kei": [8, 16, 19], "get_openai_security_servic": [16, 19], "get_optimal_api_kei": [16, 19], "get_organization_id": [16, 19], "get_redis_connect": [16, 19], "get_rel": [9, 16], "get_usage_stat": [4, 16, 19], "get_user_api_key_with_valid": [4, 16, 19], "get_user_by_email": [16, 19], "get_user_by_id": [16, 19], "get_user_by_usernam": [16, 19], "get_user_convers": [16, 19], "get_user_conversations_rout": [16, 18], "get_user_profile_rout": [16, 18], "get_user_set": [8, 16, 18, 19], "getal": 5, "getapi": 8, "getbyid": 5, "getsetdescriptortyp": [16, 20], "getter": [8, 16, 20], "git": 0, "github": 1, "given": [9, 11, 15, 18, 19], "global": 19, "goal": 6, "goe": 1, "good": 0, "gov": 19, "gpt": [9, 11], "gpt_4_1": [11, 16], "gpt_4_1_mini": [11, 16], "gpt_4_1_nano": [11, 16], "grace": 4, "graph": [9, 16], "graphcontrol": [9, 16], "green": [13, 16], "grei": [13, 16], "group": 18, "grow": 3, "growth": 22, "guarante": 7, "guidelin": 22, "h": [7, 19], "ha": [4, 8, 9, 18, 19], "hand": 3, "handl": [8, 18, 22], "handleappointmentremind": 7, "handlenewmessag": 7, "handler": 19, "handlesystemnotif": 7, "happen": 8, "harass": 0, "has_kei": 8, "has_openai_api_kei": [8, 16, 18, 19], "has_optimal_api_kei": [16, 19], "have": [0, 9, 11, 15, 18, 19, 20], "headach": 18, "header": [11, 16, 18, 19], "health": [0, 1, 2, 12], "health_check": [11, 12], "healthcar": [3, 11, 15], "heart": 18, "hello": [7, 18], "help": 11, "helper": 19, "here": 8, "hesit": 11, "hh": 19, "hide": 8, "high": 19, "highest": 4, "hipaa": [2, 4], "histor": 4, "histori": [5, 11, 18], "hit": 19, "hook": 7, "host": [2, 7], "hour": [4, 7, 19], "how": 22, "http": [0, 4, 5, 6, 7, 11, 18, 19], "httpx": 11, "hyper": 22, "hypertens": 16, "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15, 18, 19, 20], "icd": [16, 18, 19], "icd10": 19, "icd10_cod": 19, "icd10cod": [15, 16, 19], "icd_cod": [15, 18], "id": [7, 8, 9, 11, 15, 18, 19], "identif": 8, "identifi": [2, 5], "immedi": [4, 7], "implement": [4, 5, 8, 9, 11], "import": [8, 15], "import_icd_cod": [15, 16], "improv": [0, 2], "inact": 18, "includ": [5, 6, 7, 18, 19], "incomplet": 7, "index": [5, 15], "indic": [9, 12, 18], "individu": 3, "inference_model": 9, "inflat": 3, "influenc": 3, "info": [13, 16, 19], "inform": [2, 4, 5, 8, 9, 11, 12, 18, 19], "informationrecipi": 19, "inherit": 19, "init": [9, 16], "init_vec": [14, 16], "initi": [6, 9, 12, 14, 18], "initial_guess": 19, "inject": 12, "inner": 14, "input": [4, 8, 19], "insensit": 18, "insert": [9, 15, 16], "inspect": [3, 20], "instal": 6, "instanc": [2, 9, 11, 12, 14, 15, 19, 20], "instruct": 22, "int": [9, 14, 15, 18, 19, 20], "intak": 18, "integr": [2, 5, 22], "intend": 18, "interact": [11, 15, 18, 19], "interfac": 7, "intern": 18, "invalid": [4, 5, 8, 15, 18, 19], "invit": 3, "ip": 4, "is_cancel": [15, 16], "is_complet": [15, 16], "is_confirm": [15, 16], "is_feder": 19, "is_in_past": [15, 16], "is_particip": [15, 16], "is_read": [15, 18], "is_this_week": [15, 16], "is_todai": [15, 16], "is_valid": [4, 19], "isai": 18, "iso": [5, 19], "issu": [0, 4, 18], "item": 9, "iter": [3, 8], "its": [13, 15, 18, 19], "j": 22, "jane": 0, "john": 18, "journal": 19, "json": [7, 8, 9, 11, 18, 19], "jsonl": 9, "k": 9, "keep": [3, 11], "kei": [6, 7, 8, 9, 11, 15, 18, 19], "kept": 9, "keyword": 13, "kilomet": 15, "km_m": [15, 16], "know": 6, "knowledg": [3, 9], "knowledgeresponsetyp": 19, "kubernet": 6, "kwarg": [11, 13, 14, 20], "kwd": 20, "label": 18, "lambdatyp": [16, 20], "languag": 15, "languagecod": 19, "larg": [9, 15], "last": [18, 19], "last_message_at": [15, 18], "last_nam": [5, 14, 16, 18, 19], "last_reset": 18, "lastmessag": [7, 18], "later": 4, "latest": 6, "latitud": [15, 16], "layer": 4, "least": [5, 18], "legal": [1, 2], "let": 6, "level": [8, 13, 19], "levelnam": 13, "leverag": 9, "lib": [7, 22], "librari": 13, "licens": [0, 2], "like": [15, 19], "limit": [2, 7, 18, 19], "lineno": 13, "link": 1, "linter": 0, "list": [5, 7, 9, 11, 14, 15, 18, 19, 20], "llm": [6, 15, 16, 18, 19, 22], "llm_agent": 16, "llm_agent_endpoint_rout": [16, 18], "llm_chat": [4, 16], "llm_chat_servic": 16, "llmagent": [11, 16], "llmchat": [15, 16, 19], "llmchatservic": [16, 19], "llmmodel": [11, 16], "load": [5, 8, 14], "load_csv": [14, 16], "local": [7, 22], "localhost": [6, 7, 9], "locat": [5, 14, 15, 16, 18, 19], "log": [3, 4, 5, 7, 8, 13, 15, 18, 19], "log_api_usag": [16, 19], "log_format": [13, 16], "logger": [9, 16, 19, 22], "logic": 9, "login": [18, 19], "login_rout": [16, 18], "logout": [16, 18, 19], "logout_rout": [16, 18], "logrecord": 13, "longer": 7, "longitud": [15, 16], "look": 15, "lookup_icd_cod": [15, 16], "low": 2, "m": [5, 6], "maco": 7, "made": [11, 18], "mai": 6, "main": [14, 16, 17], "mainsearchcriteria": 19, "maintain": [1, 3, 4], "mainten": 4, "make": 19, "male": 5, "malefic": 2, "manag": [4, 5, 7, 8, 15, 17, 18, 19], "manifesto": 22, "map": [0, 7, 11], "mappingproxytyp": [16, 20], "mark": 19, "mark_messages_as_read": [16, 19], "master": 8, "master_kei": 19, "match": [15, 18, 19], "max_record": 19, "max_requests_per_hour": 4, "max_token": [9, 11], "maximum": [9, 19], "mcp": [6, 11, 16], "mcp_init": [11, 16], "mcp_server": [6, 11, 16], "mcp_tool": 16, "mcp_url": 11, "md": [1, 2], "me": [6, 18], "medic": [5, 7, 9, 15, 18, 19], "medlin": [16, 19], "medlineplu": 19, "memberdescriptortyp": [16, 20], "memori": [4, 6], "messag": [4, 5, 8, 11, 13, 15, 16, 18, 19], "message_id": 18, "message_object": 19, "message_text": 7, "meta": [14, 16, 19], "metaclass": 20, "metadata": [11, 12, 19], "meter": 15, "method": [1, 4, 5, 8, 9, 11, 18, 19, 20], "methoddescriptortyp": [16, 20], "methodtyp": [16, 20], "methodwrappertyp": [16, 20], "metric": 18, "migrat": [4, 16, 22], "migration_openai_api_kei": 4, "mini": 11, "minimis": 3, "minut": [15, 19], "miss": 18, "ml": 2, "mm": 19, "mobil": [7, 8], "mock": 19, "mode": 19, "model": [1, 3, 4, 9, 11, 14, 16, 19, 22], "modern": 8, "modest": 3, "modif": 0, "modifi": [6, 11], "modul": [2, 16, 22], "moduletyp": [16, 20], "monet": 2, "monitor": [7, 19, 22], "more": 18, "mro": 20, "msg": [9, 13], "msg12345": 18, "msg_obj": 7, "multi": [4, 8], "multipl": [4, 19], "must": [2, 3, 8, 18, 19], "my": 0, "mypi": 0, "n": [7, 9, 11, 14], "name": [6, 9, 11, 13, 15, 16, 18, 19, 20], "namespac": [9, 20], "nano": [9, 11], "navig": [6, 7], "ncbi": [16, 19], "nearest": 9, "necessari": [9, 11, 18], "need": [4, 6, 8, 9, 11, 19], "neighbor": 9, "network": 4, "never": [4, 8], "new": [9, 15, 18, 19], "new_class": [16, 20], "new_password": [18, 19], "newli": [18, 19], "nif": 9, "no_show": [15, 16, 18], "node": 9, "non": 2, "none": [9, 11, 12, 13, 14, 15, 19, 20], "nonetyp": [16, 20], "normal": [18, 20], "normalized_ent": 18, "note": [4, 6, 12, 14, 15, 18, 19], "note_id": [14, 16], "note_text": [14, 16, 18], "note_typ": 18, "notif": [4, 6, 8, 16, 22], "notificationtest": 7, "notimplementedtyp": [16, 20], "npm": [6, 7], "nth": 14, "number": [5, 9, 14, 15, 18, 19], "nyou": [9, 11], "nyour": [9, 11], "o": 5, "object": [5, 9, 11, 12, 13, 14, 15, 18, 19, 20], "oblig": 2, "occur": [8, 9, 18], "off": [0, 1, 3], "ok": 18, "old_password": 18, "onappointmentremind": 7, "one": [1, 18, 19, 20], "onli": [6, 8, 14, 18, 19], "onnewmessag": 7, "onsystemnotif": 7, "ontologi": 0, "open": [0, 1, 3, 6], "openai": [8, 9, 11, 12, 18, 19, 22], "openai_api_kei": [8, 18], "openai_cli": 9, "openai_secur": 16, "openai_tool_def": [11, 12], "openaisecurityservic": [4, 16, 19], "oper": [8, 9, 15, 18, 22], "opt": [2, 16, 22], "optim": [16, 17], "optimalmetadata": [16, 19], "optimalschema": [16, 17, 19], "optimalservic": [16, 19], "option": [4, 5, 9, 11, 15, 18, 19], "optional_auth": [16, 19], "orchestr": 14, "order": [9, 19], "org": 0, "organ": 19, "organization_id": [15, 16], "origin": 22, "other": [5, 7, 11, 18], "otherwis": [14, 15, 19], "our": 3, "out": [0, 2, 18], "outgo": 9, "output": 13, "over": 22, "overridden": 11, "overview": [6, 22], "own": 4, "p": [6, 7], "packag": [6, 16, 22], "page": 7, "param": [9, 11, 12, 13, 14, 15, 17, 18, 19], "paramet": [9, 11, 15, 18, 19], "part": 1, "parti": 19, "partial": 18, "particip": [7, 15, 18, 19], "participant_id": 7, "participantid": 18, "particularli": 8, "pass": [6, 20], "password": [9, 18, 19], "past": [7, 15], "patch": [0, 18], "patch_intake_rout": [16, 18], "path": [9, 14, 15, 18], "patient": [0, 1, 2, 11, 14, 16, 19, 22], "patient_endpoint_rout": [16, 18], "patient_id": [5, 15, 18, 19], "patientapi": 5, "patientdata": 5, "patientfactori": [14, 16], "patientid": 18, "patients_endpoint_rout": [16, 18], "payload": [16, 17, 18, 19], "paypal": 1, "pbkdf2": [4, 8], "pd": 17, "pentest": 1, "pep": 20, "per": 4, "perform": [4, 5, 9, 11, 18], "period": 4, "permiss": 19, "persist": 7, "person": [5, 9], "phone": [5, 14, 16, 18], "ping": 7, "pip": 6, "pipeda": 2, "plain": [4, 8, 12, 19], "plaintextrespons": 12, "platform": [1, 4], "pleas": [0, 4, 6, 11], "pm": 19, "pmid": 19, "point": [15, 22], "popul": 18, "port": 7, "post": [1, 5, 7, 8, 18], "postapi": 8, "pr": 0, "practic": [2, 22], "predatori": 3, "prefer": 8, "prefix": 8, "prepar": 20, "prepare_class": [16, 20], "prevconvers": 7, "prevent": [4, 5, 7], "preview": 18, "price": 2, "primarili": 19, "principl": [2, 3], "prioritis": 3, "privaci": [0, 22], "privat": 0, "problem": [4, 17, 19], "problem_id": 19, "proce": 19, "process": [2, 9, 11, 14, 18], "process_tool_cal": [11, 16], "product": [0, 9], "profil": [7, 8, 18], "progress": [4, 15], "project": 3, "prompt": [1, 11], "proper": [4, 5], "properli": [5, 20], "properti": [19, 20], "proven": 2, "provid": [4, 5, 6, 7, 8, 9, 11, 15, 18, 19], "provider_id": [14, 15, 16, 18, 19], "proxi": 11, "pubdat": 19, "public": 18, "publish": [0, 2, 19], "publish_ev": [16, 19], "publish_event_with_buff": [7, 16, 19], "pubm": 19, "pubsub": [6, 7], "pull": [1, 11], "purpos": [3, 10, 19], "push": 7, "put": [3, 5, 18], "py": [6, 7], "pytest": 0, "python": [4, 6, 7, 8, 9, 20], "python3": 6, "q": [5, 18], "queri": [5, 9, 14, 15, 16, 18, 19], "question": [4, 9, 11], "r": [6, 9], "radic": 22, "radiu": 15, "rag": 9, "rag_chat": [9, 16], "rais": [9, 19, 20], "random": [14, 18], "rang": 19, "rate": [7, 19], "rate_limit_window": 4, "react": [5, 6, 7], "read": [5, 15, 19], "readm": [0, 6], "real": [4, 7, 8], "reason": [18, 19], "receiv": 7, "reciproc": 22, "recommend": 8, "reconnect": 7, "record": [5, 9, 13, 14, 15, 19], "red": [13, 16], "redi": [6, 19, 22], "redis_cli": [7, 16], "redis_host": 7, "redis_port": 7, "refresh": 7, "regist": [12, 18], "register_openai_tool": [11, 12], "register_rout": [16, 18], "register_tool": [11, 16], "regular": [4, 20], "regularli": [4, 8], "reject": 3, "relat": [9, 11, 16, 18], "relationship": 9, "relev": [0, 17, 18], "reli": 3, "remain": [2, 20], "remind": 22, "remov": [8, 15, 18, 19, 20], "remove_particip": [15, 16], "replai": 7, "repo": [0, 2], "report": [1, 4], "repres": [9, 11, 14, 15, 20], "represent": [15, 18, 19], "reproduc": 0, "request": [1, 11, 12, 18, 19], "requests_mad": 18, "requests_this_hour": 4, "requir": [0, 4, 5, 6, 7, 9, 11, 18, 19], "require_admin": [16, 19], "require_al": 19, "require_api_kei": [16, 19], "require_api_permiss": [16, 19], "require_auth": [16, 19], "require_pati": [16, 19], "require_provid": [16, 19], "require_rol": [16, 19], "required_permiss": 19, "required_rol": 19, "research": 2, "reset": [4, 11, 13, 16], "reset_convers": [11, 16], "resolv": 20, "resolve_bas": [16, 20], "resourc": 2, "respect": [0, 3], "respons": [5, 8, 9, 11, 18, 19], "rest": [3, 4, 8], "restor": [8, 11], "restrict": 4, "restructuredtext": 22, "result": [9, 11, 18, 19], "retain": 11, "retmax": 19, "retri": 4, "retriev": [8, 9, 15, 18, 19], "return": [4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20], "revenu": 3, "review": [1, 4], "right": [0, 2], "role": [8, 11, 18, 19], "root": 6, "rotat": [4, 8], "rout": [7, 16, 19, 20, 22], "routin": [15, 16, 18], "row": 14, "rpc": 9, "rtype": [9, 11, 12, 13, 14, 15, 17, 18, 19], "rule": [2, 3], "run": [0, 7, 8, 9, 22], "safe": 0, "safeti": 19, "same": 20, "sampl": 14, "save": [7, 8, 14, 19], "save_csv": [14, 16], "save_user_set": [8, 16, 19], "scenario": 4, "schedul": [15, 16, 18], "schedulingservic": [16, 19], "schema": [9, 11, 14, 15, 16, 17, 19, 22], "screenshot": 0, "script": [0, 7, 14], "seamless": 4, "search": [9, 11, 15, 16, 18, 19], "search_clinics_by_loc": [15, 16], "search_encounters_rout": [16, 18], "search_icd_by_descript": [15, 16], "search_patients_rout": [16, 18], "search_pubm": [16, 19], "search_term": [5, 15], "search_users_rout": [16, 18], "searchabl": 18, "second": 19, "secur": [1, 19, 22], "securepassword": 18, "security_servic": 4, "see": [2, 14, 22], "seed": [9, 14, 16], "select": [7, 9, 14, 16, 18], "select_mani": [9, 16], "select_n_random_rows_from_csv": [14, 16], "selectedconversationid": 7, "self": 4, "send": [11, 16, 18, 19], "send_message_rout": [16, 18], "sender": [7, 15, 18, 19], "sender_id": [15, 19], "sender_nam": 7, "sens": 19, "sensit": [7, 8, 15, 19], "sent": [7, 18, 19], "sequenc": 11, "serial": 11, "serv": [3, 6], "server": [1, 6, 7, 11, 12, 18], "servic": [7, 11, 16, 18, 22], "session": [7, 9, 11, 15, 18, 19], "session_id": 11, "session_object": 19, "session_token": 19, "set": [2, 7, 9, 13, 14, 18, 19, 22], "setconvers": 7, "setter": [8, 16, 20], "settings_rout": [16, 18], "setup": [14, 18, 22], "setup_default_admin": 18, "setup_default_admin_rout": [16, 18], "setup_user_set": 16, "setup_user_settings_schema": [14, 16], "sever": 13, "sex": [5, 14, 16], "sh": 0, "share": 4, "sharehold": 3, "short": [0, 15], "short_descript": 15, "should": [9, 11, 15], "show": [5, 8, 18], "shown": 5, "side": 18, "sign": [0, 9], "signin": [9, 16], "simpl": [9, 20], "simplenamespac": [16, 20], "simpli": 19, "sinc": 20, "singl": 9, "size": 14, "sk": [4, 8, 18], "slide": 4, "slot": [18, 19], "small": 9, "smith": 7, "so": [0, 6], "soap": 18, "softwar": 3, "solut": 8, "solv": 19, "solver": 19, "some": [6, 9, 14], "sourc": [3, 6, 9, 19], "spam": 7, "specialist": [15, 16, 18], "specialti": 18, "specif": [4, 5, 6, 9, 11, 18, 19], "specifi": [15, 18, 19, 20], "sponsor": 1, "sql": [9, 15], "src": [7, 22], "sse": 22, "st": 18, "standard": [4, 13], "start": [6, 8, 9, 11, 15, 18, 19], "start_dat": 19, "start_nod": 9, "start_tim": [15, 18, 19], "stat": 4, "state": [5, 8, 11, 15, 16, 18], "statement": [9, 15], "static": 15, "statist": [18, 19, 22], "statu": [5, 12, 15, 18, 19], "status": 18, "step": [14, 22], "still": 20, "stipend": 1, "storag": [4, 7, 8, 11, 15], "store": [5, 7, 8, 19], "store_ev": [16, 19], "str": [7, 9, 11, 13, 14, 15, 17, 18, 19, 20], "stream": 7, "street": [15, 16], "string": [5, 8, 9, 15, 18, 19], "structur": [8, 14, 15, 22], "studi": 19, "style": [0, 12, 13], "subclass": 20, "subject": 3, "submiss": [5, 14], "submit": 0, "submodul": 16, "subpackag": 16, "subscrib": 7, "success": [4, 5, 8, 14, 15, 18, 19], "successfulli": [7, 8, 18], "sudo": 7, "summari": 19, "support": [2, 7, 11, 15, 18, 22], "surreal": 16, "surreal_graph": 16, "surrealdb": [5, 6, 9, 14, 15, 18], "surrealql": [9, 15], "surrealwrapp": [9, 16], "surveil": 2, "sustain": [1, 22], "symmetr": 8, "synchron": 9, "syntax": 22, "system": [11, 18, 22], "system_prompt": [9, 11], "t": [7, 8, 11, 19, 20], "tabl": [5, 8, 9, 14, 15, 19], "table_nam": [9, 15], "tag": 0, "take": 0, "target": [3, 9], "task": [9, 11], "tbd": 1, "team": 4, "temperatur": 11, "templat": 0, "term": [5, 7, 15], "test": [0, 10, 14, 15, 16, 19, 22], "test_api_valid": 4, "test_crud": 5, "test_crud_rout": [16, 18], "test_encrypt": [4, 8], "test_rate_limit": 4, "test_redi": 7, "test_surrealdb_rout": [16, 18], "text": [4, 5, 7, 8, 9, 15, 18, 19], "thank": [0, 1], "thei": [6, 11, 15, 18], "them": [0, 3, 6, 11, 18], "themselv": 3, "thi": [4, 5, 6, 7, 8, 9, 11, 14, 15, 18, 19, 20], "thing": 0, "those": [0, 18], "threat": [1, 4], "through": [7, 20], "time": [0, 1, 2, 4, 7, 8, 15, 18, 19], "timer": 4, "timestamp": [7, 18, 19], "titl": 19, "to_dict": [11, 15, 16, 19], "to_geojson_point": [15, 16], "to_record": 9, "todai": 15, "todo": 9, "togeth": 0, "toggl": 8, "token": [4, 8, 9, 18, 19], "tokens_us": [18, 19], "toler": 0, "tool": [0, 6, 11, 12, 15, 19], "tool_cal": 11, "tool_def": 11, "tool_definit": 11, "tool_dict": 11, "tool_func_dict": 11, "tool_nam": 11, "toolcal": 11, "tostr": 7, "total": [18, 19], "total_cached_ent": 18, "tracebacktyp": [16, 20], "track": [4, 8], "trail": [4, 8], "train": 2, "transit": [3, 8], "transmiss": 4, "transpar": [1, 2, 22], "treat": 20, "tree": [11, 16], "trial": 19, "troubleshoot": 22, "true": [4, 8, 13, 14, 15, 18, 19], "try": 4, "tsx": 7, "ttl": 7, "tupl": [11, 18, 19, 20], "tutori": 0, "two": [9, 14, 18], "txt": [6, 7], "type": [0, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22], "typecheck": 0, "typeddict": 15, "typevar": 19, "typic": 15, "ubuntu": 7, "ui": [7, 8, 18], "uml": 18, "unauthor": [18, 19], "under": [0, 3], "understand": 3, "unexpect": 18, "union": [11, 20], "uniontyp": [16, 20], "uniqu": 5, "up": [4, 9, 14, 15, 18, 19], "updat": [4, 7, 9, 15, 16, 18, 19, 20], "update_appoint": [16, 19], "update_appointment_rout": [16, 18], "update_clin": [15, 16], "update_encounter_rout": [16, 18], "update_openai_api_kei": [8, 16, 19], "update_optimal_api_kei": [16, 19], "update_us": [16, 19], "update_user_profile_rout": [16, 18], "update_user_set": [16, 18], "updated_at": [8, 15, 18], "uphold": 3, "upon": 18, "upstream": 0, "url": [9, 11, 18, 19], "us": [4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 18, 19, 20, 22], "usag": [9, 11, 18, 19, 22], "usecallback": 7, "used_tool": [15, 19], "useev": 7, "user": [2, 5, 6, 7, 9, 11, 16, 19, 22], "user1": 18, "user123": 18, "user1_id": 18, "user2_id": 18, "user_count": 18, "user_id": [4, 8, 15, 18, 19], "user_object": 19, "user_servic": 16, "user_set": 16, "user_to_us": [15, 18, 19], "userid": 19, "usernam": [18, 19], "usernotaffiliatederror": [16, 19], "users_exist": 18, "userservic": [8, 16, 19], "usersess": 19, "userset": [8, 14, 19], "util": 14, "v": [4, 19], "v2": [0, 19], "v3": 0, "valid": [1, 5, 8, 13, 15, 16, 18, 19], "validate_api_kei": [4, 16, 19], "validate_sess": [16, 19], "valu": [3, 11, 15, 18, 19], "valueerror": 19, "var": 9, "variabl": [6, 19], "variou": [11, 18, 19], "vec": 16, "vector": [9, 14], "venv": 6, "verifi": [5, 7, 12, 14, 18], "version": [0, 20], "via": [7, 9, 18, 19], "view": [5, 18], "violat": 4, "virtual": [6, 20], "visibl": 2, "visit": 18, "vulner": 4, "w": 9, "wa": [15, 18], "wage": 3, "wai": 8, "wall": 3, "want": 6, "warn": [4, 13, 16], "we": [0, 2, 3], "webhook": 4, "websocket": 7, "week": 15, "welcom": 0, "welfar": 3, "well": 2, "were": [15, 18], "when": [4, 7, 8, 11, 18, 19, 20], "where": [0, 14, 19], "whether": [18, 19], "which": [4, 9], "while": [4, 11], "whitelist": 4, "who": 9, "whole": 3, "whom": 19, "whose": 19, "wide": 4, "window": 4, "window_start": 4, "with_abstract": 19, "within": [15, 19], "within_limit": [4, 19], "without": 19, "work": [5, 6, 8, 12, 18, 22], "would": 11, "wrapperdescriptortyp": [16, 20], "write": 0, "www": 0, "x": [7, 19], "x1b": 13, "yellow": [13, 16], "you": [0, 1, 6, 7, 9, 11], "your": [0, 4, 6, 7, 8, 9, 22], "yyyi": [1, 19], "zero": 0, "zip": [15, 16], "zip_cod": 15, "zipcod": 5}, "titles": ["Contributing to ArsMedicaTech", "Support ArsMedicaTech", "ArsMedicaTech Ethical Guidelines", "ArsMedicaTech Manifesto", "OpenAI Security System", "Patient CRUD Operations", "Running Locally", "Redis/SSE Notifications System", "User Settings System", "db package", "dummy_data module", "llm package", "llm.mcp package", "logger module", "migrations package", "models package", "lib", "opt package", "routes package", "services package", "types module", "app module", "ArsMedicaTech documentation"], "titleterms": {"1": [3, 4, 5, 7, 8], "2": [3, 4, 5, 7, 8], "3": [3, 4, 5, 7, 8], "4": [3, 4, 5, 8], "5": [3, 5], "6": 5, "For": 4, "In": 1, "It": 7, "Not": 3, "admin": 4, "agent": [4, 11], "all": 5, "analyt": 4, "api": [4, 5, 8, 19], "app": 21, "appoint": [7, 15, 18], "appointment_remind": 7, "architectur": [3, 4, 7], "arsmedicatech": [0, 1, 2, 3, 22], "auth_decor": 19, "autonomi": 3, "backend": [5, 7, 8], "best": [4, 8], "browser": 7, "certif": 0, "chat": 18, "clinic": 15, "code": 0, "command": 7, "common": [3, 4, 7, 8], "compon": [4, 5, 7, 8], "conduct": 0, "configur": [4, 7], "connect": 7, "consider": 4, "content": [9, 11, 12, 14, 15, 17, 18, 19, 22], "contribut": [0, 1], "convers": 15, "conversation_servic": 19, "creat": 5, "crud": 5, "dashboard": 4, "data": [4, 5, 8], "databas": [5, 8], "db": 9, "debug": [7, 8], "delet": 5, "deliveri": 7, "demo": 14, "demo_util": 14, "depend": 7, "develop": [0, 4], "document": 22, "dummy_data": 10, "enclosur": 3, "encrypt": [8, 19], "endpoint": [5, 7, 8], "enhanc": [4, 5, 7, 8], "environ": [4, 8], "error": [4, 5], "ethic": 2, "event": 7, "exampl": 8, "extens": 8, "featur": [4, 8], "flow": 4, "frontend": [5, 7, 8], "futur": [4, 5, 7, 8], "get": [0, 5, 8], "graph": 15, "growth": 3, "guidelin": 2, "handl": [4, 5, 7], "how": [0, 1, 7], "hyper": 3, "hypertens": 17, "icd": 15, "id": 5, "improv": 4, "instal": 7, "instruct": 7, "integr": [4, 7], "issu": [7, 8], "j": 5, "kei": 4, "kind": 1, "lib": [4, 8, 16], "limit": 4, "llm": [4, 11, 12], "llm_agent": [4, 18], "llm_chat": 15, "llm_chat_servic": 19, "local": 6, "logger": 13, "make": 4, "manifesto": 3, "mcp": 12, "mcp_init": 12, "mcp_server": 12, "mcp_tool": 11, "messag": 7, "migrat": 14, "mode": 8, "model": [8, 15], "modul": [9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21], "monitor": 4, "new": [5, 7], "new_messag": 7, "notif": [7, 19], "openai": 4, "openai_secur": [4, 19], "oper": 5, "opt": 17, "optim": 19, "origin": 0, "over": 3, "overview": [4, 7, 8], "packag": [9, 11, 12, 14, 15, 17, 18, 19], "patient": [3, 5, 15, 18], "patientform": 5, "patientlist": 5, "plan": 4, "point": 7, "practic": [4, 8], "privaci": 3, "process": 4, "protect": [4, 8], "publish": 7, "py": [4, 8], "radic": 3, "rate": 4, "reciproc": 0, "recoveri": 4, "redi": 7, "redis_cli": 19, "register_tool": 12, "remind": [0, 7], "request": 4, "requir": 8, "respons": 4, "rout": [4, 5, 8, 18], "run": 6, "schedul": 19, "schema": [5, 8], "search": 5, "secur": [4, 8], "send": 7, "servic": [4, 5, 8, 19], "set": [4, 8], "setup": [7, 8], "setup_user_set": 14, "small": 0, "src": [5, 8], "sse": 7, "start": [0, 7], "statist": 4, "step": 6, "structur": 5, "submodul": [9, 11, 12, 14, 15, 17, 18, 19], "subpackag": 11, "support": [1, 4], "surreal": 9, "surreal_graph": 9, "sustain": 3, "system": [4, 7, 8], "system_notif": 7, "task": 0, "test": [4, 5, 7, 8, 18], "transpar": 3, "tree": 12, "troubleshoot": [7, 8], "tsx": 8, "type": [7, 20], "ui": 4, "updat": [5, 8], "usag": [4, 8], "user": [4, 8, 15, 18], "user_servic": [8, 19], "user_set": [8, 15], "valid": 4, "variabl": [4, 8], "vec": [9, 14], "volunt": 1, "work": 7}})