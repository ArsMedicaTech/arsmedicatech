Search.setIndex({"alltitles": {"1. Encryption Service (lib/services/encryption.py)": [[3, "encryption-service-lib-services-encryption-py"]], "1. Event Publishing": [[2, "event-publishing"]], "1. Get All Patients": [[1, "get-all-patients"]], "1. New Message (new_message)": [[2, "new-message-new-message"]], "1. OpenAI Security Service (lib/services/openai_security.py)": [[0, "openai-security-service-lib-services-openai-security-py"]], "1. PatientList Component": [[1, "patientlist-component"]], "1. Redis Configuration": [[2, "redis-configuration"]], "1. Test Redis Connection": [[2, "test-redis-connection"]], "1. User Makes Request": [[0, "user-makes-request"]], "2. Appointment Reminder (appointment_reminder)": [[2, "appointment-reminder-appointment-reminder"]], "2. Enhanced LLM Agent Route (lib/routes/llm_agent.py)": [[0, "enhanced-llm-agent-route-lib-routes-llm-agent-py"]], "2. Event Delivery": [[2, "event-delivery"]], "2. Get Patient by ID": [[1, "get-patient-by-id"]], "2. Install Dependencies": [[2, "install-dependencies"]], "2. Patient Component": [[1, "patient-component"]], "2. Security Validation": [[0, "security-validation"]], "2. Test SSE in Browser": [[2, "test-sse-in-browser"]], "2. User Settings Model (lib/models/user_settings.py)": [[3, "user-settings-model-lib-models-user-settings-py"]], "3. Create New Patient": [[1, "create-new-patient"]], "3. Frontend Handling": [[2, "frontend-handling"]], "3. PatientForm Component": [[1, "patientform-component"]], "3. Response Processing": [[0, "response-processing"]], "3. Start Redis": [[2, "start-redis"]], "3. System Notification (system_notification)": [[2, "system-notification-system-notification"]], "3. Test Endpoints": [[2, "test-endpoints"]], "3. Usage Monitoring (/api/usage)": [[0, "usage-monitoring-api-usage"]], "3. User Service Extensions (lib/services/user_service.py)": [[3, "user-service-extensions-lib-services-user-service-py"]], "4. Enhanced Settings UI": [[0, "enhanced-settings-ui"]], "4. Settings Routes (lib/routes/settings.py)": [[3, "settings-routes-lib-routes-settings-py"]], "4. Update Patient": [[1, "update-patient"]], "5. Delete Patient": [[1, "delete-patient"]], "6. Search Patients": [[1, "search-patients"]], "API Endpoints": [[3, "api-endpoints"]], "API Key Security": [[0, "api-key-security"]], "API Service (src/services/api.js)": [[1, "api-service-src-services-api-js"]], "Admin Monitoring": [[0, "admin-monitoring"]], "Architecture": [[2, "architecture"]], "ArsMedicaTech documentation": [[17, null]], "Backend API Endpoints": [[1, "backend-api-endpoints"]], "Backend Components": [[2, "backend-components"], [3, "backend-components"]], "Backend Usage": [[3, "backend-usage"]], "Common Errors": [[0, "common-errors"]], "Common Issues": [[2, "common-issues"], [3, "common-issues"]], "Components": [[2, "components"]], "Contents:": [[17, null]], "Data Protection": [[0, "data-protection"], [3, "data-protection"]], "Database Schema": [[1, "database-schema"], [3, "database-schema"]], "Debug Commands": [[2, "debug-commands"]], "Debug Mode": [[3, "debug-mode"]], "Encryption": [[3, "encryption"]], "Environment Setup": [[3, "environment-setup"]], "Environment Variables": [[0, "environment-variables"]], "Error Handling": [[1, "error-handling"]], "Error Recovery": [[0, "error-recovery"]], "Event Types": [[2, "event-types"]], "Features": [[3, "features"]], "For Developers": [[0, "for-developers"]], "For Users": [[0, "for-users"]], "Frontend Components": [[1, "frontend-components"], [2, "frontend-components"], [3, "frontend-components"]], "Frontend Integration": [[2, "frontend-integration"]], "Frontend Usage": [[3, "frontend-usage"]], "Future Enhancements": [[1, "future-enhancements"], [2, "future-enhancements"], [3, "future-enhancements"]], "Get User Settings": [[3, "get-user-settings"]], "How It Works": [[2, "how-it-works"]], "Integration Points": [[2, "integration-points"]], "Integration Tests": [[0, "integration-tests"]], "Message Sending": [[2, "message-sending"]], "Module contents": [[4, "module-db"], [6, "module-llm"], [7, "module-llm.mcp"], [9, "module-migrations"], [10, "module-models"], [12, "module-opt"], [13, "module-routes"], [14, "module-services"]], "Monitoring": [[0, "monitoring"]], "OpenAI Security System": [[0, null]], "Overview": [[2, "overview"], [3, "overview"]], "Patient CRUD Operations": [[1, null]], "Patient Data Structure": [[1, "patient-data-structure"]], "Planned Features": [[0, "planned-features"]], "Rate Limiting": [[0, "rate-limiting"], [0, "id1"]], "Rate Limiting Configuration": [[0, "rate-limiting-configuration"]], "Redis/SSE Notifications System": [[2, null]], "Required Environment Variables": [[3, "required-environment-variables"]], "Routes": [[1, "routes"]], "Security Best Practices": [[3, "security-best-practices"]], "Security Features": [[3, "security-features"]], "Security Improvements": [[0, "security-improvements"]], "Security Tests": [[0, "security-tests"]], "Settings Component (src/components/Settings.tsx)": [[3, "settings-component-src-components-settings-tsx"]], "Setup Instructions": [[2, "setup-instructions"]], "Submodules": [[4, "submodules"], [6, "submodules"], [7, "submodules"], [9, "submodules"], [10, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"]], "Subpackages": [[6, "subpackages"]], "Testing": [[1, "testing"], [2, "testing"], [3, "testing"]], "Troubleshooting": [[2, "troubleshooting"], [3, "troubleshooting"]], "Update User Settings": [[3, "update-user-settings"]], "Usage Dashboard": [[0, "usage-dashboard"]], "Usage Examples": [[3, "usage-examples"]], "Usage Monitoring": [[0, "usage-monitoring"]], "User Settings System": [[3, null]], "app module": [[16, null]], "db package": [[4, null]], "db.surreal module": [[4, "module-db.surreal"]], "db.surreal_graph module": [[4, "module-db.surreal_graph"]], "db.vec module": [[4, "module-db.vec"]], "dummy_data module": [[5, null]], "lib": [[11, null]], "llm package": [[6, null]], "llm.agent module": [[6, "module-llm.agent"]], "llm.mcp package": [[7, null]], "llm.mcp.mcp_init module": [[7, "module-llm.mcp.mcp_init"]], "llm.mcp.mcp_server module": [[7, "llm-mcp-mcp-server-module"]], "llm.mcp.register_tools module": [[7, "module-llm.mcp.register_tools"]], "llm.mcp.trees module": [[7, "llm-mcp-trees-module"]], "llm.mcp_tools module": [[6, "module-llm.mcp_tools"]], "logger module": [[8, null]], "migrations package": [[9, null]], "migrations.demo module": [[9, "module-migrations.demo"]], "migrations.demo_utils module": [[9, "module-migrations.demo_utils"]], "migrations.setup_user_settings module": [[9, "module-migrations.setup_user_settings"]], "migrations.vec module": [[9, "module-migrations.vec"]], "models package": [[10, null]], "models.appointment module": [[10, "module-models.appointment"]], "models.clinic module": [[10, "module-models.clinic"]], "models.conversation module": [[10, "module-models.conversation"]], "models.graph module": [[10, "models-graph-module"]], "models.icd module": [[10, "module-models.icd"]], "models.llm_chat module": [[10, "module-models.llm_chat"]], "models.patient module": [[10, "module-models.patient"]], "models.user module": [[10, "module-models.user"]], "models.user_settings module": [[10, "module-models.user_settings"]], "opt package": [[12, null]], "opt.hypertension module": [[12, "module-opt.hypertension"]], "routes package": [[13, null]], "routes.appointments module": [[13, "module-routes.appointments"]], "routes.chat module": [[13, "module-routes.chat"]], "routes.llm_agent module": [[13, "module-routes.llm_agent"]], "routes.patients module": [[13, "module-routes.patients"]], "routes.testing module": [[13, "module-routes.testing"]], "routes.users module": [[13, "module-routes.users"]], "services package": [[14, null]], "services.apis module": [[14, "module-services.apis"]], "services.auth_decorators module": [[14, "module-services.auth_decorators"]], "services.conversation_service module": [[14, "module-services.conversation_service"]], "services.encryption module": [[14, "module-services.encryption"]], "services.llm_chat_service module": [[14, "module-services.llm_chat_service"]], "services.notifications module": [[14, "module-services.notifications"]], "services.openai_security module": [[14, "module-services.openai_security"]], "services.optimal module": [[14, "module-services.optimal"]], "services.redis_client module": [[14, "module-services.redis_client"]], "services.scheduling module": [[14, "module-services.scheduling"]], "services.user_service module": [[14, "module-services.user_service"]], "types module": [[15, null]], "}": [[13, "id1"], [13, "id2"], [13, "id3"], [13, "id4"], [13, "id5"], [13, "id6"]], "\ud83c\udfd7\ufe0f Architecture": [[0, "architecture"]], "\ud83d\udcc8 Monitoring & Analytics": [[0, "monitoring-analytics"]], "\ud83d\udcca Usage Statistics": [[0, "usage-statistics"]], "\ud83d\udcde Support": [[0, "support"]], "\ud83d\udd04 API Flow": [[0, "api-flow"]], "\ud83d\udd0d Error Handling": [[0, "error-handling"]], "\ud83d\udd10 Security Overview": [[0, "security-overview"]], "\ud83d\udd12 Best Practices": [[0, "best-practices"]], "\ud83d\udd27 Components": [[0, "components"]], "\ud83d\udd2e Future Enhancements": [[0, "future-enhancements"]], "\ud83d\ude80 Configuration": [[0, "configuration"]], "\ud83d\udea8 Security Considerations": [[0, "security-considerations"]], "\ud83d\udee1\ufe0f Security Features": [[0, "security-features"]], "\ud83e\uddea Testing": [[0, "testing"]]}, "docnames": ["OPENAI_SECURITY_README", "PATIENT_CRUD_README", "SSE_NOTIFICATIONS_README", "USER_SETTINGS_README", "api/db", "api/dummy_data", "api/llm", "api/llm.mcp", "api/logger", "api/migrations", "api/models", "api/modules", "api/opt", "api/routes", "api/services", "api/types", "app", "index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["OPENAI_SECURITY_README.md", "PATIENT_CRUD_README.md", "SSE_NOTIFICATIONS_README.md", "USER_SETTINGS_README.md", "api/db.rst", "api/dummy_data.rst", "api/llm.rst", "api/llm.mcp.rst", "api/logger.rst", "api/migrations.rst", "api/models.rst", "api/modules.rst", "api/opt.rst", "api/routes.rst", "api/services.rst", "api/types.rst", "app.rst", "index.rst"], "indexentries": {"activate_user() (services.user_service.userservice method)": [[14, "services.user_service.UserService.activate_user", false]], "activate_user_route() (in module routes.users)": [[13, "routes.users.activate_user_route", false]], "add_message() (models.llm_chat.llmchat method)": [[10, "models.llm_chat.LLMChat.add_message", false]], "add_message() (services.conversation_service.conversationservice method)": [[14, "services.conversation_service.ConversationService.add_message", false]], "add_message() (services.llm_chat_service.llmchatservice method)": [[14, "services.llm_chat_service.LLMChatService.add_message", false]], "add_participant() (models.conversation.conversation method)": [[10, "models.conversation.Conversation.add_participant", false]], "add_some_placeholder_encounters() (in module models.patient)": [[10, "models.patient.add_some_placeholder_encounters", false]], "add_some_placeholder_patients() (in module models.patient)": [[10, "models.patient.add_some_placeholder_patients", false]], "add_tool() (llm.agent.llmagent method)": [[6, "llm.agent.LLMAgent.add_tool", false]], "appointment (class in models.appointment)": [[10, "models.appointment.Appointment", false]], "appointmentstatus (class in models.appointment)": [[10, "models.appointment.AppointmentStatus", false]], "appointmenttype (class in models.appointment)": [[10, "models.appointment.AppointmentType", false]], "asyncdbcontroller (class in db.surreal)": [[4, "db.surreal.AsyncDbController", false]], "asyncgeneratortype (in module types)": [[15, "types.AsyncGeneratorType", false]], "asyncgraphcontroller (class in db.surreal_graph)": [[4, "db.surreal_graph.AsyncGraphController", false]], "asyncsurrealwrapper (class in db.surreal)": [[4, "db.surreal.AsyncSurrealWrapper", false]], "auth_flow() (llm.mcp_tools.customheaderauth method)": [[6, "llm.mcp_tools.CustomHeaderAuth.auth_flow", false]], "authenticate_user() (services.user_service.userservice method)": [[14, "services.user_service.UserService.authenticate_user", false]], "batchitem (class in db.vec)": [[4, "db.vec.BatchItem", false]], "batchlist (class in db.vec)": [[4, "db.vec.BatchList", false]], "black (logger.customformatter attribute)": [[8, "logger.CustomFormatter.black", false]], "bold_red (logger.customformatter attribute)": [[8, "logger.CustomFormatter.bold_red", false]], "build_hypertension_payload() (in module opt.hypertension)": [[12, "opt.hypertension.build_hypertension_payload", false]], "builtinfunctiontype (in module types)": [[15, "types.BuiltinFunctionType", false]], "builtinmethodtype (in module types)": [[15, "types.BuiltinMethodType", false]], "can_be_cancelled() (models.appointment.appointment method)": [[10, "models.appointment.Appointment.can_be_cancelled", false]], "cancel_appointment() (services.scheduling.schedulingservice method)": [[14, "services.scheduling.SchedulingService.cancel_appointment", false]], "cancel_appointment_route() (in module routes.appointments)": [[13, "routes.appointments.cancel_appointment_route", false]], "cancelled (models.appointment.appointmentstatus attribute)": [[10, "models.appointment.AppointmentStatus.CANCELLED", false]], "celltype (in module types)": [[15, "types.CellType", false]], "change_password() (services.user_service.userservice method)": [[14, "services.user_service.UserService.change_password", false]], "change_password_route() (in module routes.users)": [[13, "routes.users.change_password_route", false]], "check_existing_schema() (in module migrations.setup_user_settings)": [[9, "migrations.setup_user_settings.check_existing_schema", false]], "check_rate_limit() (services.openai_security.openaisecurityservice method)": [[14, "services.openai_security.OpenAISecurityService.check_rate_limit", false]], "check_users_exist_route() (in module routes.users)": [[13, "routes.users.check_users_exist_route", false]], "classmethoddescriptortype (in module types)": [[15, "types.ClassMethodDescriptorType", false]], "clinic (class in models.clinic)": [[10, "models.clinic.Clinic", false]], "clinicaltrials (class in services.apis)": [[14, "services.apis.ClinicalTrials", false]], "close() (db.surreal.asyncdbcontroller method)": [[4, "db.surreal.AsyncDbController.close", false]], "close() (db.surreal.asyncsurrealwrapper method)": [[4, "db.surreal.AsyncSurrealWrapper.close", false]], "close() (db.surreal.dbcontroller method)": [[4, "db.surreal.DbController.close", false]], "close() (db.surreal.surrealwrapper method)": [[4, "db.surreal.SurrealWrapper.close", false]], "close() (services.conversation_service.conversationservice method)": [[14, "services.conversation_service.ConversationService.close", false]], "close() (services.llm_chat_service.llmchatservice method)": [[14, "services.llm_chat_service.LLMChatService.close", false]], "close() (services.scheduling.schedulingservice method)": [[14, "services.scheduling.SchedulingService.close", false]], "close() (services.user_service.userservice method)": [[14, "services.user_service.UserService.close", false]], "codetype (in module types)": [[15, "types.CodeType", false]], "complete() (llm.agent.llmagent method)": [[6, "llm.agent.LLMAgent.complete", false]], "complete_appointment() (services.scheduling.schedulingservice method)": [[14, "services.scheduling.SchedulingService.complete_appointment", false]], "completed (models.appointment.appointmentstatus attribute)": [[10, "models.appointment.AppointmentStatus.COMPLETED", false]], "configure() (logger.logger method)": [[8, "logger.Logger.configure", false]], "confirm_appointment() (services.scheduling.schedulingservice method)": [[14, "services.scheduling.SchedulingService.confirm_appointment", false]], "confirm_appointment_route() (in module routes.appointments)": [[13, "routes.appointments.confirm_appointment_route", false]], "confirmed (models.appointment.appointmentstatus attribute)": [[10, "models.appointment.AppointmentStatus.CONFIRMED", false]], "connect() (db.surreal.asyncdbcontroller method)": [[4, "db.surreal.AsyncDbController.connect", false]], "connect() (db.surreal.dbcontroller method)": [[4, "db.surreal.DbController.connect", false]], "connect() (services.conversation_service.conversationservice method)": [[14, "services.conversation_service.ConversationService.connect", false]], "connect() (services.llm_chat_service.llmchatservice method)": [[14, "services.llm_chat_service.LLMChatService.connect", false]], "connect() (services.scheduling.schedulingservice method)": [[14, "services.scheduling.SchedulingService.connect", false]], "connect() (services.user_service.userservice method)": [[14, "services.user_service.UserService.connect", false]], "consultation (models.appointment.appointmenttype attribute)": [[10, "models.appointment.AppointmentType.CONSULTATION", false]], "conversation (class in models.conversation)": [[10, "models.conversation.Conversation", false]], "conversationservice (class in services.conversation_service)": [[14, "services.conversation_service.ConversationService", false]], "coroutine() (in module types)": [[15, "types.coroutine", false]], "coroutinetype (in module types)": [[15, "types.CoroutineType", false]], "count_connections() (db.surreal_graph.asyncgraphcontroller method)": [[4, "db.surreal_graph.AsyncGraphController.count_connections", false]], "count_connections() (db.surreal_graph.graphcontroller method)": [[4, "db.surreal_graph.GraphController.count_connections", false]], "create() (db.surreal.asyncdbcontroller method)": [[4, "db.surreal.AsyncDbController.create", false]], "create() (db.surreal.asyncsurrealwrapper method)": [[4, "db.surreal.AsyncSurrealWrapper.create", false]], "create() (db.surreal.dbcontroller method)": [[4, "db.surreal.DbController.create", false]], "create() (db.surreal.surrealwrapper method)": [[4, "db.surreal.SurrealWrapper.create", false]], "create_appointment() (services.scheduling.schedulingservice method)": [[14, "services.scheduling.SchedulingService.create_appointment", false]], "create_appointment_route() (in module routes.appointments)": [[13, "routes.appointments.create_appointment_route", false]], "create_clinic() (in module models.clinic)": [[10, "models.clinic.create_clinic", false]], "create_conversation() (services.conversation_service.conversationservice method)": [[14, "services.conversation_service.ConversationService.create_conversation", false]], "create_conversation_route() (in module routes.chat)": [[13, "routes.chat.create_conversation_route", false]], "create_default_admin() (services.user_service.userservice method)": [[14, "services.user_service.UserService.create_default_admin", false]], "create_encounter() (in module models.patient)": [[10, "models.patient.create_encounter", false]], "create_encounter_route() (in module routes.patients)": [[13, "routes.patients.create_encounter_route", false]], "create_food_data_pd() (in module opt.hypertension)": [[12, "opt.hypertension.create_food_data_pd", false]], "create_forms() (in module migrations.demo)": [[9, "migrations.demo.create_forms", false]], "create_llm_chat() (services.llm_chat_service.llmchatservice method)": [[14, "services.llm_chat_service.LLMChatService.create_llm_chat", false]], "create_n_patients() (in module migrations.demo)": [[9, "migrations.demo.create_n_patients", false]], "create_patient() (in module models.patient)": [[10, "models.patient.create_patient", false]], "create_schema() (in module models.patient)": [[10, "models.patient.create_schema", false]], "create_user() (services.user_service.userservice method)": [[14, "services.user_service.UserService.create_user", false]], "customformatter (class in logger)": [[8, "logger.CustomFormatter", false]], "customheaderauth (class in llm.mcp_tools)": [[6, "llm.mcp_tools.CustomHeaderAuth", false]], "date_created (migrations.demo_utils.encounterfactory attribute)": [[9, "migrations.demo_utils.EncounterFactory.date_created", false]], "date_of_birth (migrations.demo_utils.patientfactory attribute)": [[9, "migrations.demo_utils.PatientFactory.date_of_birth", false]], "db": [[4, "module-db", false]], "db (db.surreal.asyncdbcontroller attribute)": [[4, "db.surreal.AsyncDbController.db", false]], "db (db.surreal.dbcontroller attribute)": [[4, "db.surreal.DbController.db", false]], "db.surreal": [[4, "module-db.surreal", false]], "db.surreal_graph": [[4, "module-db.surreal_graph", false]], "db.vec": [[4, "module-db.vec", false]], "dbcontroller (class in db.surreal)": [[4, "db.surreal.DbController", false]], "deactivate_user() (services.user_service.userservice method)": [[14, "services.user_service.UserService.deactivate_user", false]], "deactivate_user_route() (in module routes.users)": [[13, "routes.users.deactivate_user_route", false]], "debug() (logger.logger method)": [[8, "logger.Logger.debug", false]], "debug_session_route() (in module routes.testing)": [[13, "routes.testing.debug_session_route", false]], "decrypt() (services.encryption.encryptionservice method)": [[14, "services.encryption.EncryptionService.decrypt", false]], "decrypt_api_key() (services.encryption.encryptionservice method)": [[14, "services.encryption.EncryptionService.decrypt_api_key", false]], "define_index() (in module models.icd)": [[10, "models.icd.define_index", false]], "delete() (db.surreal.asyncdbcontroller method)": [[4, "db.surreal.AsyncDbController.delete", false]], "delete() (db.surreal.asyncsurrealwrapper method)": [[4, "db.surreal.AsyncSurrealWrapper.delete", false]], "delete() (db.surreal.dbcontroller method)": [[4, "db.surreal.DbController.delete", false]], "delete() (db.surreal.surrealwrapper method)": [[4, "db.surreal.SurrealWrapper.delete", false]], "delete_clinic() (in module models.clinic)": [[10, "models.clinic.delete_clinic", false]], "delete_conversation() (services.conversation_service.conversationservice method)": [[14, "services.conversation_service.ConversationService.delete_conversation", false]], "delete_encounter() (in module models.patient)": [[10, "models.patient.delete_encounter", false]], "delete_encounter_route() (in module routes.patients)": [[13, "routes.patients.delete_encounter_route", false]], "delete_patient() (in module models.patient)": [[10, "models.patient.delete_patient", false]], "deleter() (types.dynamicclassattribute method)": [[15, "types.DynamicClassAttribute.deleter", false]], "demographic_no (migrations.demo_utils.patientfactory attribute)": [[9, "migrations.demo_utils.PatientFactory.demographic_no", false]], "dummy_data": [[5, "module-dummy_data", false]], "dynamicclassattribute (class in types)": [[15, "types.DynamicClassAttribute", false]], "efetch_abstract() (services.apis.ncbi method)": [[14, "services.apis.NCBI.efetch_abstract", false]], "ellipsistype (in module types)": [[15, "types.EllipsisType", false]], "email (migrations.demo_utils.patientfactory attribute)": [[9, "migrations.demo_utils.PatientFactory.email", false]], "emergency (models.appointment.appointmenttype attribute)": [[10, "models.appointment.AppointmentType.EMERGENCY", false]], "encounter (class in migrations.demo_utils)": [[9, "migrations.demo_utils.Encounter", false]], "encounter (class in models.patient)": [[10, "models.patient.Encounter", false]], "encounterfactory (class in migrations.demo_utils)": [[9, "migrations.demo_utils.EncounterFactory", false]], "encounterfactory.meta (class in migrations.demo_utils)": [[9, "migrations.demo_utils.EncounterFactory.Meta", false]], "encrypt() (services.encryption.encryptionservice method)": [[14, "services.encryption.EncryptionService.encrypt", false]], "encrypt_api_key() (services.encryption.encryptionservice method)": [[14, "services.encryption.EncryptionService.encrypt_api_key", false]], "encryptionservice (class in services.encryption)": [[14, "services.encryption.EncryptionService", false]], "error() (logger.logger method)": [[8, "logger.Logger.error", false]], "esearch() (services.apis.ncbi method)": [[14, "services.apis.NCBI.esearch", false]], "esummary() (services.apis.ncbi method)": [[14, "services.apis.NCBI.esummary", false]], "f() (in module migrations.demo_utils)": [[9, "migrations.demo_utils.f", false]], "factorywrapper (class in migrations.demo_utils)": [[9, "migrations.demo_utils.FactoryWrapper", false]], "fetch_clinical_trials() (services.apis.clinicaltrials method)": [[14, "services.apis.ClinicalTrials.fetch_clinical_trials", false]], "fetch_history() (llm.agent.llmagent method)": [[6, "llm.agent.LLMAgent.fetch_history", false]], "fetch_mcp_tool_defs() (in module llm.mcp_tools)": [[6, "llm.mcp_tools.fetch_mcp_tool_defs", false]], "fetch_medline() (services.apis.medline method)": [[14, "services.apis.Medline.fetch_medline", false]], "fetch_ncbi_studies() (services.apis.ncbi method)": [[14, "services.apis.NCBI.fetch_ncbi_studies", false]], "find_path() (db.surreal_graph.asyncgraphcontroller method)": [[4, "db.surreal_graph.AsyncGraphController.find_path", false]], "find_path() (db.surreal_graph.graphcontroller method)": [[4, "db.surreal_graph.GraphController.find_path", false]], "first_name (migrations.demo_utils.patientfactory attribute)": [[9, "migrations.demo_utils.PatientFactory.first_name", false]], "follow_up (models.appointment.appointmenttype attribute)": [[10, "models.appointment.AppointmentType.FOLLOW_UP", false]], "format() (logger.customformatter method)": [[8, "logger.CustomFormatter.format", false]], "formats (logger.customformatter attribute)": [[8, "logger.CustomFormatter.FORMATS", false]], "frametype (in module types)": [[15, "types.FrameType", false]], "from_dict() (llm.agent.llmagent class method)": [[6, "llm.agent.LLMAgent.from_dict", false]], "from_dict() (models.appointment.appointment class method)": [[10, "models.appointment.Appointment.from_dict", false]], "from_dict() (models.conversation.conversation class method)": [[10, "models.conversation.Conversation.from_dict", false]], "from_dict() (models.conversation.message class method)": [[10, "models.conversation.Message.from_dict", false]], "from_dict() (models.llm_chat.llmchat class method)": [[10, "models.llm_chat.LLMChat.from_dict", false]], "from_dict() (models.patient.soapnotes class method)": [[10, "models.patient.SOAPNotes.from_dict", false]], "from_dict() (models.user.user class method)": [[10, "models.user.User.from_dict", false]], "from_dict() (models.user.usersession class method)": [[10, "models.user.UserSession.from_dict", false]], "from_dict() (models.user_settings.usersettings class method)": [[10, "models.user_settings.UserSettings.from_dict", false]], "from_mcp() (llm.agent.llmagent class method)": [[6, "llm.agent.LLMAgent.from_mcp", false]], "functiontype (in module types)": [[15, "types.FunctionType", false]], "generate_surrealql_create_query() (in module models.clinic)": [[10, "models.clinic.generate_surrealql_create_query", false]], "generator (llm.mcp_tools.customheaderauth attribute)": [[6, "llm.mcp_tools.CustomHeaderAuth.Generator", false]], "generatortype (in module types)": [[15, "types.GeneratorType", false]], "genericalias (class in types)": [[15, "types.GenericAlias", false]], "get_all_appointments() (services.scheduling.schedulingservice method)": [[14, "services.scheduling.SchedulingService.get_all_appointments", false]], "get_all_clinics() (in module models.clinic)": [[10, "models.clinic.get_all_clinics", false]], "get_all_encounters() (in module models.patient)": [[10, "models.patient.get_all_encounters", false]], "get_all_encounters_route() (in module routes.patients)": [[13, "routes.patients.get_all_encounters_route", false]], "get_all_patients() (in module models.patient)": [[10, "models.patient.get_all_patients", false]], "get_all_users() (services.user_service.userservice method)": [[14, "services.user_service.UserService.get_all_users", false]], "get_all_users_route() (in module routes.users)": [[13, "routes.users.get_all_users_route", false]], "get_api_usage_route() (in module routes.users)": [[13, "routes.users.get_api_usage_route", false]], "get_appointment() (services.scheduling.schedulingservice method)": [[14, "services.scheduling.SchedulingService.get_appointment", false]], "get_appointment_route() (in module routes.appointments)": [[13, "routes.appointments.get_appointment_route", false]], "get_appointment_statuses_route() (in module routes.appointments)": [[13, "routes.appointments.get_appointment_statuses_route", false]], "get_appointment_types_route() (in module routes.appointments)": [[13, "routes.appointments.get_appointment_types_route", false]], "get_appointments_by_date() (services.scheduling.schedulingservice method)": [[14, "services.scheduling.SchedulingService.get_appointments_by_date", false]], "get_appointments_by_patient() (services.scheduling.schedulingservice method)": [[14, "services.scheduling.SchedulingService.get_appointments_by_patient", false]], "get_appointments_by_provider() (services.scheduling.schedulingservice method)": [[14, "services.scheduling.SchedulingService.get_appointments_by_provider", false]], "get_appointments_route() (in module routes.appointments)": [[13, "routes.appointments.get_appointments_route", false]], "get_available_slots() (services.scheduling.schedulingservice method)": [[14, "services.scheduling.SchedulingService.get_available_slots", false]], "get_available_slots_route() (in module routes.appointments)": [[13, "routes.appointments.get_available_slots_route", false]], "get_clinic_by_id() (in module models.clinic)": [[10, "models.clinic.get_clinic_by_id", false]], "get_context() (db.vec.vec method)": [[4, "db.vec.Vec.get_context", false]], "get_conversation_by_id() (services.conversation_service.conversationservice method)": [[14, "services.conversation_service.ConversationService.get_conversation_by_id", false]], "get_conversation_by_participants() (services.conversation_service.conversationservice method)": [[14, "services.conversation_service.ConversationService.get_conversation_by_participants", false]], "get_conversation_messages() (services.conversation_service.conversationservice method)": [[14, "services.conversation_service.ConversationService.get_conversation_messages", false]], "get_conversation_messages_route() (in module routes.chat)": [[13, "routes.chat.get_conversation_messages_route", false]], "get_current_user() (in module services.auth_decorators)": [[14, "services.auth_decorators.get_current_user", false]], "get_current_user_id() (in module services.auth_decorators)": [[14, "services.auth_decorators.get_current_user_id", false]], "get_current_user_info_route() (in module routes.users)": [[13, "routes.users.get_current_user_info_route", false]], "get_current_user_role() (in module services.auth_decorators)": [[14, "services.auth_decorators.get_current_user_role", false]], "get_datetime() (models.appointment.appointment method)": [[10, "models.appointment.Appointment.get_datetime", false]], "get_duration_minutes() (models.appointment.appointment method)": [[10, "models.appointment.Appointment.get_duration_minutes", false]], "get_encounter_by_id() (in module models.patient)": [[10, "models.patient.get_encounter_by_id", false]], "get_encounter_by_id_route() (in module routes.patients)": [[13, "routes.patients.get_encounter_by_id_route", false]], "get_encounters_by_patient() (in module models.patient)": [[10, "models.patient.get_encounters_by_patient", false]], "get_encounters_by_patient_route() (in module routes.patients)": [[13, "routes.patients.get_encounters_by_patient_route", false]], "get_encryption_service() (in module services.encryption)": [[14, "services.encryption.get_encryption_service", false]], "get_full_name() (models.user.user method)": [[10, "models.user.User.get_full_name", false]], "get_llm_chat() (services.llm_chat_service.llmchatservice method)": [[14, "services.llm_chat_service.LLMChatService.get_llm_chat", false]], "get_llm_chats_for_user() (services.llm_chat_service.llmchatservice method)": [[14, "services.llm_chat_service.LLMChatService.get_llm_chats_for_user", false]], "get_openai_api_key() (models.user_settings.usersettings method)": [[10, "models.user_settings.UserSettings.get_openai_api_key", false]], "get_openai_api_key() (services.user_service.userservice method)": [[14, "services.user_service.UserService.get_openai_api_key", false]], "get_openai_security_service() (in module services.openai_security)": [[14, "services.openai_security.get_openai_security_service", false]], "get_patient_by_id() (in module models.patient)": [[10, "models.patient.get_patient_by_id", false]], "get_redis_connection() (in module services.redis_client)": [[14, "services.redis_client.get_redis_connection", false]], "get_relations() (db.surreal_graph.asyncgraphcontroller method)": [[4, "db.surreal_graph.AsyncGraphController.get_relations", false]], "get_relations() (db.surreal_graph.graphcontroller method)": [[4, "db.surreal_graph.GraphController.get_relations", false]], "get_usage_stats() (services.openai_security.openaisecurityservice method)": [[14, "services.openai_security.OpenAISecurityService.get_usage_stats", false]], "get_user_api_key_with_validation() (services.openai_security.openaisecurityservice method)": [[14, "services.openai_security.OpenAISecurityService.get_user_api_key_with_validation", false]], "get_user_by_email() (services.user_service.userservice method)": [[14, "services.user_service.UserService.get_user_by_email", false]], "get_user_by_id() (services.user_service.userservice method)": [[14, "services.user_service.UserService.get_user_by_id", false]], "get_user_by_username() (services.user_service.userservice method)": [[14, "services.user_service.UserService.get_user_by_username", false]], "get_user_conversations() (services.conversation_service.conversationservice method)": [[14, "services.conversation_service.ConversationService.get_user_conversations", false]], "get_user_conversations_route() (in module routes.chat)": [[13, "routes.chat.get_user_conversations_route", false]], "get_user_profile_route() (in module routes.users)": [[13, "routes.users.get_user_profile_route", false]], "get_user_settings() (in module routes.users)": [[13, "routes.users.get_user_settings", false]], "get_user_settings() (services.user_service.userservice method)": [[14, "services.user_service.UserService.get_user_settings", false]], "getsetdescriptortype (in module types)": [[15, "types.GetSetDescriptorType", false]], "getter() (types.dynamicclassattribute method)": [[15, "types.DynamicClassAttribute.getter", false]], "gpt_4_1 (llm.agent.llmmodel attribute)": [[6, "llm.agent.LLMModel.GPT_4_1", false]], "gpt_4_1_mini (llm.agent.llmmodel attribute)": [[6, "llm.agent.LLMModel.GPT_4_1_MINI", false]], "gpt_4_1_nano (llm.agent.llmmodel attribute)": [[6, "llm.agent.LLMModel.GPT_4_1_NANO", false]], "graphcontroller (class in db.surreal_graph)": [[4, "db.surreal_graph.GraphController", false]], "green (logger.customformatter attribute)": [[8, "logger.CustomFormatter.green", false]], "grey (logger.customformatter attribute)": [[8, "logger.CustomFormatter.grey", false]], "has_openai_api_key() (models.user_settings.usersettings method)": [[10, "models.user_settings.UserSettings.has_openai_api_key", false]], "has_openai_api_key() (services.user_service.userservice method)": [[14, "services.user_service.UserService.has_openai_api_key", false]], "has_role() (models.user.user method)": [[10, "models.user.User.has_role", false]], "hash_password() (models.user.user static method)": [[10, "models.user.User.hash_password", false]], "headers (services.optimal.optimalservice property)": [[14, "services.optimal.OptimalService.headers", false]], "health_check() (in module llm.mcp.mcp_init)": [[7, "llm.mcp.mcp_init.health_check", false]], "icd10code (class in services.apis)": [[14, "services.apis.ICD10Code", false]], "import_icd_codes() (in module models.icd)": [[10, "models.icd.import_icd_codes", false]], "info() (logger.logger method)": [[8, "logger.Logger.info", false]], "init() (db.vec.vec method)": [[4, "db.vec.Vec.init", false]], "init_vec() (in module migrations.vec)": [[9, "migrations.vec.init_vec", false]], "insert() (db.vec.vec method)": [[4, "db.vec.Vec.insert", false]], "is_admin() (models.user.user method)": [[10, "models.user.User.is_admin", false]], "is_cancelled() (models.appointment.appointment method)": [[10, "models.appointment.Appointment.is_cancelled", false]], "is_completed() (models.appointment.appointment method)": [[10, "models.appointment.Appointment.is_completed", false]], "is_confirmed() (models.appointment.appointment method)": [[10, "models.appointment.Appointment.is_confirmed", false]], "is_expired() (models.user.usersession method)": [[10, "models.user.UserSession.is_expired", false]], "is_in_past() (models.appointment.appointment method)": [[10, "models.appointment.Appointment.is_in_past", false]], "is_participant() (models.conversation.conversation method)": [[10, "models.conversation.Conversation.is_participant", false]], "is_patient() (models.user.user method)": [[10, "models.user.User.is_patient", false]], "is_provider() (models.user.user method)": [[10, "models.user.User.is_provider", false]], "is_this_week() (models.appointment.appointment method)": [[10, "models.appointment.Appointment.is_this_week", false]], "is_today() (models.appointment.appointment method)": [[10, "models.appointment.Appointment.is_today", false]], "km_m() (in module models.clinic)": [[10, "models.clinic.km_m", false]], "lambdatype (in module types)": [[15, "types.LambdaType", false]], "last_name (migrations.demo_utils.patientfactory attribute)": [[9, "migrations.demo_utils.PatientFactory.last_name", false]], "llm": [[6, "module-llm", false]], "llm.agent": [[6, "module-llm.agent", false]], "llm.mcp": [[7, "module-llm.mcp", false]], "llm.mcp.mcp_init": [[7, "module-llm.mcp.mcp_init", false]], "llm.mcp.register_tools": [[7, "module-llm.mcp.register_tools", false]], "llm.mcp_tools": [[6, "module-llm.mcp_tools", false]], "llm_agent_endpoint_route() (in module routes.llm_agent)": [[13, "routes.llm_agent.llm_agent_endpoint_route", false]], "llmagent (class in llm.agent)": [[6, "llm.agent.LLMAgent", false]], "llmchat (class in models.llm_chat)": [[10, "models.llm_chat.LLMChat", false]], "llmchatservice (class in services.llm_chat_service)": [[14, "services.llm_chat_service.LLMChatService", false]], "llmmodel (class in llm.agent)": [[6, "llm.agent.LLMModel", false]], "load_csv() (in module migrations.demo_utils)": [[9, "migrations.demo_utils.load_csv", false]], "location (migrations.demo_utils.patientfactory attribute)": [[9, "migrations.demo_utils.PatientFactory.location", false]], "log_api_usage() (services.openai_security.openaisecurityservice method)": [[14, "services.openai_security.OpenAISecurityService.log_api_usage", false]], "log_format (logger.customformatter attribute)": [[8, "logger.CustomFormatter.log_format", false]], "logger": [[8, "module-logger", false]], "logger (class in logger)": [[8, "logger.Logger", false]], "login_route() (in module routes.users)": [[13, "routes.users.login_route", false]], "logout() (services.user_service.userservice method)": [[14, "services.user_service.UserService.logout", false]], "logout_route() (in module routes.users)": [[13, "routes.users.logout_route", false]], "lookup_icd_code() (in module models.icd)": [[10, "models.icd.lookup_icd_code", false]], "main() (in module migrations.setup_user_settings)": [[9, "migrations.setup_user_settings.main", false]], "main() (in module opt.hypertension)": [[12, "opt.hypertension.main", false]], "mappingproxytype (in module types)": [[15, "types.MappingProxyType", false]], "mark_messages_as_read() (services.conversation_service.conversationservice method)": [[14, "services.conversation_service.ConversationService.mark_messages_as_read", false]], "medline (class in services.apis)": [[14, "services.apis.Medline", false]], "memberdescriptortype (in module types)": [[15, "types.MemberDescriptorType", false]], "message (class in models.conversation)": [[10, "models.conversation.Message", false]], "methoddescriptortype (in module types)": [[15, "types.MethodDescriptorType", false]], "methodtype (in module types)": [[15, "types.MethodType", false]], "methodwrappertype (in module types)": [[15, "types.MethodWrapperType", false]], "migrations": [[9, "module-migrations", false]], "migrations.demo": [[9, "module-migrations.demo", false]], "migrations.demo_utils": [[9, "module-migrations.demo_utils", false]], "migrations.setup_user_settings": [[9, "module-migrations.setup_user_settings", false]], "migrations.vec": [[9, "module-migrations.vec", false]], "model (migrations.demo_utils.encounterfactory.meta attribute)": [[9, "migrations.demo_utils.EncounterFactory.Meta.model", false]], "model (migrations.demo_utils.patientfactory.meta attribute)": [[9, "migrations.demo_utils.PatientFactory.Meta.model", false]], "models": [[10, "module-models", false]], "models.appointment": [[10, "module-models.appointment", false]], "models.clinic": [[10, "module-models.clinic", false]], "models.conversation": [[10, "module-models.conversation", false]], "models.icd": [[10, "module-models.icd", false]], "models.llm_chat": [[10, "module-models.llm_chat", false]], "models.patient": [[10, "module-models.patient", false]], "models.user": [[10, "module-models.user", false]], "models.user_settings": [[10, "module-models.user_settings", false]], "module": [[4, "module-db", false], [4, "module-db.surreal", false], [4, "module-db.surreal_graph", false], [4, "module-db.vec", false], [5, "module-dummy_data", false], [6, "module-llm", false], [6, "module-llm.agent", false], [6, "module-llm.mcp_tools", false], [7, "module-llm.mcp", false], [7, "module-llm.mcp.mcp_init", false], [7, "module-llm.mcp.register_tools", false], [8, "module-logger", false], [9, "module-migrations", false], [9, "module-migrations.demo", false], [9, "module-migrations.demo_utils", false], [9, "module-migrations.setup_user_settings", false], [9, "module-migrations.vec", false], [10, "module-models", false], [10, "module-models.appointment", false], [10, "module-models.clinic", false], [10, "module-models.conversation", false], [10, "module-models.icd", false], [10, "module-models.llm_chat", false], [10, "module-models.patient", false], [10, "module-models.user", false], [10, "module-models.user_settings", false], [12, "module-opt", false], [12, "module-opt.hypertension", false], [13, "module-routes", false], [13, "module-routes.appointments", false], [13, "module-routes.chat", false], [13, "module-routes.llm_agent", false], [13, "module-routes.patients", false], [13, "module-routes.testing", false], [13, "module-routes.users", false], [14, "module-services", false], [14, "module-services.apis", false], [14, "module-services.auth_decorators", false], [14, "module-services.conversation_service", false], [14, "module-services.encryption", false], [14, "module-services.llm_chat_service", false], [14, "module-services.notifications", false], [14, "module-services.openai_security", false], [14, "module-services.optimal", false], [14, "module-services.redis_client", false], [14, "module-services.scheduling", false], [14, "module-services.user_service", false], [15, "module-types", false]], "moduletype (in module types)": [[15, "types.ModuleType", false]], "ncbi (class in services.apis)": [[14, "services.apis.NCBI", false]], "new_class() (in module types)": [[15, "types.new_class", false]], "no_show (models.appointment.appointmentstatus attribute)": [[10, "models.appointment.AppointmentStatus.NO_SHOW", false]], "nonetype (class in types)": [[15, "types.NoneType", false]], "note_id (migrations.demo_utils.encounterfactory attribute)": [[9, "migrations.demo_utils.EncounterFactory.note_id", false]], "note_text (migrations.demo_utils.encounterfactory attribute)": [[9, "migrations.demo_utils.EncounterFactory.note_text", false]], "notimplementedtype (class in types)": [[15, "types.NotImplementedType", false]], "openaisecurityservice (class in services.openai_security)": [[14, "services.openai_security.OpenAISecurityService", false]], "opt": [[12, "module-opt", false]], "opt.hypertension": [[12, "module-opt.hypertension", false]], "optimalmetadata (class in services.optimal)": [[14, "services.optimal.OptimalMetadata", false]], "optimalschema (class in services.optimal)": [[14, "services.optimal.OptimalSchema", false]], "optimalservice (class in services.optimal)": [[14, "services.optimal.OptimalService", false]], "optional_auth() (in module services.auth_decorators)": [[14, "services.auth_decorators.optional_auth", false]], "patch_intake_route() (in module routes.patients)": [[13, "routes.patients.patch_intake_route", false]], "patient (class in models.patient)": [[10, "models.patient.Patient", false]], "patient_endpoint_route() (in module routes.patients)": [[13, "routes.patients.patient_endpoint_route", false]], "patientfactory (class in migrations.demo_utils)": [[9, "migrations.demo_utils.PatientFactory", false]], "patientfactory.meta (class in migrations.demo_utils)": [[9, "migrations.demo_utils.PatientFactory.Meta", false]], "patients_endpoint_route() (in module routes.patients)": [[13, "routes.patients.patients_endpoint_route", false]], "payload (services.optimal.optimalservice property)": [[14, "services.optimal.OptimalService.payload", false]], "phone (migrations.demo_utils.patientfactory attribute)": [[9, "migrations.demo_utils.PatientFactory.phone", false]], "prepare_class() (in module types)": [[15, "types.prepare_class", false]], "process_tool_call() (in module llm.agent)": [[6, "llm.agent.process_tool_call", false]], "process_tool_calls() (llm.agent.llmagent method)": [[6, "llm.agent.LLMAgent.process_tool_calls", false]], "provider_id (migrations.demo_utils.encounterfactory attribute)": [[9, "migrations.demo_utils.EncounterFactory.provider_id", false]], "publish_event() (in module services.notifications)": [[14, "services.notifications.publish_event", false]], "publish_event_with_buffer() (in module services.notifications)": [[14, "services.notifications.publish_event_with_buffer", false]], "query() (db.surreal.asyncdbcontroller method)": [[4, "db.surreal.AsyncDbController.query", false]], "query() (db.surreal.asyncsurrealwrapper method)": [[4, "db.surreal.AsyncSurrealWrapper.query", false]], "query() (db.surreal.dbcontroller method)": [[4, "db.surreal.DbController.query", false]], "query() (db.surreal.surrealwrapper method)": [[4, "db.surreal.SurrealWrapper.query", false]], "rag_chat() (db.vec.vec method)": [[4, "db.vec.Vec.rag_chat", false]], "red (logger.customformatter attribute)": [[8, "logger.CustomFormatter.red", false]], "register_openai_tool() (in module llm.mcp.register_tools)": [[7, "llm.mcp.register_tools.register_openai_tool", false]], "register_route() (in module routes.users)": [[13, "routes.users.register_route", false]], "relate() (db.surreal_graph.asyncgraphcontroller method)": [[4, "db.surreal_graph.AsyncGraphController.relate", false]], "relate() (db.surreal_graph.graphcontroller method)": [[4, "db.surreal_graph.GraphController.relate", false]], "remove_participant() (models.conversation.conversation method)": [[10, "models.conversation.Conversation.remove_participant", false]], "require_admin() (in module services.auth_decorators)": [[14, "services.auth_decorators.require_admin", false]], "require_auth() (in module services.auth_decorators)": [[14, "services.auth_decorators.require_auth", false]], "require_patient() (in module services.auth_decorators)": [[14, "services.auth_decorators.require_patient", false]], "require_provider() (in module services.auth_decorators)": [[14, "services.auth_decorators.require_provider", false]], "require_role() (in module services.auth_decorators)": [[14, "services.auth_decorators.require_role", false]], "reset (logger.customformatter attribute)": [[8, "logger.CustomFormatter.reset", false]], "reset_conversation() (llm.agent.llmagent method)": [[6, "llm.agent.LLMAgent.reset_conversation", false]], "resolve_bases() (in module types)": [[15, "types.resolve_bases", false]], "routes": [[13, "module-routes", false]], "routes.appointments": [[13, "module-routes.appointments", false]], "routes.chat": [[13, "module-routes.chat", false]], "routes.llm_agent": [[13, "module-routes.llm_agent", false]], "routes.patients": [[13, "module-routes.patients", false]], "routes.testing": [[13, "module-routes.testing", false]], "routes.users": [[13, "module-routes.users", false]], "routine (models.appointment.appointmenttype attribute)": [[10, "models.appointment.AppointmentType.ROUTINE", false]], "save_csv() (in module migrations.demo_utils)": [[9, "migrations.demo_utils.save_csv", false]], "save_user_settings() (services.user_service.userservice method)": [[14, "services.user_service.UserService.save_user_settings", false]], "scheduled (models.appointment.appointmentstatus attribute)": [[10, "models.appointment.AppointmentStatus.SCHEDULED", false]], "schedulingservice (class in services.scheduling)": [[14, "services.scheduling.SchedulingService", false]], "schema() (models.appointment.appointment method)": [[10, "models.appointment.Appointment.schema", false]], "schema() (models.patient.encounter method)": [[10, "models.patient.Encounter.schema", false]], "schema() (models.patient.patient method)": [[10, "models.patient.Patient.schema", false]], "search() (db.surreal.dbcontroller method)": [[4, "db.surreal.DbController.search", false]], "search_clinics_by_location() (in module models.clinic)": [[10, "models.clinic.search_clinics_by_location", false]], "search_encounter_history() (in module models.patient)": [[10, "models.patient.search_encounter_history", false]], "search_encounters_route() (in module routes.patients)": [[13, "routes.patients.search_encounters_route", false]], "search_icd_by_description() (in module models.icd)": [[10, "models.icd.search_icd_by_description", false]], "search_patient_history() (in module models.patient)": [[10, "models.patient.search_patient_history", false]], "search_patients_route() (in module routes.patients)": [[13, "routes.patients.search_patients_route", false]], "search_pubmed() (services.apis.ncbi method)": [[14, "services.apis.NCBI.search_pubmed", false]], "search_users_route() (in module routes.users)": [[13, "routes.users.search_users_route", false]], "seed() (db.vec.vec method)": [[4, "db.vec.Vec.seed", false]], "select() (db.surreal.asyncdbcontroller method)": [[4, "db.surreal.AsyncDbController.select", false]], "select() (db.surreal.asyncsurrealwrapper method)": [[4, "db.surreal.AsyncSurrealWrapper.select", false]], "select() (db.surreal.dbcontroller method)": [[4, "db.surreal.DbController.select", false]], "select() (db.surreal.surrealwrapper method)": [[4, "db.surreal.SurrealWrapper.select", false]], "select_many() (db.surreal.asyncdbcontroller method)": [[4, "db.surreal.AsyncDbController.select_many", false]], "select_many() (db.surreal.dbcontroller method)": [[4, "db.surreal.DbController.select_many", false]], "select_n_random_rows_from_csv() (in module migrations.demo_utils)": [[9, "migrations.demo_utils.select_n_random_rows_from_csv", false]], "send() (services.optimal.optimalservice method)": [[14, "services.optimal.OptimalService.send", false]], "send_message_route() (in module routes.chat)": [[13, "routes.chat.send_message_route", false]], "serialize() (models.patient.soapnotes method)": [[10, "models.patient.SOAPNotes.serialize", false]], "serialize_encounter() (in module models.patient)": [[10, "models.patient.serialize_encounter", false]], "serialize_patient() (in module models.patient)": [[10, "models.patient.serialize_patient", false]], "services": [[14, "module-services", false]], "services.apis": [[14, "module-services.apis", false]], "services.auth_decorators": [[14, "module-services.auth_decorators", false]], "services.conversation_service": [[14, "module-services.conversation_service", false]], "services.encryption": [[14, "module-services.encryption", false]], "services.llm_chat_service": [[14, "module-services.llm_chat_service", false]], "services.notifications": [[14, "module-services.notifications", false]], "services.openai_security": [[14, "module-services.openai_security", false]], "services.optimal": [[14, "module-services.optimal", false]], "services.redis_client": [[14, "module-services.redis_client", false]], "services.scheduling": [[14, "module-services.scheduling", false]], "services.user_service": [[14, "module-services.user_service", false]], "set_openai_api_key() (models.user_settings.usersettings method)": [[10, "models.user_settings.UserSettings.set_openai_api_key", false]], "setter() (types.dynamicclassattribute method)": [[15, "types.DynamicClassAttribute.setter", false]], "settings_route() (in module routes.users)": [[13, "routes.users.settings_route", false]], "setup_default_admin_route() (in module routes.users)": [[13, "routes.users.setup_default_admin_route", false]], "setup_user_settings_schema() (in module migrations.setup_user_settings)": [[9, "migrations.setup_user_settings.setup_user_settings_schema", false]], "sex (migrations.demo_utils.patientfactory attribute)": [[9, "migrations.demo_utils.PatientFactory.sex", false]], "signin() (db.surreal.asyncsurrealwrapper method)": [[4, "db.surreal.AsyncSurrealWrapper.signin", false]], "signin() (db.surreal.surrealwrapper method)": [[4, "db.surreal.SurrealWrapper.signin", false]], "simplenamespace (class in types)": [[15, "types.SimpleNamespace", false]], "soapnotes (class in models.patient)": [[10, "models.patient.SOAPNotes", false]], "specialist (models.appointment.appointmenttype attribute)": [[10, "models.appointment.AppointmentType.SPECIALIST", false]], "store_encounter() (in module models.patient)": [[10, "models.patient.store_encounter", false]], "store_event() (in module services.notifications)": [[14, "services.notifications.store_event", false]], "store_patient() (in module models.patient)": [[10, "models.patient.store_patient", false]], "surrealwrapper (class in db.surreal)": [[4, "db.surreal.SurrealWrapper", false]], "test() (in module models.clinic)": [[10, "models.clinic.test", false]], "test_crud_route() (in module routes.testing)": [[13, "routes.testing.test_crud_route", false]], "test_surrealdb_route() (in module routes.testing)": [[13, "routes.testing.test_surrealdb_route", false]], "to_dict() (llm.agent.llmagent method)": [[6, "llm.agent.LLMAgent.to_dict", false]], "to_dict() (models.appointment.appointment method)": [[10, "models.appointment.Appointment.to_dict", false]], "to_dict() (models.conversation.conversation method)": [[10, "models.conversation.Conversation.to_dict", false]], "to_dict() (models.conversation.message method)": [[10, "models.conversation.Message.to_dict", false]], "to_dict() (models.llm_chat.llmchat method)": [[10, "models.llm_chat.LLMChat.to_dict", false]], "to_dict() (models.user.user method)": [[10, "models.user.User.to_dict", false]], "to_dict() (models.user.usersession method)": [[10, "models.user.UserSession.to_dict", false]], "to_dict() (models.user_settings.usersettings method)": [[10, "models.user_settings.UserSettings.to_dict", false]], "to_dict() (services.optimal.optimalmetadata method)": [[14, "services.optimal.OptimalMetadata.to_dict", false]], "to_dict() (services.optimal.optimalschema method)": [[14, "services.optimal.OptimalSchema.to_dict", false]], "to_geojson_point() (models.clinic.clinic method)": [[10, "models.clinic.Clinic.to_geojson_point", false]], "tracebacktype (in module types)": [[15, "types.TracebackType", false]], "types": [[15, "module-types", false]], "uniontype (class in types)": [[15, "types.UnionType", false]], "update() (db.surreal.asyncdbcontroller method)": [[4, "db.surreal.AsyncDbController.update", false]], "update() (db.surreal.asyncsurrealwrapper method)": [[4, "db.surreal.AsyncSurrealWrapper.update", false]], "update() (db.surreal.dbcontroller method)": [[4, "db.surreal.DbController.update", false]], "update() (db.surreal.surrealwrapper method)": [[4, "db.surreal.SurrealWrapper.update", false]], "update_appointment() (services.scheduling.schedulingservice method)": [[14, "services.scheduling.SchedulingService.update_appointment", false]], "update_appointment_route() (in module routes.appointments)": [[13, "routes.appointments.update_appointment_route", false]], "update_clinic() (in module models.clinic)": [[10, "models.clinic.update_clinic", false]], "update_encounter() (in module models.patient)": [[10, "models.patient.update_encounter", false]], "update_encounter_route() (in module routes.patients)": [[13, "routes.patients.update_encounter_route", false]], "update_openai_api_key() (services.user_service.userservice method)": [[14, "services.user_service.UserService.update_openai_api_key", false]], "update_patient() (in module models.patient)": [[10, "models.patient.update_patient", false]], "update_user() (services.user_service.userservice method)": [[14, "services.user_service.UserService.update_user", false]], "update_user_profile_route() (in module routes.users)": [[13, "routes.users.update_user_profile_route", false]], "update_user_settings() (in module routes.users)": [[13, "routes.users.update_user_settings", false]], "use() (db.surreal.asyncsurrealwrapper method)": [[4, "db.surreal.AsyncSurrealWrapper.use", false]], "use() (db.surreal.surrealwrapper method)": [[4, "db.surreal.SurrealWrapper.use", false]], "user (class in models.user)": [[10, "models.user.User", false]], "userservice (class in services.user_service)": [[14, "services.user_service.UserService", false]], "usersession (class in models.user)": [[10, "models.user.UserSession", false]], "usersettings (class in models.user_settings)": [[10, "models.user_settings.UserSettings", false]], "validate() (services.apis.icd10code method)": [[14, "services.apis.ICD10Code.validate", false]], "validate_api_key() (services.openai_security.openaisecurityservice method)": [[14, "services.openai_security.OpenAISecurityService.validate_api_key", false]], "validate_email() (models.user.user static method)": [[10, "models.user.User.validate_email", false]], "validate_openai_api_key() (models.user_settings.usersettings static method)": [[10, "models.user_settings.UserSettings.validate_openai_api_key", false]], "validate_password() (models.user.user static method)": [[10, "models.user.User.validate_password", false]], "validate_phone() (models.user.user static method)": [[10, "models.user.User.validate_phone", false]], "validate_role() (models.user.user static method)": [[10, "models.user.User.validate_role", false]], "validate_session() (services.user_service.userservice method)": [[14, "services.user_service.UserService.validate_session", false]], "validate_username() (models.user.user static method)": [[10, "models.user.User.validate_username", false]], "vec (class in db.vec)": [[4, "db.vec.Vec", false]], "verify_password() (models.user.user method)": [[10, "models.user.User.verify_password", false]], "warn() (logger.logger method)": [[8, "logger.Logger.warn", false]], "warning() (logger.logger method)": [[8, "logger.Logger.warning", false]], "wrapperdescriptortype (in module types)": [[15, "types.WrapperDescriptorType", false]], "yellow (logger.customformatter attribute)": [[8, "logger.CustomFormatter.yellow", false]]}, "objects": {"": [[4, 0, 0, "-", "db"], [5, 0, 0, "-", "dummy_data"], [6, 0, 0, "-", "llm"], [8, 0, 0, "-", "logger"], [9, 0, 0, "-", "migrations"], [10, 0, 0, "-", "models"], [12, 0, 0, "-", "opt"], [13, 0, 0, "-", "routes"], [14, 0, 0, "-", "services"], [15, 0, 0, "-", "types"]], "db": [[4, 0, 0, "-", "surreal"], [4, 0, 0, "-", "surreal_graph"], [4, 0, 0, "-", "vec"]], "db.surreal": [[4, 1, 1, "", "AsyncDbController"], [4, 1, 1, "", "AsyncSurrealWrapper"], [4, 1, 1, "", "DbController"], [4, 1, 1, "", "SurrealWrapper"]], "db.surreal.AsyncDbController": [[4, 2, 1, "", "close"], [4, 2, 1, "", "connect"], [4, 2, 1, "", "create"], [4, 3, 1, "", "db"], [4, 2, 1, "", "delete"], [4, 2, 1, "", "query"], [4, 2, 1, "", "select"], [4, 2, 1, "", "select_many"], [4, 2, 1, "", "update"]], "db.surreal.AsyncSurrealWrapper": [[4, 2, 1, "", "close"], [4, 2, 1, "", "create"], [4, 2, 1, "", "delete"], [4, 2, 1, "", "query"], [4, 2, 1, "", "select"], [4, 2, 1, "", "signin"], [4, 2, 1, "", "update"], [4, 2, 1, "", "use"]], "db.surreal.DbController": [[4, 2, 1, "", "close"], [4, 2, 1, "", "connect"], [4, 2, 1, "", "create"], [4, 3, 1, "", "db"], [4, 2, 1, "", "delete"], [4, 2, 1, "", "query"], [4, 2, 1, "", "search"], [4, 2, 1, "", "select"], [4, 2, 1, "", "select_many"], [4, 2, 1, "", "update"]], "db.surreal.SurrealWrapper": [[4, 2, 1, "", "close"], [4, 2, 1, "", "create"], [4, 2, 1, "", "delete"], [4, 2, 1, "", "query"], [4, 2, 1, "", "select"], [4, 2, 1, "", "signin"], [4, 2, 1, "", "update"], [4, 2, 1, "", "use"]], "db.surreal_graph": [[4, 1, 1, "", "AsyncGraphController"], [4, 1, 1, "", "GraphController"]], "db.surreal_graph.AsyncGraphController": [[4, 2, 1, "", "count_connections"], [4, 2, 1, "", "find_path"], [4, 2, 1, "", "get_relations"], [4, 2, 1, "", "relate"]], "db.surreal_graph.GraphController": [[4, 2, 1, "", "count_connections"], [4, 2, 1, "", "find_path"], [4, 2, 1, "", "get_relations"], [4, 2, 1, "", "relate"]], "db.vec": [[4, 1, 1, "", "BatchItem"], [4, 1, 1, "", "BatchList"], [4, 1, 1, "", "Vec"]], "db.vec.Vec": [[4, 2, 1, "", "get_context"], [4, 2, 1, "", "init"], [4, 2, 1, "", "insert"], [4, 2, 1, "", "rag_chat"], [4, 2, 1, "", "seed"]], "llm": [[6, 0, 0, "-", "agent"], [7, 0, 0, "-", "mcp"], [6, 0, 0, "-", "mcp_tools"]], "llm.agent": [[6, 1, 1, "", "LLMAgent"], [6, 1, 1, "", "LLMModel"], [6, 4, 1, "", "process_tool_call"]], "llm.agent.LLMAgent": [[6, 2, 1, "", "add_tool"], [6, 2, 1, "", "complete"], [6, 2, 1, "", "fetch_history"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_mcp"], [6, 2, 1, "", "process_tool_calls"], [6, 2, 1, "", "reset_conversation"], [6, 2, 1, "", "to_dict"]], "llm.agent.LLMModel": [[6, 3, 1, "", "GPT_4_1"], [6, 3, 1, "", "GPT_4_1_MINI"], [6, 3, 1, "", "GPT_4_1_NANO"]], "llm.mcp": [[7, 0, 0, "-", "mcp_init"], [7, 0, 0, "-", "register_tools"]], "llm.mcp.mcp_init": [[7, 4, 1, "", "health_check"]], "llm.mcp.register_tools": [[7, 4, 1, "", "register_openai_tool"]], "llm.mcp_tools": [[6, 1, 1, "", "CustomHeaderAuth"], [6, 4, 1, "", "fetch_mcp_tool_defs"]], "llm.mcp_tools.CustomHeaderAuth": [[6, 3, 1, "", "Generator"], [6, 2, 1, "", "auth_flow"]], "logger": [[8, 1, 1, "", "CustomFormatter"], [8, 1, 1, "", "Logger"]], "logger.CustomFormatter": [[8, 3, 1, "", "FORMATS"], [8, 3, 1, "", "black"], [8, 3, 1, "", "bold_red"], [8, 2, 1, "", "format"], [8, 3, 1, "", "green"], [8, 3, 1, "", "grey"], [8, 3, 1, "", "log_format"], [8, 3, 1, "", "red"], [8, 3, 1, "", "reset"], [8, 3, 1, "", "yellow"]], "logger.Logger": [[8, 2, 1, "", "configure"], [8, 2, 1, "", "debug"], [8, 2, 1, "", "error"], [8, 2, 1, "", "info"], [8, 2, 1, "", "warn"], [8, 2, 1, "", "warning"]], "migrations": [[9, 0, 0, "-", "demo"], [9, 0, 0, "-", "demo_utils"], [9, 0, 0, "-", "setup_user_settings"], [9, 0, 0, "-", "vec"]], "migrations.demo": [[9, 4, 1, "", "create_forms"], [9, 4, 1, "", "create_n_patients"]], "migrations.demo_utils": [[9, 1, 1, "", "Encounter"], [9, 1, 1, "", "EncounterFactory"], [9, 1, 1, "", "FactoryWrapper"], [9, 1, 1, "", "PatientFactory"], [9, 4, 1, "", "f"], [9, 4, 1, "", "load_csv"], [9, 4, 1, "", "save_csv"], [9, 4, 1, "", "select_n_random_rows_from_csv"]], "migrations.demo_utils.EncounterFactory": [[9, 1, 1, "", "Meta"], [9, 3, 1, "", "date_created"], [9, 3, 1, "", "note_id"], [9, 3, 1, "", "note_text"], [9, 3, 1, "", "provider_id"]], "migrations.demo_utils.EncounterFactory.Meta": [[9, 3, 1, "", "model"]], "migrations.demo_utils.PatientFactory": [[9, 1, 1, "", "Meta"], [9, 3, 1, "", "date_of_birth"], [9, 3, 1, "", "demographic_no"], [9, 3, 1, "", "email"], [9, 3, 1, "", "first_name"], [9, 3, 1, "", "last_name"], [9, 3, 1, "", "location"], [9, 3, 1, "", "phone"], [9, 3, 1, "", "sex"]], "migrations.demo_utils.PatientFactory.Meta": [[9, 3, 1, "", "model"]], "migrations.setup_user_settings": [[9, 4, 1, "", "check_existing_schema"], [9, 4, 1, "", "main"], [9, 4, 1, "", "setup_user_settings_schema"]], "migrations.vec": [[9, 4, 1, "", "init_vec"]], "models": [[10, 0, 0, "-", "appointment"], [10, 0, 0, "-", "clinic"], [10, 0, 0, "-", "conversation"], [10, 0, 0, "-", "icd"], [10, 0, 0, "-", "llm_chat"], [10, 0, 0, "-", "patient"], [10, 0, 0, "-", "user"], [10, 0, 0, "-", "user_settings"]], "models.appointment": [[10, 1, 1, "", "Appointment"], [10, 1, 1, "", "AppointmentStatus"], [10, 1, 1, "", "AppointmentType"]], "models.appointment.Appointment": [[10, 2, 1, "", "can_be_cancelled"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "get_datetime"], [10, 2, 1, "", "get_duration_minutes"], [10, 2, 1, "", "is_cancelled"], [10, 2, 1, "", "is_completed"], [10, 2, 1, "", "is_confirmed"], [10, 2, 1, "", "is_in_past"], [10, 2, 1, "", "is_this_week"], [10, 2, 1, "", "is_today"], [10, 2, 1, "", "schema"], [10, 2, 1, "", "to_dict"]], "models.appointment.AppointmentStatus": [[10, 3, 1, "", "CANCELLED"], [10, 3, 1, "", "COMPLETED"], [10, 3, 1, "", "CONFIRMED"], [10, 3, 1, "", "NO_SHOW"], [10, 3, 1, "", "SCHEDULED"]], "models.appointment.AppointmentType": [[10, 3, 1, "", "CONSULTATION"], [10, 3, 1, "", "EMERGENCY"], [10, 3, 1, "", "FOLLOW_UP"], [10, 3, 1, "", "ROUTINE"], [10, 3, 1, "", "SPECIALIST"]], "models.clinic": [[10, 1, 1, "", "Clinic"], [10, 4, 1, "", "create_clinic"], [10, 4, 1, "", "delete_clinic"], [10, 4, 1, "", "generate_surrealql_create_query"], [10, 4, 1, "", "get_all_clinics"], [10, 4, 1, "", "get_clinic_by_id"], [10, 4, 1, "", "km_m"], [10, 4, 1, "", "search_clinics_by_location"], [10, 4, 1, "", "test"], [10, 4, 1, "", "update_clinic"]], "models.clinic.Clinic": [[10, 2, 1, "", "to_geojson_point"]], "models.conversation": [[10, 1, 1, "", "Conversation"], [10, 1, 1, "", "Message"]], "models.conversation.Conversation": [[10, 2, 1, "", "add_participant"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "is_participant"], [10, 2, 1, "", "remove_participant"], [10, 2, 1, "", "to_dict"]], "models.conversation.Message": [[10, 2, 1, "", "from_dict"], [10, 2, 1, "", "to_dict"]], "models.icd": [[10, 4, 1, "", "define_index"], [10, 4, 1, "", "import_icd_codes"], [10, 4, 1, "", "lookup_icd_code"], [10, 4, 1, "", "search_icd_by_description"]], "models.llm_chat": [[10, 1, 1, "", "LLMChat"]], "models.llm_chat.LLMChat": [[10, 2, 1, "", "add_message"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "to_dict"]], "models.patient": [[10, 1, 1, "", "Encounter"], [10, 1, 1, "", "Patient"], [10, 1, 1, "", "SOAPNotes"], [10, 4, 1, "", "add_some_placeholder_encounters"], [10, 4, 1, "", "add_some_placeholder_patients"], [10, 4, 1, "", "create_encounter"], [10, 4, 1, "", "create_patient"], [10, 4, 1, "", "create_schema"], [10, 4, 1, "", "delete_encounter"], [10, 4, 1, "", "delete_patient"], [10, 4, 1, "", "get_all_encounters"], [10, 4, 1, "", "get_all_patients"], [10, 4, 1, "", "get_encounter_by_id"], [10, 4, 1, "", "get_encounters_by_patient"], [10, 4, 1, "", "get_patient_by_id"], [10, 4, 1, "", "search_encounter_history"], [10, 4, 1, "", "search_patient_history"], [10, 4, 1, "", "serialize_encounter"], [10, 4, 1, "", "serialize_patient"], [10, 4, 1, "", "store_encounter"], [10, 4, 1, "", "store_patient"], [10, 4, 1, "", "update_encounter"], [10, 4, 1, "", "update_patient"]], "models.patient.Encounter": [[10, 2, 1, "", "schema"]], "models.patient.Patient": [[10, 2, 1, "", "schema"]], "models.patient.SOAPNotes": [[10, 2, 1, "", "from_dict"], [10, 2, 1, "", "serialize"]], "models.user": [[10, 1, 1, "", "User"], [10, 1, 1, "", "UserSession"]], "models.user.User": [[10, 2, 1, "", "from_dict"], [10, 2, 1, "", "get_full_name"], [10, 2, 1, "", "has_role"], [10, 2, 1, "", "hash_password"], [10, 2, 1, "", "is_admin"], [10, 2, 1, "", "is_patient"], [10, 2, 1, "", "is_provider"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "validate_email"], [10, 2, 1, "", "validate_password"], [10, 2, 1, "", "validate_phone"], [10, 2, 1, "", "validate_role"], [10, 2, 1, "", "validate_username"], [10, 2, 1, "", "verify_password"]], "models.user.UserSession": [[10, 2, 1, "", "from_dict"], [10, 2, 1, "", "is_expired"], [10, 2, 1, "", "to_dict"]], "models.user_settings": [[10, 1, 1, "", "UserSettings"]], "models.user_settings.UserSettings": [[10, 2, 1, "", "from_dict"], [10, 2, 1, "", "get_openai_api_key"], [10, 2, 1, "", "has_openai_api_key"], [10, 2, 1, "", "set_openai_api_key"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "validate_openai_api_key"]], "opt": [[12, 0, 0, "-", "hypertension"]], "opt.hypertension": [[12, 4, 1, "", "build_hypertension_payload"], [12, 4, 1, "", "create_food_data_pd"], [12, 4, 1, "", "main"]], "routes": [[13, 0, 0, "-", "appointments"], [13, 0, 0, "-", "chat"], [13, 0, 0, "-", "llm_agent"], [13, 0, 0, "-", "patients"], [13, 0, 0, "-", "testing"], [13, 0, 0, "-", "users"]], "routes.appointments": [[13, 4, 1, "", "cancel_appointment_route"], [13, 4, 1, "", "confirm_appointment_route"], [13, 4, 1, "", "create_appointment_route"], [13, 4, 1, "", "get_appointment_route"], [13, 4, 1, "", "get_appointment_statuses_route"], [13, 4, 1, "", "get_appointment_types_route"], [13, 4, 1, "", "get_appointments_route"], [13, 4, 1, "", "get_available_slots_route"], [13, 4, 1, "", "update_appointment_route"]], "routes.chat": [[13, 4, 1, "", "create_conversation_route"], [13, 4, 1, "", "get_conversation_messages_route"], [13, 4, 1, "", "get_user_conversations_route"], [13, 4, 1, "", "send_message_route"]], "routes.llm_agent": [[13, 4, 1, "", "llm_agent_endpoint_route"]], "routes.patients": [[13, 4, 1, "", "create_encounter_route"], [13, 4, 1, "", "delete_encounter_route"], [13, 4, 1, "", "get_all_encounters_route"], [13, 4, 1, "", "get_encounter_by_id_route"], [13, 4, 1, "", "get_encounters_by_patient_route"], [13, 4, 1, "", "patch_intake_route"], [13, 4, 1, "", "patient_endpoint_route"], [13, 4, 1, "", "patients_endpoint_route"], [13, 4, 1, "", "search_encounters_route"], [13, 4, 1, "", "search_patients_route"], [13, 4, 1, "", "update_encounter_route"]], "routes.testing": [[13, 4, 1, "", "debug_session_route"], [13, 4, 1, "", "test_crud_route"], [13, 4, 1, "", "test_surrealdb_route"]], "routes.users": [[13, 4, 1, "", "activate_user_route"], [13, 4, 1, "", "change_password_route"], [13, 4, 1, "", "check_users_exist_route"], [13, 4, 1, "", "deactivate_user_route"], [13, 4, 1, "", "get_all_users_route"], [13, 4, 1, "", "get_api_usage_route"], [13, 4, 1, "", "get_current_user_info_route"], [13, 4, 1, "", "get_user_profile_route"], [13, 4, 1, "", "get_user_settings"], [13, 4, 1, "", "login_route"], [13, 4, 1, "", "logout_route"], [13, 4, 1, "", "register_route"], [13, 4, 1, "", "search_users_route"], [13, 4, 1, "", "settings_route"], [13, 4, 1, "", "setup_default_admin_route"], [13, 4, 1, "", "update_user_profile_route"], [13, 4, 1, "", "update_user_settings"]], "services": [[14, 0, 0, "-", "apis"], [14, 0, 0, "-", "auth_decorators"], [14, 0, 0, "-", "conversation_service"], [14, 0, 0, "-", "encryption"], [14, 0, 0, "-", "llm_chat_service"], [14, 0, 0, "-", "notifications"], [14, 0, 0, "-", "openai_security"], [14, 0, 0, "-", "optimal"], [14, 0, 0, "-", "redis_client"], [14, 0, 0, "-", "scheduling"], [14, 0, 0, "-", "user_service"]], "services.apis": [[14, 1, 1, "", "ClinicalTrials"], [14, 1, 1, "", "ICD10Code"], [14, 1, 1, "", "Medline"], [14, 1, 1, "", "NCBI"]], "services.apis.ClinicalTrials": [[14, 2, 1, "", "fetch_clinical_trials"]], "services.apis.ICD10Code": [[14, 2, 1, "", "validate"]], "services.apis.Medline": [[14, 2, 1, "", "fetch_medline"]], "services.apis.NCBI": [[14, 2, 1, "", "efetch_abstract"], [14, 2, 1, "", "esearch"], [14, 2, 1, "", "esummary"], [14, 2, 1, "", "fetch_ncbi_studies"], [14, 2, 1, "", "search_pubmed"]], "services.auth_decorators": [[14, 4, 1, "", "get_current_user"], [14, 4, 1, "", "get_current_user_id"], [14, 4, 1, "", "get_current_user_role"], [14, 4, 1, "", "optional_auth"], [14, 4, 1, "", "require_admin"], [14, 4, 1, "", "require_auth"], [14, 4, 1, "", "require_patient"], [14, 4, 1, "", "require_provider"], [14, 4, 1, "", "require_role"]], "services.conversation_service": [[14, 1, 1, "", "ConversationService"]], "services.conversation_service.ConversationService": [[14, 2, 1, "", "add_message"], [14, 2, 1, "", "close"], [14, 2, 1, "", "connect"], [14, 2, 1, "", "create_conversation"], [14, 2, 1, "", "delete_conversation"], [14, 2, 1, "", "get_conversation_by_id"], [14, 2, 1, "", "get_conversation_by_participants"], [14, 2, 1, "", "get_conversation_messages"], [14, 2, 1, "", "get_user_conversations"], [14, 2, 1, "", "mark_messages_as_read"]], "services.encryption": [[14, 1, 1, "", "EncryptionService"], [14, 4, 1, "", "get_encryption_service"]], "services.encryption.EncryptionService": [[14, 2, 1, "", "decrypt"], [14, 2, 1, "", "decrypt_api_key"], [14, 2, 1, "", "encrypt"], [14, 2, 1, "", "encrypt_api_key"]], "services.llm_chat_service": [[14, 1, 1, "", "LLMChatService"]], "services.llm_chat_service.LLMChatService": [[14, 2, 1, "", "add_message"], [14, 2, 1, "", "close"], [14, 2, 1, "", "connect"], [14, 2, 1, "", "create_llm_chat"], [14, 2, 1, "", "get_llm_chat"], [14, 2, 1, "", "get_llm_chats_for_user"]], "services.notifications": [[14, 4, 1, "", "publish_event"], [14, 4, 1, "", "publish_event_with_buffer"], [14, 4, 1, "", "store_event"]], "services.openai_security": [[14, 1, 1, "", "OpenAISecurityService"], [14, 4, 1, "", "get_openai_security_service"]], "services.openai_security.OpenAISecurityService": [[14, 2, 1, "", "check_rate_limit"], [14, 2, 1, "", "get_usage_stats"], [14, 2, 1, "", "get_user_api_key_with_validation"], [14, 2, 1, "", "log_api_usage"], [14, 2, 1, "", "validate_api_key"]], "services.optimal": [[14, 1, 1, "", "OptimalMetadata"], [14, 1, 1, "", "OptimalSchema"], [14, 1, 1, "", "OptimalService"]], "services.optimal.OptimalMetadata": [[14, 2, 1, "", "to_dict"]], "services.optimal.OptimalSchema": [[14, 2, 1, "", "to_dict"]], "services.optimal.OptimalService": [[14, 5, 1, "", "headers"], [14, 5, 1, "", "payload"], [14, 2, 1, "", "send"]], "services.redis_client": [[14, 4, 1, "", "get_redis_connection"]], "services.scheduling": [[14, 1, 1, "", "SchedulingService"]], "services.scheduling.SchedulingService": [[14, 2, 1, "", "cancel_appointment"], [14, 2, 1, "", "close"], [14, 2, 1, "", "complete_appointment"], [14, 2, 1, "", "confirm_appointment"], [14, 2, 1, "", "connect"], [14, 2, 1, "", "create_appointment"], [14, 2, 1, "", "get_all_appointments"], [14, 2, 1, "", "get_appointment"], [14, 2, 1, "", "get_appointments_by_date"], [14, 2, 1, "", "get_appointments_by_patient"], [14, 2, 1, "", "get_appointments_by_provider"], [14, 2, 1, "", "get_available_slots"], [14, 2, 1, "", "update_appointment"]], "services.user_service": [[14, 1, 1, "", "UserService"]], "services.user_service.UserService": [[14, 2, 1, "", "activate_user"], [14, 2, 1, "", "authenticate_user"], [14, 2, 1, "", "change_password"], [14, 2, 1, "", "close"], [14, 2, 1, "", "connect"], [14, 2, 1, "", "create_default_admin"], [14, 2, 1, "", "create_user"], [14, 2, 1, "", "deactivate_user"], [14, 2, 1, "", "get_all_users"], [14, 2, 1, "", "get_openai_api_key"], [14, 2, 1, "", "get_user_by_email"], [14, 2, 1, "", "get_user_by_id"], [14, 2, 1, "", "get_user_by_username"], [14, 2, 1, "", "get_user_settings"], [14, 2, 1, "", "has_openai_api_key"], [14, 2, 1, "", "logout"], [14, 2, 1, "", "save_user_settings"], [14, 2, 1, "", "update_openai_api_key"], [14, 2, 1, "", "update_user"], [14, 2, 1, "", "validate_session"]], "types": [[15, 3, 1, "", "AsyncGeneratorType"], [15, 3, 1, "", "BuiltinFunctionType"], [15, 3, 1, "", "BuiltinMethodType"], [15, 3, 1, "", "CellType"], [15, 3, 1, "", "ClassMethodDescriptorType"], [15, 3, 1, "", "CodeType"], [15, 3, 1, "", "CoroutineType"], [15, 1, 1, "", "DynamicClassAttribute"], [15, 3, 1, "", "EllipsisType"], [15, 3, 1, "", "FrameType"], [15, 3, 1, "", "FunctionType"], [15, 3, 1, "", "GeneratorType"], [15, 1, 1, "", "GenericAlias"], [15, 3, 1, "", "GetSetDescriptorType"], [15, 3, 1, "", "LambdaType"], [15, 3, 1, "", "MappingProxyType"], [15, 3, 1, "", "MemberDescriptorType"], [15, 3, 1, "", "MethodDescriptorType"], [15, 3, 1, "", "MethodType"], [15, 3, 1, "", "MethodWrapperType"], [15, 3, 1, "", "ModuleType"], [15, 1, 1, "", "NoneType"], [15, 1, 1, "", "NotImplementedType"], [15, 1, 1, "", "SimpleNamespace"], [15, 3, 1, "", "TracebackType"], [15, 1, 1, "", "UnionType"], [15, 3, 1, "", "WrapperDescriptorType"], [15, 4, 1, "", "coroutine"], [15, 4, 1, "", "new_class"], [15, 4, 1, "", "prepare_class"], [15, 4, 1, "", "resolve_bases"]], "types.DynamicClassAttribute": [[15, 2, 1, "", "deleter"], [15, 2, 1, "", "getter"], [15, 2, 1, "", "setter"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property"}, "terms": {"": [4, 6, 8, 10, 13, 14, 15], "0": [2, 10, 14], "00": [2, 3, 13, 14], "000": 3, "00z": [2, 13], "01": [2, 3, 13], "01t00": [3, 13], "01t12": 13, "02t00": 13, "09": 13, "0m": 8, "1": [4, 6, 13, 14], "10": [8, 10, 13, 14, 15], "100": [0, 3, 13, 14], "11": 13, "113883": 14, "123": [2, 3, 4, 13], "12345": [10, 13], "1234567890": 13, "16": 14, "1640995200": 0, "1m": 8, "2": [13, 14], "20": [8, 13, 14], "200": 13, "201": [1, 13], "2023": 13, "2024": 3, "2025": 2, "20m": 8, "20t10": 2, "20t14": 2, "256": [0, 3, 10], "2fjson": 14, "3": [4, 15], "30": [2, 8, 13, 14], "31": 8, "32": [0, 3, 8], "33": 8, "35": 14, "3600": 0, "38": 8, "4": [4, 6, 15], "40": 8, "400": [1, 4, 13], "401": [13, 14], "403": [13, 14], "404": [1, 13], "456": [2, 4], "5": [0, 9, 13, 14], "50": [8, 14], "500": [1, 13], "5000": [2, 10, 13], "560": 15, "585": 15, "6": [2, 14], "604": 15, "6379": 2, "67890": 13, "840": 14, "8700": 4, "9": [14, 15], "90": 14, "A": [1, 4, 6, 9, 10, 13, 14, 15], "At": 13, "For": 2, "If": [4, 6, 10, 13, 14, 15], "In": [0, 2], "It": [4, 10, 13, 14, 17], "NOT": 7, "No": [0, 3, 13], "Not": [2, 13], "Or": 2, "TO": 7, "The": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14], "To": 2, "WITH": 7, "__args__": 15, "__getattr__": 15, "__origin__": 15, "__prepare__": 15, "about": [6, 14], "abstract": 14, "abus": 0, "accept": [13, 14], "access": [0, 2, 3, 4, 6, 13, 14, 15], "account": [3, 13, 14], "accur": 6, "accuraci": 0, "acknowledg": 2, "across": 10, "act": 15, "action": 1, "activ": [2, 13, 14, 15], "activate_us": [11, 14], "activate_user_rout": [11, 13], "ad": [10, 14], "adapt": 0, "add": [1, 2, 3, 6, 8, 10, 14, 17], "add_messag": [10, 11, 14], "add_particip": [10, 11], "add_some_placeholder_encount": [10, 11], "add_some_placeholder_pati": [10, 11], "add_tool": [6, 11], "addit": [0, 3, 6, 8, 14], "additional_not": 10, "address": [1, 10, 13, 14], "adjust": 0, "admin": [10, 13, 14], "administr": 13, "advanc": [0, 1], "ae": [0, 3], "after": 2, "again": 0, "against": [0, 10], "agent": [11, 13], "ai": [10, 13], "ai_assist": [13, 14], "alert": 0, "alia": [6, 9, 15], "all": [2, 3, 4, 10, 13, 14], "allow": [13, 14, 15], "along": 13, "alpin": 2, "alreadi": [2, 9, 10], "also": 10, "alwai": 3, "am": 14, "amount": 0, "an": [1, 4, 6, 8, 9, 10, 13, 14, 15], "analyt": 17, "ani": [2, 4, 6, 8, 10, 12, 13, 14, 15], "annual": 2, "anomali": 0, "answer": [4, 6], "api": [2, 4, 6, 10, 11, 13, 17], "api_kei": [0, 3, 4, 6, 10, 14], "api_usag": 13, "apiservic": 3, "app": [2, 17], "append": 14, "applic": [1, 2, 3, 13, 14], "appoint": [11, 14], "appointment_d": [10, 13, 14], "appointment_id": [13, 14], "appointment_status": 13, "appointment_typ": [10, 13, 14], "appointmentid": 2, "appointmentstatu": [10, 11], "appointmenttyp": [10, 11], "appropri": [1, 2, 8, 15], "apt": 2, "ar": [0, 1, 2, 3, 4, 6, 10, 13, 14], "architectur": 17, "aren": 15, "arg": [8, 9], "argument": [6, 8, 15], "arrai": 1, "arsmedicatech": [0, 2, 3, 7], "articl": 14, "asctim": 8, "ask": 4, "assess": 10, "assist": [4, 6, 10, 13, 14], "assistant_id": [10, 14], "associ": 10, "async": [4, 6, 7, 10], "async_db_control": 4, "asyncdbcontrol": [4, 10, 11], "asyncgeneratortyp": [11, 15], "asyncgraphcontrol": [4, 11], "asynchron": [4, 10], "asyncio": 4, "asyncopenai": 4, "asyncsurr": 4, "asyncsurrealwrapp": [4, 11], "atribut": 15, "attach": 1, "attack": 0, "attempt": [9, 14], "attribut": 15, "attributeerror": 15, "audit": [0, 1, 3], "augment": 4, "auth": [6, 14], "auth_decor": 11, "auth_flow": [6, 11], "authent": [0, 2, 3, 4, 10, 13, 14], "authenticate_us": [11, 14], "author": [3, 14], "automat": [0, 3], "avail": [1, 10, 13, 14], "available_slot": 13, "avatar": 13, "avoid": 14, "await": 3, "backend": [0, 17], "background": 13, "backup": 3, "bad": 13, "bar": 0, "base": [2, 3, 4, 6, 8, 9, 10, 13, 14, 15], "base64": 14, "basic": 13, "batch": 4, "batchitem": [4, 11], "batchlist": [4, 11], "bearer": 3, "befor": 3, "being": [0, 14], "best": 17, "better": 14, "between": [4, 10, 14, 15], "bi": 2, "bill": 14, "black": [8, 11], "bodi": 13, "bold_r": [8, 11], "bool": [9, 10, 14], "both": [0, 1, 13], "bound": 14, "brew": 2, "buffer": [2, 14], "build": [6, 12], "build_hypertension_payload": [11, 12], "built": 15, "builtin": 15, "builtinfunctiontyp": [11, 15], "builtinmethodtyp": [11, 15], "bulk": 1, "busi": 14, "button": 1, "c": 14, "cach": 0, "calcul": 10, "call": [0, 1, 2, 3, 6, 13, 15], "call_funct": 6, "callabl": [6, 7, 14], "callback": 2, "can": [1, 3, 6, 10, 13], "can_be_cancel": [10, 11], "cancel": [10, 11, 13, 14], "cancel_appoint": [11, 14], "cancel_appointment_rout": [11, 13], "cannot": [4, 13], "capabl": 1, "cardiologi": 13, "care": 6, "case": [1, 10, 13], "cd": 3, "celltyp": [11, 15], "chang": [3, 13, 14], "change_password": [11, 13, 14], "change_password_rout": [11, 13], "channel": 14, "charact": [0, 1, 3], "chat": [2, 4, 10, 11, 14], "chatcompletionmessagetoolcal": 6, "chatcompletiontoolparam": 6, "check": [0, 2, 3, 7, 9, 10, 13, 14], "check_exist": 13, "check_existing_schema": [9, 11], "check_rate_limit": [0, 11, 14], "check_users_exist_rout": [11, 13], "checkup": 2, "citi": [1, 10, 13], "class": [4, 6, 8, 9, 10, 14, 15], "classmethod": [6, 10], "classmethoddescriptortyp": [11, 15], "cleanup": [0, 13], "clear": 6, "cli": 2, "client": [4, 7, 14], "clinic": [6, 11, 13, 14], "clinic_address": [10, 13], "clinic_id": 10, "clinic_nam": [10, 13], "clinicaltri": [11, 14], "close": [4, 11, 14], "code": [1, 9, 10, 13, 14], "codeinterpretertoolcal": 6, "codetyp": [11, 15], "color": 8, "column": [9, 10], "com": 13, "commun": 2, "compat": 4, "complet": [1, 6, 10, 11, 13, 14], "complete_appoint": [11, 14], "complianc": 0, "complic": 7, "compon": 17, "comprehens": 0, "concis": 6, "condit": 14, "configur": [3, 8, 11, 17], "confirm": [10, 11, 13, 14], "confirm_appoint": [11, 14], "confirm_appointment_rout": [11, 13], "conflict": 14, "connect": [0, 3, 4, 9, 10, 11, 14], "consider": 17, "consol": 2, "const": [1, 2, 3], "constraint": 14, "construct": 14, "consult": [10, 11, 13, 14], "contact": [0, 1], "contain": [4, 6, 7, 9, 10, 12, 13, 14], "content": [2, 3, 11], "context": [4, 7, 14], "continu": 14, "control": [0, 3, 4], "conv": 2, "conv12345": 13, "convers": [2, 6, 11, 13, 14], "conversation_id": [2, 10, 13, 14], "conversation_object": 14, "conversation_servic": 11, "conversation_typ": [10, 14], "conversationservic": [11, 14], "convert": [6, 10, 14, 15], "cooki": 2, "copi": 15, "cor": 2, "coroutin": [11, 15], "coroutinetyp": [11, 15], "correctli": [1, 14], "correspond": 6, "corrupt": 3, "cost": 0, "count": [0, 4, 13], "count_connect": [4, 11], "countri": 1, "creat": [3, 4, 6, 9, 10, 11, 12, 13, 14, 15], "create_appoint": [11, 14], "create_appointment_rout": [11, 13], "create_clin": [10, 11], "create_convers": [11, 14], "create_conversation_rout": [11, 13], "create_default_admin": [11, 14], "create_encount": [10, 11], "create_encounter_rout": [11, 13], "create_food_data_pd": [11, 12], "create_form": [9, 11], "create_llm_chat": [11, 14], "create_n_pati": [9, 11], "create_pati": [10, 11], "create_schema": [10, 11], "create_us": [11, 14], "created_at": [2, 3, 10, 13], "creation": [3, 10, 13], "credenti": [4, 13], "crud": [13, 17], "csv": [9, 10], "csv_file_path": 10, "ctx": 7, "curl": [2, 14], "current": [0, 4, 7, 13, 14], "current_password": [13, 14], "current_user_id": 2, "custom": [6, 8, 14], "custom_llm_endpoint": 6, "customformatt": [8, 11], "customheaderauth": [6, 11], "cycl": 1, "d": [2, 8], "data": [2, 4, 5, 6, 9, 10, 12, 13, 14, 17], "data_sourc": 4, "data_typ": 4, "databas": [2, 4, 6, 9, 10, 13, 14, 17], "datafram": 12, "date": [1, 3, 13, 14], "date_cr": [9, 10, 11], "date_of_birth": [1, 9, 10, 11], "datefmt": 8, "datetim": 10, "db": [10, 11, 17], "db_control": [4, 14], "db_url": 4, "dbcontrol": [4, 10, 11, 14], "dd": 14, "deactiv": [13, 14], "deactivate_us": [11, 14], "deactivate_user_rout": [11, 13], "debian": 2, "debug": [0, 4, 8, 11, 13, 14], "debug_session_rout": [11, 13], "decor": 14, "decrypt": [3, 10, 11, 14], "decrypt_api_kei": [3, 11, 14], "decrypted_kei": 3, "default": [4, 8, 10, 13, 14], "defin": [9, 10, 15], "define_index": [10, 11], "definit": [6, 7, 10], "degrad": 0, "delai": 14, "delet": [4, 10, 11, 13, 14, 15], "delete_clin": [10, 11], "delete_convers": [11, 14], "delete_encount": [10, 11], "delete_encounter_rout": [11, 13], "delete_pati": [10, 11], "deliv": 2, "demo": 11, "demo_util": 11, "demographic_no": [1, 9, 10, 11], "demonstr": 10, "deni": 13, "deriv": [0, 3], "describ": [0, 1, 3], "descript": 10, "descriptor": 15, "design": [0, 1, 3], "desktop": 3, "detail": [0, 1, 3, 10, 13, 14, 17], "detect": 0, "devic": [2, 3], "df": 12, "diagnost": 9, "diagnostic_cod": [9, 10], "dict": [4, 6, 7, 10, 12, 14, 15], "dictionari": [4, 6, 10, 14], "diet": 12, "differ": [13, 15], "direct": [2, 4, 14], "directli": 15, "displai": [0, 1, 3, 13], "distanc": 10, "distribut": 0, "dn": 14, "do": 0, "doc": 15, "docker": 2, "document": [0, 1, 2, 3, 9], "doe": [4, 7, 9, 10, 13, 14], "doesn": 14, "dollar": 0, "don": 3, "done": 15, "dr": 2, "dropdown": 13, "due": 7, "dummi": 5, "dummy_data": [11, 17], "durat": [10, 13, 14], "duration_minut": [13, 14], "dure": [1, 13], "dynam": 15, "dynamicclassattribut": [11, 15], "e": [4, 6, 9, 10, 13, 14, 15], "each": [0, 2, 4, 6, 9, 10, 14], "edg": 4, "edge_data": 4, "edge_t": 4, "edit": 1, "efetch": 14, "efetch_abstract": [11, 14], "ellipsi": 15, "ellipsistyp": [11, 15], "email": [1, 9, 10, 11, 13, 14], "embed": 4, "embed_model": 4, "emerg": [10, 11, 13], "empti": [4, 10, 13, 14, 15], "en": 14, "enabl": 3, "encod": 14, "encodeuricompon": 1, "encount": [1, 9, 10, 11, 13], "encounter_data": 10, "encounter_id": [10, 13], "encounterdict": 10, "encounterfactori": [9, 11], "encrypt": [0, 2, 10, 11], "encrypt_api_kei": [3, 11, 14], "encrypted_api_kei": 14, "encrypted_data": 14, "encrypted_kei": 3, "encryption_kei": [0, 3], "encryption_servic": 3, "encryptionservic": [11, 14], "end": [0, 4, 13, 14], "end_dat": 14, "end_tabl": 4, "end_tim": [10, 13, 14], "endpoint": [0, 7, 13, 17], "enforc": 0, "enhanc": 17, "enough": 4, "ensur": [0, 2, 3, 10, 13, 14], "entrez": 14, "entri": 15, "enum": [6, 10, 15], "enumer": 6, "env": 2, "environ": 17, "error": [2, 3, 4, 8, 10, 11, 13, 14, 17], "error_messag": [10, 14], "esearch": [11, 14], "establish": [2, 14], "esummari": [11, 14], "etc": [13, 14], "event": [14, 17], "event_data": [2, 14], "eventdata": 14, "everi": [6, 9], "exampl": [4, 13, 17], "exceed": [0, 14], "except": [4, 14], "exclud": 13, "exec_bodi": 15, "execut": [4, 6], "exist": [1, 3, 4, 6, 9, 13, 14], "expect": [10, 13], "experi": 0, "expir": 10, "expires_at": 10, "explain": 2, "export": [1, 3], "expos": 3, "f": [1, 9, 11, 14], "factor": [0, 3], "factori": 9, "factory_class": 9, "factorywrapp": [9, 11], "fail": [0, 2, 3, 4, 10, 13, 14], "failur": [0, 3, 13], "fair": 0, "faker": 9, "fallback": 0, "fals": [9, 10, 13, 14], "fastmcp": 7, "fdel": 15, "featur": 17, "feel": 2, "femal": 1, "fernet": 3, "fetch": [2, 6, 14], "fetch_clinical_tri": [11, 14], "fetch_histori": [6, 11], "fetch_mcp_tool_def": [6, 11], "fetch_medlin": [11, 14], "fetch_ncbi_studi": [11, 14], "fget": 15, "field": [1, 4, 10, 13, 14], "file": [1, 2, 4, 9, 10], "filenam": 8, "filesearchtoolcal": 6, "filter": [1, 4, 13, 14], "find": 4, "find_path": [4, 11], "firewal": 2, "first": [9, 10, 13, 14], "first_nam": [1, 9, 10, 11, 13, 14], "flask": [1, 2, 6, 14], "float": [10, 14], "flow": 17, "fmt": 8, "fn": 7, "focus": 3, "follow": [1, 3, 10, 13], "follow_up": [10, 11, 13], "food": 12, "forbidden": [13, 14], "form": [1, 9], "format": [0, 1, 2, 3, 6, 8, 10, 11, 13, 14], "formatt": 8, "found": [1, 10, 13, 14], "frametyp": [11, 15], "friendli": 0, "from": [2, 3, 4, 6, 9, 10, 13, 14, 15], "from_dict": [6, 10, 11], "from_mcp": [6, 11], "from_record": 4, "frontend": [0, 17], "fset": 15, "ft": 13, "full": [1, 10], "func": 15, "function": [2, 6, 7, 9, 10, 12, 13, 14, 15], "functiontoolcal": 6, "functiontyp": [11, 15], "futur": 17, "fy2025": 10, "g": [4, 6, 9, 10, 13, 14, 15], "gdpr": 0, "gener": [3, 4, 6, 9, 10, 11, 15], "generate_surrealql_create_queri": [10, 11], "generatortyp": [11, 15], "genericalia": [11, 15], "geograph": 0, "geojson": 10, "geospati": 10, "get": [0, 2, 4, 10, 13, 14], "get_all_appoint": [11, 14], "get_all_clin": [10, 11], "get_all_encount": [10, 11], "get_all_encounters_rout": [11, 13], "get_all_pati": [10, 11], "get_all_us": [11, 14], "get_all_users_rout": [11, 13], "get_api_usage_rout": [11, 13], "get_appoint": [11, 14], "get_appointment_rout": [11, 13], "get_appointment_statuses_rout": [11, 13], "get_appointment_types_rout": [11, 13], "get_appointments_by_d": [11, 14], "get_appointments_by_pati": [11, 14], "get_appointments_by_provid": [11, 14], "get_appointments_rout": [11, 13], "get_available_slot": [11, 14], "get_available_slots_rout": [11, 13], "get_clinic_by_id": [10, 11], "get_context": [4, 11], "get_conversation_by_id": [11, 14], "get_conversation_by_particip": [11, 14], "get_conversation_messag": [11, 14], "get_conversation_messages_rout": [11, 13], "get_current_us": [11, 14], "get_current_user_id": [11, 14], "get_current_user_info_rout": [11, 13], "get_current_user_rol": [11, 14], "get_datetim": [10, 11], "get_duration_minut": [10, 11], "get_encounter_by_id": [10, 11], "get_encounter_by_id_rout": [11, 13], "get_encounters_by_pati": [10, 11], "get_encounters_by_patient_rout": [11, 13], "get_encryption_servic": [3, 11, 14], "get_full_nam": [10, 11], "get_llm_chat": [11, 14], "get_llm_chats_for_us": [11, 14], "get_openai_api_kei": [3, 10, 11, 14], "get_openai_security_servic": [11, 14], "get_patient_by_id": [10, 11], "get_redis_connect": [11, 14], "get_rel": [4, 11], "get_usage_stat": [0, 11, 14], "get_user_api_key_with_valid": [0, 11, 14], "get_user_by_email": [11, 14], "get_user_by_id": [11, 14], "get_user_by_usernam": [11, 14], "get_user_convers": [11, 14], "get_user_conversations_rout": [11, 13], "get_user_profile_rout": [11, 13], "get_user_set": [3, 11, 13, 14], "getal": 1, "getapi": 3, "getbyid": 1, "getsetdescriptortyp": [11, 15], "getter": [3, 11, 15], "given": [4, 6, 10, 13, 14], "global": 14, "gov": 14, "gpt": [4, 6], "gpt_4_1": [6, 11], "gpt_4_1_mini": [6, 11], "gpt_4_1_nano": [6, 11], "grace": 0, "graph": [4, 11], "graphcontrol": [4, 11], "green": [8, 11], "grei": [8, 11], "group": 13, "guarante": 2, "h": [2, 14], "ha": [0, 3, 4, 10, 13, 14], "handl": [3, 10, 13, 17], "handleappointmentremind": 2, "handlenewmessag": 2, "handler": 14, "handlesystemnotif": 2, "happen": 3, "has_kei": 3, "has_openai_api_kei": [3, 10, 11, 13, 14], "has_rol": [10, 11], "hash": 10, "hash_password": [10, 11], "have": [4, 10, 13, 14, 15], "headach": 13, "header": [6, 11, 13, 14], "health": 7, "health_check": [6, 7], "healthcar": [6, 10, 13], "heart": 13, "hello": [2, 13], "help": 6, "helper": 14, "here": 3, "hh": 14, "hide": 3, "high": 14, "highest": 0, "hipaa": 0, "histor": 0, "histori": [1, 6, 13], "hit": 14, "hook": 2, "host": 2, "hour": [0, 2, 14], "how": 17, "http": [0, 1, 2, 6, 13, 14], "httpx": 6, "hypertens": 11, "i": [0, 1, 2, 3, 4, 9, 10, 13, 14, 15], "icd": [11, 14], "icd10": 14, "icd10_cod": 14, "icd10cod": [10, 11, 14], "icd_cod": 10, "id": [2, 3, 4, 6, 10, 13, 14], "identif": 3, "identifi": 1, "immedi": [0, 2], "implement": [0, 1, 3, 4, 6], "import": [3, 10], "import_icd_cod": [10, 11], "inact": 13, "includ": [1, 2, 13, 14], "incomplet": 2, "index": [1, 10], "indic": [4, 7, 13], "inference_model": 4, "info": [8, 11], "inform": [0, 1, 3, 4, 6, 7, 10, 13, 14], "informationrecipi": 14, "inherit": 14, "init": [4, 11], "init_vec": [9, 11], "initi": [4, 7, 9, 13], "initial_guess": 14, "inject": 7, "inner": 9, "input": [0, 3, 14], "insensit": 13, "insert": [4, 10, 11], "inspect": 15, "instanc": [4, 6, 7, 9, 10, 14, 15], "instruct": 17, "int": [4, 9, 10, 13, 14, 15], "intak": 13, "integr": [1, 17], "intend": 13, "interact": [6, 10, 13, 14], "interfac": 2, "intern": 13, "invalid": [0, 1, 3, 10, 13], "ip": 0, "is_act": 10, "is_admin": [10, 11], "is_cancel": [10, 11], "is_complet": [10, 11], "is_confirm": [10, 11], "is_expir": [10, 11], "is_in_past": [10, 11], "is_particip": [10, 11], "is_pati": [10, 11], "is_provid": [10, 11], "is_read": [10, 13], "is_this_week": [10, 11], "is_todai": [10, 11], "is_valid": [0, 10, 14], "isai": 13, "iso": 1, "issu": [0, 13], "item": 4, "iter": 3, "its": [8, 10, 13, 14], "j": 17, "john": 13, "journal": 14, "json": [2, 3, 4, 6, 13, 14], "jsonl": 4, "k": 4, "keep": 6, "kei": [2, 3, 4, 6, 10, 13, 14], "kept": 4, "keyword": 8, "kilomet": 10, "km_m": [10, 11], "knowledg": 4, "knowledgeresponsetyp": 14, "kwarg": [6, 8, 9, 15], "kwd": 15, "label": 13, "lambdatyp": [11, 15], "languag": 10, "languagecod": 14, "larg": [4, 10], "last": [10, 13, 14], "last_message_at": [10, 13], "last_nam": [1, 9, 10, 11, 13, 14], "last_reset": 13, "lastmessag": [2, 13], "later": 0, "latitud": 10, "layer": 0, "least": [1, 13], "level": [3, 8, 14], "levelnam": 8, "leverag": 4, "lib": [2, 17], "librari": 8, "like": [10, 14], "limit": [2, 13, 14], "lineno": 8, "list": [1, 2, 4, 6, 9, 10, 13, 14, 15], "llm": [10, 11, 13, 14, 17], "llm_agent": 11, "llm_agent_endpoint_rout": [11, 13], "llm_chat": [0, 11], "llm_chat_servic": 11, "llmagent": [6, 11], "llmchat": [10, 11, 14], "llmchatservic": [11, 14], "llmmodel": [6, 11], "load": [1, 3, 9], "load_csv": [9, 11], "local": 2, "localhost": [2, 4], "locat": [1, 9, 10, 11, 13, 14], "log": [0, 1, 2, 3, 8, 10, 13, 14], "log_api_usag": [11, 14], "log_format": [8, 11], "logger": [4, 11, 14, 17], "logic": 4, "login": 13, "login_rout": [11, 13], "logout": [11, 13, 14], "logout_rout": [11, 13], "logrecord": 8, "longer": 2, "longitud": 10, "look": 10, "lookup_icd_cod": [10, 11], "m": 1, "maco": 2, "made": 13, "main": [9, 11, 12], "mainsearchcriteria": 14, "maintain": 0, "mainten": 0, "make": 14, "male": 1, "manag": [0, 1, 2, 3, 10, 12, 13, 14], "map": [2, 6], "mappingproxytyp": [11, 15], "mark": 14, "mark_messages_as_read": [11, 14], "master": 3, "master_kei": 14, "match": [10, 13, 14], "max_record": 14, "max_requests_per_hour": 0, "max_token": [4, 6], "maximum": [4, 14], "mcp": [6, 11], "mcp_init": [6, 11], "mcp_server": [6, 11], "mcp_tool": 11, "mcp_url": 6, "me": 13, "medic": [1, 2, 4, 10, 14], "medlin": [11, 14], "medlineplu": 14, "memberdescriptortyp": [11, 15], "memori": 0, "messag": [0, 1, 3, 6, 8, 10, 11, 13, 14], "message_id": 13, "message_object": 14, "message_text": 2, "meta": [9, 11, 14], "metaclass": 15, "metadata": [6, 7, 14], "meter": 10, "method": [0, 1, 3, 4, 6, 13, 14, 15], "methoddescriptortyp": [11, 15], "methodtyp": [11, 15], "methodwrappertyp": [11, 15], "metric": 13, "migrat": [0, 11, 17], "migration_openai_api_kei": 0, "mini": 6, "minut": [10, 14], "miss": 13, "mm": 14, "mobil": [2, 3], "mock": 14, "mode": 14, "model": [0, 4, 6, 9, 11, 14, 17], "modern": 3, "modifi": 6, "modul": [11, 17], "moduletyp": [11, 15], "monitor": [2, 14, 17], "more": 13, "mro": 15, "msg": [4, 8], "msg12345": 13, "msg_obj": 2, "multi": [0, 3], "multipl": 0, "must": [3, 13, 14], "n": [2, 4, 6, 9], "name": [4, 6, 8, 10, 13, 14, 15], "namespac": [4, 15], "nano": [4, 6], "navig": 2, "ncbi": [11, 14], "nearest": 4, "necessari": [4, 6, 13], "need": [0, 3, 4, 14], "neighbor": 4, "network": 0, "never": [0, 3], "new": [4, 10, 13, 14], "new_class": [11, 15], "new_password": [13, 14], "newli": [13, 14], "nif": 4, "no_show": [10, 11, 13], "node": 4, "none": [4, 6, 7, 8, 9, 10, 14, 15], "nonetyp": [11, 15], "normal": 15, "note": [0, 7, 9, 10, 13, 14], "note_id": [9, 10, 11], "note_text": [9, 11], "notif": [0, 3, 11, 17], "notificationtest": 2, "notimplementedtyp": [11, 15], "npm": 2, "nth": 9, "number": [1, 4, 9, 10, 13, 14], "nyou": [4, 6], "nyour": [4, 6], "o": 1, "object": [1, 4, 6, 7, 8, 9, 10, 13, 14, 15], "occur": [3, 4, 10, 13], "ok": 13, "old_password": 13, "onappointmentremind": 2, "one": [13, 14, 15], "onli": [3, 9, 10, 13, 14], "onnewmessag": 2, "onsystemnotif": 2, "openai": [3, 4, 6, 7, 10, 13, 14, 17], "openai_api_kei": [3, 10, 13], "openai_cli": 4, "openai_secur": 11, "openai_tool_def": [6, 7], "openaisecurityservic": [0, 11, 14], "oper": [3, 4, 10, 13, 17], "opt": [11, 17], "optim": [11, 12], "optimalmetadata": [11, 14], "optimalschema": [11, 12, 14], "optimalservic": [11, 14], "option": [0, 1, 4, 6, 10, 13, 14], "optional_auth": [11, 14], "orchestr": 9, "order": [4, 14], "other": [1, 2, 6, 13], "otherwis": [9, 10, 14], "out": 13, "outgo": 4, "output": 8, "overridden": 6, "overview": 17, "own": 0, "p": 2, "packag": [11, 17], "page": 2, "param": [4, 6, 7, 8, 9, 10, 12, 13, 14], "paramet": [4, 6, 10, 13, 14], "partial": [10, 13], "particip": [2, 10, 13, 14], "participant_id": 2, "participantid": 13, "particularli": 3, "pass": 15, "password": [4, 10, 13, 14], "past": [2, 10], "patch": [10, 13], "patch_intake_rout": [11, 13], "path": [4, 9, 10, 13], "patient": [6, 9, 11, 14, 17], "patient_data": 10, "patient_endpoint_rout": [11, 13], "patient_id": [1, 10, 13, 14], "patientapi": 1, "patientdata": 1, "patientdict": 10, "patientfactori": [9, 11], "patientid": 13, "patients_endpoint_rout": [11, 13], "payload": [11, 12, 13, 14], "pbkdf2": [0, 3], "pd": 12, "pep": 15, "per": 0, "perform": [0, 1, 4, 6, 10, 13], "period": 0, "persist": 2, "person": [1, 4], "phone": [1, 9, 10, 11, 13], "ping": 2, "placehold": 10, "plain": [0, 3, 7, 10, 14], "plaintextrespons": 7, "plan": 10, "platform": 0, "pleas": 0, "pm": 14, "pmid": 14, "point": [10, 17], "popul": 13, "port": 2, "post": [1, 2, 3, 13], "postapi": 3, "practic": 17, "prefer": [3, 10], "prefix": 3, "prepar": 15, "prepare_class": [11, 15], "prevconvers": 2, "prevent": [0, 1, 2], "preview": 13, "primarili": 14, "problem": [0, 12, 14], "problem_id": 14, "proce": 14, "process": [4, 6, 9], "process_tool_cal": [6, 11], "product": 4, "profil": [2, 3, 13], "progress": [0, 10], "prompt": 6, "proper": [0, 1], "properli": [1, 15], "properti": [14, 15], "provid": [0, 1, 2, 3, 4, 6, 10, 13, 14], "provider_id": [9, 10, 11, 13, 14], "proxi": 6, "pubdat": 14, "public": 13, "publish": 14, "publish_ev": [11, 14], "publish_event_with_buff": [2, 11, 14], "pubm": 14, "pubsub": 2, "pull": 6, "purpos": [5, 10, 14], "push": 2, "put": [1, 13], "py": 2, "python": [0, 2, 3, 4, 15], "q": [1, 13], "queri": [1, 4, 9, 10, 11, 13, 14], "question": [0, 4, 6], "r": 4, "radiu": 10, "rag": 4, "rag_chat": [4, 11], "rais": [4, 10, 14, 15], "random": [9, 13], "rang": 14, "rate": [2, 14], "rate_limit_window": 0, "react": [1, 2], "read": [1, 10, 14], "real": [0, 2, 3], "reason": [13, 14], "receiv": 2, "recommend": 3, "reconnect": 2, "record": [1, 4, 8, 9, 10, 14], "recordid": 10, "red": [8, 11], "redi": [14, 17], "redis_cli": [2, 11], "redis_host": 2, "redis_port": 2, "referenc": 10, "refresh": 2, "regist": [7, 13], "register_openai_tool": [6, 7], "register_rout": [11, 13], "register_tool": [6, 11], "regular": [0, 15], "regularli": [0, 3], "relat": [4, 6, 11, 13], "relationship": 4, "relev": [12, 13], "remain": 15, "remov": [3, 10, 13, 14, 15], "remove_particip": [10, 11], "replai": 2, "report": 0, "repres": [4, 6, 9, 10, 15], "represent": [10, 13, 14], "request": [6, 7, 13, 14], "requests_mad": 13, "requests_this_hour": 0, "requir": [0, 1, 2, 4, 6, 10, 13, 14], "require_admin": [11, 14], "require_auth": [11, 14], "require_pati": [11, 14], "require_provid": [11, 14], "require_rol": [11, 14], "required_rol": [10, 14], "reset": [0, 6, 8, 11], "reset_convers": [6, 11], "resolv": 15, "resolve_bas": [11, 15], "respons": [1, 3, 4, 6, 13, 14], "rest": [0, 3], "restor": [3, 6], "restrict": 0, "restructuredtext": 17, "result": [4, 6, 10, 13, 14], "retain": 6, "retmax": 14, "retri": 0, "retriev": [3, 4, 10, 13, 14], "return": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15], "review": 0, "role": [3, 6, 10, 13, 14], "rotat": [0, 3], "rout": [2, 11, 14, 15, 17], "routin": [10, 11, 13], "row": 9, "rpc": 4, "rtype": [4, 6, 7, 8, 9, 10, 12, 13, 14], "run": [2, 3, 4], "safeti": 14, "salt": 10, "same": 15, "sampl": 9, "save": [2, 3, 9, 14], "save_csv": [9, 11], "save_user_set": [3, 11, 14], "scenario": 0, "schedul": [10, 11, 13], "schedulingservic": [11, 14], "schema": [4, 6, 9, 10, 11, 12, 14, 17], "script": [2, 9], "seamless": 0, "search": [4, 10, 11, 13, 14], "search_clinics_by_loc": [10, 11], "search_encounter_histori": [10, 11], "search_encounters_rout": [11, 13], "search_icd_by_descript": [10, 11], "search_patient_histori": [10, 11], "search_patients_rout": [11, 13], "search_pubm": [11, 14], "search_term": [1, 10], "search_users_rout": [11, 13], "searchabl": 13, "second": 14, "secur": [14, 17], "securepassword": 13, "security_servic": 0, "see": [9, 17], "seed": [4, 9, 11], "select": [2, 4, 9, 11, 13], "select_mani": [4, 11], "select_n_random_rows_from_csv": [9, 11], "selectedconversationid": 2, "self": 0, "send": [6, 11, 13, 14], "send_message_rout": [11, 13], "sender": [2, 10, 13, 14], "sender_id": [10, 14], "sender_nam": 2, "sens": 14, "sensit": [2, 3, 10, 14], "sent": [2, 13, 14], "serial": [6, 10, 11], "serialize_encount": [10, 11], "serialize_pati": [10, 11], "server": [2, 6, 7, 13], "servic": [2, 6, 11, 13, 17], "session": [2, 4, 6, 10, 13, 14], "session_id": 6, "session_object": 14, "set": [2, 4, 8, 9, 10, 13, 14, 17], "set_openai_api_kei": [10, 11], "setconvers": 2, "setter": [3, 11, 15], "settings_rout": [11, 13], "setup": [9, 13, 17], "setup_default_admin": 13, "setup_default_admin_rout": [11, 13], "setup_user_set": 11, "setup_user_settings_schema": [9, 11], "sever": 8, "sex": [1, 9, 10, 11], "sha": 10, "share": 0, "short": 10, "short_descript": 10, "should": [4, 6, 10], "show": [1, 3, 13], "shown": 1, "side": 13, "sign": 4, "signin": [4, 11], "simpl": [4, 15], "simplenamespac": [11, 15], "simpli": 14, "sinc": 15, "singl": 4, "size": 9, "sk": [0, 3, 13], "slide": 0, "slot": [13, 14], "small": 4, "smith": 2, "soap": 10, "soap_not": 10, "soapnot": [10, 11], "solut": 3, "solv": 14, "solver": 14, "some": [4, 9, 10], "sourc": [4, 14], "spam": 2, "specialist": [10, 11, 13], "specialti": [10, 13], "specif": [0, 1, 4, 10, 13, 14], "specifi": [10, 13, 14, 15], "sql": [4, 10], "src": [2, 17], "sse": 17, "st": 13, "standard": [0, 8], "start": [3, 4, 6, 10, 13, 14], "start_dat": 14, "start_nod": 4, "start_tim": [10, 13, 14], "stat": 0, "state": [1, 3, 6, 10, 13], "statement": [4, 10], "static": 10, "statist": [13, 14, 17], "statu": [1, 7, 10, 13, 14], "status": 13, "step": 9, "still": 15, "storag": [0, 2, 3, 6, 10], "store": [1, 2, 3, 10, 14], "store_encount": [10, 11], "store_ev": [11, 14], "store_pati": [10, 11], "str": [2, 4, 6, 8, 9, 10, 12, 13, 14, 15], "stream": 2, "street": 10, "strength": 10, "string": [1, 3, 4, 10, 13, 14], "structur": [3, 9, 10, 17], "studi": 14, "style": [7, 8], "subclass": 15, "subject": 10, "submiss": [1, 9], "submodul": 11, "subpackag": 11, "subscrib": 2, "success": [0, 1, 3, 9, 10, 13, 14], "successfulli": [2, 3, 13], "sudo": 2, "summari": 14, "support": [2, 6, 10, 13, 17], "surreal": 11, "surreal_graph": 11, "surrealdb": [1, 4, 9, 10, 13], "surrealql": [4, 10], "surrealwrapp": [4, 11], "symmetr": 3, "synchron": 4, "syntax": 17, "system": [6, 10, 13, 17], "system_prompt": [4, 6], "t": [2, 3, 14, 15], "tabl": [1, 3, 4, 9, 10, 14], "table_nam": [4, 10], "target": 4, "task": [4, 6], "team": 0, "temperatur": 6, "term": [1, 2, 10], "test": [5, 9, 10, 11, 14, 17], "test_api_valid": 0, "test_crud": 1, "test_crud_rout": [11, 13], "test_encrypt": [0, 3], "test_rate_limit": 0, "test_redi": 2, "test_surrealdb_rout": [11, 13], "text": [0, 1, 2, 3, 4, 10, 13, 14], "thei": [10, 13], "thi": [0, 1, 2, 3, 4, 6, 9, 10, 13, 14, 15], "those": 13, "threat": 0, "through": [2, 15], "time": [0, 2, 3, 10, 13, 14], "timer": 0, "timestamp": [2, 13], "titl": 14, "to_dict": [6, 10, 11, 14], "to_geojson_point": [10, 11], "to_record": 4, "todai": 10, "todo": 4, "toggl": 3, "token": [0, 3, 4, 10, 13, 14], "tokens_us": [13, 14], "tool": [6, 7], "tool_cal": 6, "tool_def": 6, "tool_definit": 6, "tool_dict": 6, "tool_func_dict": 6, "tool_nam": 6, "toolcal": 6, "tostr": 2, "total": [13, 14], "tracebacktyp": [11, 15], "track": [0, 3], "trail": [0, 3], "transit": 3, "transmiss": 0, "treat": 15, "tree": [6, 11], "trial": 14, "troubleshoot": 17, "true": [0, 3, 8, 9, 10, 13, 14], "try": 0, "tsx": 2, "ttl": 2, "tupl": [6, 10, 13, 14, 15], "two": [4, 9, 13], "txt": 2, "type": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17], "typevar": 14, "ubuntu": 2, "ui": [2, 3, 13], "unauthor": [13, 14], "unexpect": 13, "union": [6, 10, 15], "uniontyp": [11, 15], "uniqu": 1, "up": [0, 4, 9, 10, 13, 14], "updat": [0, 2, 4, 10, 11, 13, 14, 15], "update_appoint": [11, 14], "update_appointment_rout": [11, 13], "update_clin": [10, 11], "update_encount": [10, 11], "update_encounter_rout": [11, 13], "update_openai_api_kei": [3, 11, 14], "update_pati": [10, 11], "update_us": [11, 14], "update_user_profile_rout": [11, 13], "update_user_set": [11, 13], "updated_at": [3, 10, 13], "upon": 13, "url": [4, 6, 13, 14], "us": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17], "usag": [4, 13, 14, 17], "usecallback": 2, "useev": 2, "user": [1, 2, 4, 6, 11, 14, 17], "user1": 13, "user123": 13, "user1_id": 13, "user2_id": 13, "user_count": 13, "user_id": [0, 3, 10, 13, 14], "user_object": 14, "user_servic": 11, "user_set": 11, "user_to_us": [10, 13, 14], "userid": 14, "usernam": [10, 13, 14], "users_exist": 13, "userservic": [3, 11, 14], "usersess": [10, 11, 14], "userset": [3, 9, 10, 11, 14], "util": 9, "v": [0, 14], "v2": 14, "valid": [1, 3, 8, 10, 11, 13, 14], "validate_api_kei": [0, 11, 14], "validate_email": [10, 11], "validate_openai_api_kei": [10, 11], "validate_password": [10, 11], "validate_phon": [10, 11], "validate_rol": [10, 11], "validate_sess": [11, 14], "validate_usernam": [10, 11], "valu": [6, 10, 13, 14], "valueerror": [10, 14], "var": 4, "variabl": 14, "variou": [6, 13, 14], "vec": 11, "vector": [4, 9], "verifi": [1, 2, 7, 9, 10, 13], "verify_password": [10, 11], "version": 15, "via": [2, 4, 13], "view": [1, 13], "violat": 0, "virtual": 15, "visit": 13, "vulner": 0, "w": 4, "wa": [10, 13], "wai": 3, "warn": [0, 8, 11], "webhook": 0, "websocket": 2, "week": 10, "were": [10, 13], "when": [0, 2, 3, 13, 15], "where": [9, 14], "whether": 13, "which": [0, 4], "while": [0, 6], "whitelist": 0, "who": 4, "whom": 14, "whose": 14, "wide": 0, "window": 0, "window_start": 0, "with_abstract": 14, "within": [10, 14], "within_limit": [0, 14], "without": 14, "work": [1, 3, 7, 13, 17], "wrapperdescriptortyp": [11, 15], "x": [2, 14], "x1b": 8, "yellow": [8, 11], "you": [2, 4], "your": [0, 2, 3, 4, 17], "yyyi": 14, "zip_cod": 10, "zipcod": 1}, "titles": ["OpenAI Security System", "Patient CRUD Operations", "Redis/SSE Notifications System", "User Settings System", "db package", "dummy_data module", "llm package", "llm.mcp package", "logger module", "migrations package", "models package", "lib", "opt package", "routes package", "services package", "types module", "app module", "ArsMedicaTech documentation"], "titleterms": {"1": [0, 1, 2, 3], "2": [0, 1, 2, 3], "3": [0, 1, 2, 3], "4": [0, 1, 3], "5": 1, "6": 1, "For": 0, "It": 2, "admin": 0, "agent": [0, 6], "all": 1, "analyt": 0, "api": [0, 1, 3, 14], "app": 16, "appoint": [2, 10, 13], "appointment_remind": 2, "architectur": [0, 2], "arsmedicatech": 17, "auth_decor": 14, "backend": [1, 2, 3], "best": [0, 3], "browser": 2, "chat": 13, "clinic": 10, "command": 2, "common": [0, 2, 3], "compon": [0, 1, 2, 3], "configur": [0, 2], "connect": 2, "consider": 0, "content": [4, 6, 7, 9, 10, 12, 13, 14, 17], "convers": 10, "conversation_servic": 14, "creat": 1, "crud": 1, "dashboard": 0, "data": [0, 1, 3], "databas": [1, 3], "db": 4, "debug": [2, 3], "delet": 1, "deliveri": 2, "demo": 9, "demo_util": 9, "depend": 2, "develop": 0, "document": 17, "dummy_data": 5, "encrypt": [3, 14], "endpoint": [1, 2, 3], "enhanc": [0, 1, 2, 3], "environ": [0, 3], "error": [0, 1], "event": 2, "exampl": 3, "extens": 3, "featur": [0, 3], "flow": 0, "frontend": [1, 2, 3], "futur": [0, 1, 2, 3], "get": [1, 3], "graph": 10, "handl": [0, 1, 2], "how": 2, "hypertens": 12, "icd": 10, "id": 1, "improv": 0, "instal": 2, "instruct": 2, "integr": [0, 2], "issu": [2, 3], "j": 1, "kei": 0, "lib": [0, 3, 11], "limit": 0, "llm": [0, 6, 7], "llm_agent": [0, 13], "llm_chat": 10, "llm_chat_servic": 14, "logger": 8, "make": 0, "mcp": 7, "mcp_init": 7, "mcp_server": 7, "mcp_tool": 6, "messag": 2, "migrat": 9, "mode": 3, "model": [3, 10], "modul": [4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16], "monitor": 0, "new": [1, 2], "new_messag": 2, "notif": [2, 14], "openai": 0, "openai_secur": [0, 14], "oper": 1, "opt": 12, "optim": 14, "overview": [0, 2, 3], "packag": [4, 6, 7, 9, 10, 12, 13, 14], "patient": [1, 10, 13], "patientform": 1, "patientlist": 1, "plan": 0, "point": 2, "practic": [0, 3], "process": 0, "protect": [0, 3], "publish": 2, "py": [0, 3], "rate": 0, "recoveri": 0, "redi": 2, "redis_cli": 14, "register_tool": 7, "remind": 2, "request": 0, "requir": 3, "respons": 0, "rout": [0, 1, 3, 13], "schedul": 14, "schema": [1, 3], "search": 1, "secur": [0, 3], "send": 2, "servic": [0, 1, 3, 14], "set": [0, 3], "setup": [2, 3], "setup_user_set": 9, "src": [1, 3], "sse": 2, "start": 2, "statist": 0, "structur": 1, "submodul": [4, 6, 7, 9, 10, 12, 13, 14], "subpackag": 6, "support": 0, "surreal": 4, "surreal_graph": 4, "system": [0, 2, 3], "system_notif": 2, "test": [0, 1, 2, 3, 13], "tree": 7, "troubleshoot": [2, 3], "tsx": 3, "type": [2, 15], "ui": 0, "updat": [1, 3], "usag": [0, 3], "user": [0, 3, 10, 13], "user_servic": [3, 14], "user_set": [3, 10], "valid": 0, "variabl": [0, 3], "vec": [4, 9], "work": 2}})