apiVersion: apps/v1
kind: StatefulSet
metadata: { name: surrealdb, namespace: {{ .Values.namespace }} }
spec:
  serviceName: surrealdb
  replicas: 1
  selector: { matchLabels: { app: surrealdb } }
  template:
    metadata: { labels: { app: surrealdb } }
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
        - name: fix-perms
          image: busybox
          command: [ "sh", "-c", "chown -R 1000:1000 /mydata || true" ]
          volumeMounts:
            - name: data
              mountPath: /mydata
              subPath: surrealdb
      containers:
        - name: surrealdb
          image: surrealdb/surrealdb:latest
          args:
            - start
            - rocksdb:/mydata/surreal.db
          env:
            - { name: SURREAL_USER, valueFrom: { secretKeyRef: { name: surreal-secret, key: user } } }
            - { name: SURREAL_PASS, valueFrom: { secretKeyRef: { name: surreal-secret, key: pass } } }
          ports: [ { containerPort: 8000 } ]
          volumeMounts:
            - { name: data, mountPath: /mydata }
  volumeClaimTemplates:
    - metadata: { name: data }
      spec:
        accessModes: [ ReadWriteOnce ]
        resources: { requests: { storage: 5Gi } }
---
apiVersion: v1
kind: Service
metadata: { name: surrealdb, namespace: {{ .Values.namespace }} }
spec:
  ports: [ { port: 8000 } ]
  selector: { app: surrealdb }
