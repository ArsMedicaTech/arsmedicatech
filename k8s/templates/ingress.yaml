apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.ingressName }}
  namespace: {{ .Values.namespace }}
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-{{ .Values.namespace }}
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600" # keep websockets alive
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/websocket-services: livekit
spec:
  ingressClassName: nginx
  tls:
    - hosts: [ {{ .Values.ingressName }}.{{ .Values.namespace }}.com ]
      secretName: tls-{{ .Values.ingressName }}-{{ .Values.namespace }}
  rules:
    - host: {{ .Values.ingressName }}.{{ .Values.namespace }}.com
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: flask-api
                port: { number: 80 }
          - path: /auth
            pathType: Prefix
            backend:
              service:
                name: flask-api
                port: { number: 80 }
          - path: /
            pathType: Prefix
            backend:
              service:
                name: react-frontend
                port: { number: 80 }
          - path: /mcp
            pathType: Prefix
            backend:
              service:
                name: mcp-server
                port:
                  number: 9000
          - path: /livekit
            pathType: Prefix
            backend:
              service:
                name: livekit-flask-api-service
                port:
                  number: 5001
          - path: /rtc
            pathType: Prefix
            backend:
              service:
                name: livekit
                port:
                  number: 7880
          - path: /twirp
            pathType: Prefix
            backend:
              service:
                name: livekit
                port:
                  number: 7880
          - path: /ner
            pathType: Prefix
            backend:
              service:
                name: micro-ner
                port:
                  number: 80
          - path: /reasoning
            pathType: Prefix
            backend:
              service:
                name: reasoning-engine
                port:
                  number: 80
